{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"update",
				"updatePlayerStatistics"
			],
			[
				"standing",
				"standingsCount"
			],
			[
				"stand",
				"standingsCount"
			],
			[
				"last",
				"lastStandings"
			],
			[
				"curre",
				"currentLobby"
			],
			[
				"current",
				"currentRnak"
			],
			[
				"game",
				"gameEnded"
			],
			[
				"play",
				"players"
			],
			[
				"check",
				"checkGameEnding"
			],
			[
				"countdown",
				"countdownInterval"
			],
			[
				"va",
				"value"
			],
			[
				"state",
				"stateObj"
			],
			[
				"valid",
				"validDirectionChange"
			],
			[
				"canvas",
				"canvasSize"
			],
			[
				"locatio",
				"locationChangeListener"
			],
			[
				"logout",
				"logoutListener"
			],
			[
				"saw",
				"spawnLocations"
			],
			[
				"canv",
				"canvasRender"
			],
			[
				"player",
				"playerForusername"
			],
			[
				"direction",
				"directionChanges"
			],
			[
				"direct",
				"directionChanges"
			],
			[
				"collides",
				"collidedPlayers"
			],
			[
				"transl",
				"translateRotation"
			],
			[
				"w",
				"width"
			],
			[
				"get",
				"getNextPlayerFieldDirection"
			],
			[
				"drawTile",
				"drawTileWithCoord"
			],
			[
				"event",
				"eventProcessed"
			],
			[
				"gener",
				"generateStringObject"
			],
			[
				"change",
				"changeLanguageSetting"
			],
			[
				"pre",
				"preloadImages"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/scripts/help/help.html",
			"settings":
			{
				"buffer_size": 34,
				"line_ending": "Unix"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/index.html",
			"settings":
			{
				"buffer_size": 7640,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 8621 files for \"blog\"\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\.htaccess:\n   47  # Send CORS headers if browsers request them; enabled by default for images.\n   48  # developer.mozilla.org/en/CORS_Enabled_Image\n   49: # blog.chromium.org/2011/07/using-cross-domain-images-in-webgl-and.html\n   50  # hacks.mozilla.org/2011/11/using-cors-to-load-webgl-textures-from-cross-domain-images/\n   51  # wiki.mozilla.org/Security/Reviews/crossoriginAttribute\n   ..\n  156  <IfModule mod_deflate.c>\n  157  \n  158:   # Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/\n  159    <IfModule mod_setenvif.c>\n  160      <IfModule mod_headers.c>\n  ...\n  206  # They assume you control versioning with filename-based cache busting\n  207  # Additionally, consider that outdated proxies may miscache\n  208: #   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/\n  209  \n  210  # If you don't use filenames to version, lower the CSS and JS to something like\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\locale_de-DE.json:\n   12      \"description\": \"\"\n   13    },\n   14:   \"_Blog_\": {\n   15:     \"message\": \"Blog\",\n   16      \"description\": \"\"\n   17    },\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\locale_en-US.json:\n   12      \"description\": \"\"\n   13    },\n   14:   \"_Blog_\": {\n   15:     \"message\": \"Blog\",\n   16      \"description\": \"\"\n   17    },\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\angular-scenario\\angular-scenario.js:\n  606  	// Evaluates a script in a global context\n  607  	// Workarounds based on findings by Jim Driscoll\n  608: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  609  	globalEval: function( data ) {\n  610  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2690  			get: function( elem ) {\n 2691  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2692: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2693  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2694  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\CONTRIBUTING.md:\n   57  - End all lines with a semi-colon\n   58  - For multiple, comma-separated selectors, place each selector on it's own line\n   59: - Attribute selectors, like `input[type=\"text\"]` should always wrap the attribute's value in double quotes, for consistency and safety (see this [blog post on unquoted attribute values](http://mathiasbynens.be/notes/unquoted-attribute-values) that can lead to XSS attacks).\n   60  \n   61  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\README.md:\n   46  \n   47  * Follow [@twbootstrap on Twitter](http://twitter.com/twbootstrap).\n   48: * Read and subscribe to the [The Official Twitter Bootstrap Blog](http://blog.getbootstrap.com).\n   49  * Have a question that's not a feature request or bug report? [Ask on the mailing list.](http://groups.google.com/group/twitter-bootstrap)\n   50  * Chat with fellow Bootstrappers in IRC. On the `irc.freenode.net` server, in the `##twitter-bootstrap` channel.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\base-css.html:\n 2185          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n 2186          <ul class=\"footer-links\">\n 2187:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n 2188            <li class=\"muted\">&middot;</li>\n 2189            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\components.html:\n 1688  \n 1689            <h2>Pager</h2>\n 1690:           <p>Quick previous and next links for simple pagination implementations with light markup and styles. It's great for simple sites like blogs or magazines.</p>\n 1691  \n 1692            <h3>Default example</h3>\n ....\n 2338              <h1>Media object</h1>\n 2339            </div>\n 2340:           <p class=\"lead\">Abstract object styles for building various types of components (like blog comments, Tweets, etc) that feature a left- or right-aligned image alongside textual content.</p>\n 2341  \n 2342            <h2>Default example</h2>\n ....\n 2596          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n 2597          <ul class=\"footer-links\">\n 2598:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n 2599            <li class=\"muted\">&middot;</li>\n 2600            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\customize.html:\n  484          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n  485          <ul class=\"footer-links\">\n  486:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n  487            <li class=\"muted\">&middot;</li>\n  488            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\extend.html:\n  116  \n  117            <h3>Why LESS?</h3>\n  118:           <p>One of Bootstrap's creators wrote a quick <a href=\"http://www.wordsbyf.at/2012/03/08/why-less/\">blog post about this</a>, summarized here:</p>\n  119            <ul>\n  120              <li>Bootstrap compiles faster ~6x faster with Less compared to Sass</li>\n  ...\n  252          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n  253          <ul class=\"footer-links\">\n  254:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n  255            <li class=\"muted\">&middot;</li>\n  256            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\getting-started.html:\n  347          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n  348          <ul class=\"footer-links\">\n  349:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n  350            <li class=\"muted\">&middot;</li>\n  351            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\index.html:\n  191          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n  192          <ul class=\"footer-links\">\n  193:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n  194            <li class=\"muted\">&middot;</li>\n  195            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\javascript.html:\n  573                <h4 id=\"three\">three</h4>\n  574                <p>Ad leggings keytar, brunch id art party dolor labore. Pitchfork yr enim lo-fi before they sold out qui. Tumblr farm-to-table bicycle rights whatever. Anim keffiyeh carles cardigan. Velit seitan mcsweeney's photo booth 3 wolf moon irure. Cosby sweater lomo jean shorts, williamsburg hoodie minim qui you probably haven't heard of them et cardigan trust fund culpa biodiesel wes anderson aesthetic. Nihil tattooed accusamus, cred irony biodiesel keffiyeh artisan ullamco consequat.</p>\n  575:               <p>Keytar twee blog, culpa messenger bag marfa whatever delectus food truck. Sapiente synth id assumenda. Locavore sed helvetica cliche irony, thundercats you probably haven't heard of them consequat hoodie gluten-free lo-fi fap aliquip. Labore elit placeat before they sold out, terry richardson proident brunch nesciunt quis cosby sweater pariatur keffiyeh ut helvetica artisan. Cardigan craft beer seitan readymade velit. VHS chambray laboris tempor veniam. Anim mollit minim commodo ullamco thundercats.\n  576                </p>\n  577              </div>\n  ...\n  673                </div>\n  674                <div class=\"tab-pane fade\" id=\"profile\">\n  675:                 <p>Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente accusamus tattooed echo park.</p>\n  676                </div>\n  677                <div class=\"tab-pane fade\" id=\"dropdown1\">\n  678:                 <p>Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog stumptown. Pitchfork sustainable tofu synth chambray yr.</p>\n  679                </div>\n  680                <div class=\"tab-pane fade\" id=\"dropdown2\">\n  ...\n 1750          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n 1751          <ul class=\"footer-links\">\n 1752:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n 1753            <li class=\"muted\">&middot;</li>\n 1754            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\scaffolding.html:\n  572          <p><a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n  573          <ul class=\"footer-links\">\n  574:           <li><a href=\"http://blog.getbootstrap.com\">Blog</a></li>\n  575            <li class=\"muted\">&middot;</li>\n  576            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Issues</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\templates\\layout.mustache:\n   94          <p>{{_i}}<a href=\"http://glyphicons.com\">Glyphicons Free</a> licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.{{/i}}</p>\n   95          <ul class=\"footer-links\">\n   96:           <li><a href=\"http://blog.getbootstrap.com\">{{_i}}Blog{{/i}}</a></li>\n   97            <li class=\"muted\">&middot;</li>\n   98            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">{{_i}}Issues{{/i}}</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\templates\\pages\\components.mustache:\n 1607  \n 1608            <h2>{{_i}}Pager{{/i}}</h2>\n 1609:           <p>{{_i}}Quick previous and next links for simple pagination implementations with light markup and styles. It's great for simple sites like blogs or magazines.{{/i}}</p>\n 1610  \n 1611            <h3>{{_i}}Default example{{/i}}</h3>\n ....\n 2257              <h1>{{_i}}Media object{{/i}}</h1>\n 2258            </div>\n 2259:           <p class=\"lead\">{{_i}}Abstract object styles for building various types of components (like blog comments, Tweets, etc) that feature a left- or right-aligned image alongside textual content.{{/i}}</p>\n 2260  \n 2261            <h2>{{_i}}Default example{{/i}}</h2>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\templates\\pages\\extend.mustache:\n   35  \n   36            <h3>{{_i}}Why LESS?{{/i}}</h3>\n   37:           <p>{{_i}}One of Bootstrap's creators wrote a quick <a href=\"http://www.wordsbyf.at/2012/03/08/why-less/\">blog post about this</a>, summarized here:{{/i}}</p>\n   38            <ul>\n   39              <li>{{_i}}Bootstrap compiles faster ~6x faster with Less compared to Sass{{/i}}</li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\docs\\templates\\pages\\javascript.mustache:\n  493                <h4 id=\"three\">three</h4>\n  494                <p>Ad leggings keytar, brunch id art party dolor labore. Pitchfork yr enim lo-fi before they sold out qui. Tumblr farm-to-table bicycle rights whatever. Anim keffiyeh carles cardigan. Velit seitan mcsweeney's photo booth 3 wolf moon irure. Cosby sweater lomo jean shorts, williamsburg hoodie minim qui you probably haven't heard of them et cardigan trust fund culpa biodiesel wes anderson aesthetic. Nihil tattooed accusamus, cred irony biodiesel keffiyeh artisan ullamco consequat.</p>\n  495:               <p>Keytar twee blog, culpa messenger bag marfa whatever delectus food truck. Sapiente synth id assumenda. Locavore sed helvetica cliche irony, thundercats you probably haven't heard of them consequat hoodie gluten-free lo-fi fap aliquip. Labore elit placeat before they sold out, terry richardson proident brunch nesciunt quis cosby sweater pariatur keffiyeh ut helvetica artisan. Cardigan craft beer seitan readymade velit. VHS chambray laboris tempor veniam. Anim mollit minim commodo ullamco thundercats.\n  496                </p>\n  497              </div>\n  ...\n  593                </div>\n  594                <div class=\"tab-pane fade\" id=\"profile\">\n  595:                 <p>Food truck fixie locavore, accusamus mcsweeney's marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente accusamus tattooed echo park.</p>\n  596                </div>\n  597                <div class=\"tab-pane fade\" id=\"dropdown1\">\n  598:                 <p>Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney's organic lomo retro fanny pack lo-fi farm-to-table readymade. Messenger bag gentrify pitchfork tattooed craft beer, iphone skateboard locavore carles etsy salvia banksy hoodie helvetica. DIY synth PBR banksy irony. Leggings gentrify squid 8-bit cred pitchfork. Williamsburg banh mi whatever gluten-free, carles pitchfork biodiesel fixie etsy retro mlkshk vice blog. Scenester cred you probably haven't heard of them, vinyl craft beer blog stumptown. Pitchfork sustainable tofu synth chambray yr.</p>\n  599                </div>\n  600                <div class=\"tab-pane fade\" id=\"dropdown2\">\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\js\\tests\\vendor\\qunit.js:\n 1154  /**\n 1155   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1156:  * http://flesler.blogspot.com Licensed under BSD\n 1157   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1158   *\n ....\n 1160   * @version 1.0.0\n 1161   * @author Ariel Flesler\n 1162:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1163   */\n 1164  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\bootstrap\\less\\tests\\css-tests.html:\n 1365          <p>Icons from <a href=\"http://glyphicons.com\">Glyphicons Free</a>, licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n 1366          <ul class=\"footer-links\">\n 1367:           <li><a href=\"http://blog.getbootstrap.com\">Read the blog</a></li>\n 1368            <li><a href=\"https://github.com/twbs/bootstrap/issues?state=open\">Submit issues</a></li>\n 1369            <li><a href=\"https://github.com/twbs/bootstrap/wiki\">Roadmap and changelog</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\es5-shim\\CHANGES:\n   74  0.0.4\n   75   - Revised Object.getPrototypeOf to work in more cases\n   76:    in response to http://ejohn.org/blog/objectgetprototypeof/\n   77     [issue #2] (fschaefer)\n   78  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\es5-shim\\es5-sham.js:\n   38  if (!Object.getPrototypeOf) {\n   39      // https://github.com/kriskowal/es5-shim/issues#issue/2\n   40:     // http://ejohn.org/blog/objectgetprototypeof/\n   41      // recommended by fschaefer on github\n   42      Object.getPrototypeOf = function getPrototypeOf(object) {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\es5-shim\\es5-shim.js:\n   22   * Annotated ES5: http://es5.github.com/ (specific links below)\n   23   * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\n   24:  * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/\n   25   */\n   26  \n   ..\n 1138      \"\\u2029\\uFEFF\";\n 1139  if (!String.prototype.trim || ws.trim()) {\n 1140:     // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n 1141      // http://perfectionkills.com/whitespace-deviations/\n 1142      ws = \"[\" + ws + \"]\";\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\font-awesome\\build\\assets\\less\\twbs-2.3.1\\tests\\css-tests.html:\n 1365          <p>Icons from <a href=\"http://glyphicons.com\">Glyphicons Free</a>, licensed under <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>.</p>\n 1366          <ul class=\"footer-links\">\n 1367:           <li><a href=\"http://blog.getbootstrap.com\">Read the blog</a></li>\n 1368            <li><a href=\"https://github.com/twitter/bootstrap/issues?state=open\">Submit issues</a></li>\n 1369            <li><a href=\"https://github.com/twitter/bootstrap/wiki\">Roadmap and changelog</a></li>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\json3\\vendor\\lodash.js:\n 4952      function template(text, data, options) {\n 4953        // based on John Resig's `tmpl` implementation\n 4954:       // http://ejohn.org/blog/javascript-micro-templating/\n 4955        // and Laura Doktorova's doT.js\n 4956        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\json3\\vendor\\require.js:\n 1854              //after page load where not getting initialized correctly.\n 1855              //Original approach suggested by Andrea Giammarchi:\n 1856:             //http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n 1857              //see other setReadyState reference for the rest of the fix.\n 1858              if (setReadyState) {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\underscore\\index.html:\n 2301          Fix for multiple single quotes within a template string for\n 2302          <tt>_.template</tt>. See:\n 2303:         <a href=\"http://www.west-wind.com/Weblog/posts/509108.aspx\">Rick Strahl's blog post</a>.\n 2304        </p>\n 2305  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\underscore\\test\\vendor\\jquery.js:\n  605  	// Evaluates a script in a global context\n  606  	// Workarounds based on findings by Jim Driscoll\n  607: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  608  	globalEval: function( data ) {\n  609  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2689  			get: function( elem ) {\n 2690  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2691: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2692  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2693  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\app\\components\\underscore\\test\\vendor\\qunit.js:\n 1572  /**\n 1573   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1574:  * http://flesler.blogspot.com Licensed under BSD\n 1575   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1576   *\n ....\n 1578   * @version 1.0.0\n 1579   * @author Ariel Flesler\n 1580:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1581   */\n 1582  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\fstream\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"fstream\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\fstream\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\fstream\\node_modules\\inherits\\package.json:\n   25      \"name\": \"Isaac Z. Schlueter\",\n   26      \"email\": \"i@izs.me\",\n   27:     \"url\": \"http://blog.izs.me/\"\n   28    },\n   29    \"scripts\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\glob\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"glob\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\glob\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   18      \"name\": \"Isaac Z. Schlueter\",\n   19      \"email\": \"i@izs.me\",\n   20:     \"url\": \"http://blog.izs.me/\"\n   21    },\n   22    \"readme\": \"A dead simple way to do inheritance in JS.\\n\\n    var inherits = require(\\\"inherits\\\")\\n\\n    function Animal () {\\n      this.alive = true\\n    }\\n    Animal.prototype.say = function (what) {\\n      console.log(what)\\n    }\\n\\n    inherits(Dog, Animal)\\n    function Dog () {\\n      Dog.super.apply(this)\\n    }\\n    Dog.prototype.sniff = function () {\\n      this.say(\\\"sniff sniff\\\")\\n    }\\n    Dog.prototype.bark = function () {\\n      this.say(\\\"woof woof\\\")\\n    }\\n\\n    inherits(Chihuahua, Dog)\\n    function Chihuahua () {\\n      Chihuahua.super.apply(this)\\n    }\\n    Chihuahua.prototype.bark = function () {\\n      this.say(\\\"yip yip\\\")\\n    }\\n\\n    // also works\\n    function Cat () {\\n      Cat.super.apply(this)\\n    }\\n    Cat.prototype.hiss = function () {\\n      this.say(\\\"CHSKKSS!!\\\")\\n    }\\n    inherits(Cat, Animal, {\\n      meow: function () { this.say(\\\"miao miao\\\") }\\n    })\\n    Cat.prototype.purr = function () {\\n      this.say(\\\"purr purr\\\")\\n    }\\n\\n\\n    var c = new Chihuahua\\n    assert(c instanceof Chihuahua)\\n    assert(c instanceof Dog)\\n    assert(c instanceof Animal)\\n\\nThe actual function is laughably small.  10-lines small.\\n\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\glob\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\glob\\node_modules\\minimatch\\node_modules\\sigmund\\package.json:\n   29      \"name\": \"Isaac Z. Schlueter\",\n   30      \"email\": \"i@izs.me\",\n   31:     \"url\": \"http://blog.izs.me/\"\n   32    },\n   33    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\hogan.js\\test\\jquery.js:\n  603  	// Evaluates a script in a global context\n  604  	// Workarounds based on findings by Jim Driscoll\n  605: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  606  	globalEval: function( data ) {\n  607  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2625  			get: function( elem ) {\n 2626  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2627: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2628  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2629  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\hogan.js\\test\\qunit.js:\n 1233  /**\n 1234   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1235:  * http://flesler.blogspot.com Licensed under BSD\n 1236   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1237   *\n ....\n 1239   * @version 1.0.0\n 1240   * @author Ariel Flesler\n 1241:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1242   */\n 1243  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\lodash.js:\n 4674    function template(text, data, options) {\n 4675      // based on John Resig's `tmpl` implementation\n 4676:     // http://ejohn.org/blog/javascript-micro-templating/\n 4677      // and Laura Doktorova's doT.js\n 4678      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\package.json:\n   50      \"test\": \"node ./test/test.js ./dist/lodash.js && node ./test/test.js ./dist/lodash.min.js && node ./test/test-build.js\"\n   51    },\n   52:   \"readme\": \"# Lo-Dash <sup>v1.0.1</sup>\\n[![build status](https://secure.travis-ci.org/bestiejs/lodash.png)](http://travis-ci.org/bestiejs/lodash)\\n\\nAn alternative to Underscore.js, delivering consistency, [customization](https://github.com/bestiejs/lodash#custom-builds), [performance](http://lodash.com/benchmarks), and [extra features](https://github.com/bestiejs/lodash#features).\\n\\n## Download\\n\\n* Lo-Dash builds (for modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.min.js)\\n\\n* Lo-Dash compatibility builds (for legacy and modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.compat.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.compat.min.js)\\n\\n* Underscore compatibility builds:<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.underscore.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.underscore.min.js)\\n\\n* CDN copies of ≤ v1.0.1’s builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/):<br>\\n[Lo-Dash dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.js),\\n[Lo-Dash prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.min.js),<br>\\n[Lo-Dash compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.compat.js),\\n[Lo-Dash compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.compat.min.js),<br>\\n[Underscore compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.underscore.js), and\\n[Underscore compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.underscore.min.js)\\n\\n* For optimal file size, [create a custom build](https://github.com/bestiejs/lodash#custom-builds) with only the features you need\\n\\n## Dive in\\n\\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\\n\\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/lodash/wiki/Roadmap).\\n\\n## Resources\\n\\nFor more information check out these articles, screencasts, and other videos over Lo-Dash:\\n\\n * Posts\\n  - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\\n\\n * Videos\\n  - [Introducing Lo-Dash](https://vimeo.com/44154599)\\n  - [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\\n  - [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\\n  - [Unit testing in Lo-Dash](https://vimeo.com/45865290)\\n  - [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\\n  - [CascadiaJS: Lo-Dash for a better utility belt](http://www.youtube.com/watch?v=dpPy4f_SeEk)\\n\\n## Features\\n\\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\\n * [_(…)](http://lodash.com/docs#_) supports intuitive chaining\\n * [_.at](http://lodash.com/docs#at) for cherry-picking collection values\\n * [_.bindKey](http://lodash.com/docs#bindKey) for binding [*“lazy”* defined](http://michaux.ca/articles/lazy-function-definition-pattern) methods\\n * [_.cloneDeep](http://lodash.com/docs#cloneDeep) for deep cloning arrays and objects\\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\\n * [_.merge](http://lodash.com/docs#merge) for a deep [_.extend](http://lodash.com/docs#extend)\\n * [_.partial](http://lodash.com/docs#partial) and [_.partialRight](http://lodash.com/docs#partialRight) for partial application without `this` binding\\n * [_.template](http://lodash.com/docs#template) supports [*“imports”* options](http://lodash.com/docs#templateSettings_imports), [ES6 template delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6), and [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\\n * [_.where](http://lodash.com/docs#where) supports deep object comparisons\\n * [_.clone](http://lodash.com/docs#clone), [_.omit](http://lodash.com/docs#omit), [_.pick](http://lodash.com/docs#pick),\\n   [and more…](http://lodash.com/docs \\\"_.assign, _.cloneDeep, _.first, _.initial, _.isEqual, _.last, _.merge, _.rest\\\") accept `callback` and `thisArg` arguments\\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\\n   [and more…](http://lodash.com/docs \\\"_.at, _.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where\\\") accept strings\\n * [_.filter](http://lodash.com/docs#filter), [_.find](http://lodash.com/docs#find), [_.map](http://lodash.com/docs#map),\\n   [and more…](http://lodash.com/docs \\\"_.countBy, _.every, _.first, _.groupBy, _.initial, _.last, _.max, _.min, _.reject, _.rest, _.some, _.sortBy, _.sortedIndex, _.uniq\\\") support *“_.pluck”* and *“_.where”* `callback` shorthands\\n\\n## Support\\n\\nLo-Dash has been tested in at least Chrome 5~24, Firefox 1~18, IE 6-10, Opera 9.25-12, Safari 3-6, Node.js 0.4.8-0.8.20, Narwhal 0.3.2, PhantomJS 1.8.1, RingoJS 0.9, and Rhino 1.7RC5.\\n\\n## Custom builds\\n\\nCustom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need.\\nTo top it off, we handle all method dependency and alias mapping for you.\\n\\n * Backbone builds, with only methods required by Backbone, may be created using the `backbone` modifier argument.\\n```bash\\nlodash backbone\\n```\\n\\n * CSP builds, supporting default [Content Security Policy](https://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html) restrictions, may be created using the `csp` modifier argument.\\n   The `csp` modifier is an alais of the `mobile` modifier. Lo-Dash may be used in Chrome extensions by using either the `csp`, `mobile`, or `underscore` build and using precompiled templates, or loading Lo-Dash in a [sandbox](http://developer.chrome.com/stable/extensions/sandboxingEval.html).\\n```bash\\nlodash csp\\n```\\n\\n * Legacy builds, tailored for older environments without [ES5 support](http://es5.github.com/), may be created using the `legacy` modifier argument.\\n```bash\\nlodash legacy\\n```\\n\\n * Modern builds, tailored for newer environments with ES5 support, may be created using the `modern` modifier argument.\\n```bash\\nlodash modern\\n```\\n\\n * Mobile builds, without method compilation and most bug fixes for old browsers, may be created using the `mobile` modifier argument.\\n```bash\\nlodash mobile\\n```\\n\\n * Strict builds, with `_.bindAll`, `_.defaults`, and `_.extend` in [strict mode](http://es5.github.com/#C), may be created using the `strict` modifier argument.\\n```bash\\nlodash strict\\n```\\n\\n * Underscore builds, tailored for projects already using Underscore, may be created using the `underscore` modifier argument.\\n```bash\\nlodash underscore\\n```\\n\\nCustom builds may be created using the following commands:\\n\\n * Use the `category` argument to pass comma separated categories of methods to include in the build.<br>\\n   Valid categories (case-insensitive) are *“arrays”*, *“chaining”*, *“collections”*, *“functions”*, *“objects”*, and *“utilities”*.\\n```bash\\nlodash category=collections,functions\\nlodash category=\\\"collections, functions\\\"\\n```\\n\\n * Use the `exports` argument to pass comma separated names of ways to export the `LoDash` function.<br>\\n   Valid exports are *“amd”*, *“commonjs”*, *“global”*, *“node”*, and *“none”*.\\n```bash\\nlodash exports=amd,commonjs,node\\nlodash exports=\\\"amd, commonjs, node\\\"\\n```\\n\\n * Use the `iife` argument to specify code to replace the immediately-invoked function expression that wraps Lo-Dash.\\n```bash\\nlodash iife=\\\"!function(window,undefined){%output%}(this)\\\"\\n```\\n\\n * Use the `include` argument to pass comma separated method/category names to include in the build.\\n```bash\\nlodash include=each,filter,map\\nlodash include=\\\"each, filter, map\\\"\\n```\\n\\n * Use the `minus` argument to pass comma separated method/category names to remove from those included in the build.\\n```bash\\nlodash underscore minus=result,shuffle\\nlodash underscore minus=\\\"result, shuffle\\\"\\n```\\n\\n * Use the `plus` argument to pass comma separated method/category names to add to those included in the build.\\n```bash\\nlodash backbone plus=random,template\\nlodash backbone plus=\\\"random, template\\\"\\n```\\n\\n * Use the `template` argument to pass the file path pattern used to match template files to precompile.\\n```bash\\nlodash template=\\\"./*.jst\\\"\\n```\\n\\n * Use the `settings` argument to pass the template settings used when precompiling templates.\\n```bash\\nlodash settings=\\\"{interpolate:/\\\\{\\\\{([\\\\s\\\\S]+?)\\\\}\\\\}/g}\\\"\\n```\\n\\n * Use the `moduleId` argument to specify the AMD module ID of Lo-Dash, which defaults to “lodash”, used by precompiled templates.\\n```bash\\nlodash moduleId=\\\"underscore\\\"\\n```\\n\\nAll arguments, except `legacy` with `csp`, `mobile`, `modern`, or `underscore`, may be combined.<br>\\nUnless specified by `-o` or `--output`, all files created are saved to the current working directory.\\n\\nThe following options are also supported:\\n\\n * `-c`, `--stdout` ......... Write output to standard output\\n * `-d`, `--debug` ........... Write only the non-minified development output\\n * `-h`, `--help` ............. Display help information\\n * `-m`, `--minify` ......... Write only the minified production output\\n * `-o`, `--output` ......... Write output to a given path/filename\\n * `-p`, `--source-map` .. Generate a source map for the minified output, using an optional source map URL\\n * `-s`, `--silent` ......... Skip status updates normally logged to the console\\n * `-V`, `--version` ....... Output current version of Lo-Dash\\n\\nThe `lodash` command-line utility is available when Lo-Dash is installed as a global package (i.e. `npm install -g lodash`).\\n\\n## Installation and usage\\n\\nIn browsers:\\n\\n```html\\n<script src=\\\"lodash.js\\\"></script>\\n```\\n\\nUsing [`npm`](http://npmjs.org/):\\n\\n```bash\\nnpm install lodash\\n\\nnpm install -g lodash\\nnpm link lodash\\n```\\n\\nTo avoid potential issues, update `npm` before installing Lo-Dash:\\n\\n```bash\\nnpm install npm -g\\n```\\n\\nIn [Node.js](http://nodejs.org/) and [RingoJS v0.8.0+](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash');\\n\\n// or as a drop-in replacement for Underscore\\nvar _ = require('lodash/lodash.underscore');\\n```\\n\\n**Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\\n\\nIn [RingoJS v0.7.0-](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash')._;\\n```\\n\\nIn [Rhino](http://www.mozilla.org/rhino/):\\n\\n```js\\nload('lodash.js');\\n```\\n\\nIn an AMD loader like [RequireJS](http://requirejs.org/):\\n\\n```js\\nrequire({\\n  'paths': {\\n    'underscore': 'path/to/lodash'\\n  }\\n},\\n['underscore'], function(_) {\\n  console.log(_.VERSION);\\n});\\n```\\n\\n## Release Notes\\n\\n### <sup>v1.0.1</sup>\\n\\n * Add support for specifying source map URLs in `-p`/`--source-map` build options\\n * Ensured the second argument passed to `_.assign` is not treated as a `callback`\\n * Ensured `-p`/`--source-map` build options correctly set the `sourceMappingURL`\\n * Made `-p`/`--source-map` build options set source map *“sources”* keys based on the builds performed\\n * Made `_.defer` use `setImmediate`, in Node.js, when available\\n * Made `_.where` search arrays for values regardless of their index position\\n * Removed dead code from `_.template`\\n\\nThe full changelog is available [here](https://github.com/bestiejs/lodash/wiki/Changelog).\\n\\n## BestieJS\\n\\nLo-Dash is part of the BestieJS *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5 precedents, unit testing, and plenty of documentation.\\n\\n## Author\\n\\n* [John-David Dalton](http://allyoucanleet.com/)\\n  [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](https://twitter.com/jdalton \\\"Follow @jdalton on Twitter\\\")\\n\\n## Contributors\\n\\n* [Kit Cambridge](http://kitcambridge.github.com/)\\n  [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \\\"Follow @kitcambridge on Twitter\\\")\\n* [Mathias Bynens](http://mathiasbynens.be/)\\n  [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \\\"Follow @mathias on Twitter\\\")\\n\",\n   53    \"readmeFilename\": \"README.md\",\n   54    \"_id\": \"lodash@1.0.1\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\README.md:\n   39  \n   40   * Posts\n   41:   - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\n   42  \n   43   * Videos\n   ..\n  219  ```\n  220  \n  221: **Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n  222  \n  223  In [RingoJS v0.7.0-](http://ringojs.org/):\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\dist\\lodash.compat.js:\n 4667    function template(text, data, options) {\n 4668      // based on John Resig's `tmpl` implementation\n 4669:     // http://ejohn.org/blog/javascript-micro-templating/\n 4670      // and Laura Doktorova's doT.js\n 4671      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\dist\\lodash.js:\n 4517    function template(text, data, options) {\n 4518      // based on John Resig's `tmpl` implementation\n 4519:     // http://ejohn.org/blog/javascript-micro-templating/\n 4520      // and Laura Doktorova's doT.js\n 4521      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\vendor\\qunit\\qunit\\qunit.js:\n 1752  /**\n 1753   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1754:  * http://flesler.blogspot.com Licensed under BSD\n 1755   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1756   *\n ....\n 1758   * @version 1.0.0\n 1759   * @author Ariel Flesler\n 1760:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1761   */\n 1762  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\lodash\\vendor\\tar\\vendor\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\nopt\\package.json:\n    6      \"name\": \"Isaac Z. Schlueter\",\n    7      \"email\": \"i@izs.me\",\n    8:     \"url\": \"http://blog.izs.me/\"\n    9    },\n   10    \"main\": \"lib/nopt.js\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\promptly\\node_modules\\read\\package.json:\n   15      \"name\": \"Isaac Z. Schlueter\",\n   16      \"email\": \"i@izs.me\",\n   17:     \"url\": \"http://blog.izs.me/\"\n   18    },\n   19    \"description\": \"read(1) for node programs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\promptly\\node_modules\\read\\node_modules\\mute-stream\\package.json:\n   24      \"name\": \"Isaac Z. Schlueter\",\n   25      \"email\": \"i@izs.me\",\n   26:     \"url\": \"http://blog.izs.me/\"\n   27    },\n   28    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\rc\\node_modules\\ini\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"ini\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\read-package-json\\package.json:\n    5      \"name\": \"Isaac Z. Schlueter\",\n    6      \"email\": \"i@izs.me\",\n    7:     \"url\": \"http://blog.izs.me/\"\n    8    },\n    9    \"description\": \"The thing npm uses to read package.json files with semantics and defaults and validation\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\read-package-json\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\read-package-json\\node_modules\\npmlog\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"npmlog\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\read-package-json\\node_modules\\slide\\package.json:\n    5      \"name\": \"Isaac Z. Schlueter\",\n    6      \"email\": \"i@izs.me\",\n    7:     \"url\": \"http://blog.izs.me/\"\n    8    },\n    9    \"contributors\": [\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\read-package-json\\test\\non-json.js:\n   10     { name: 'Isaac Z. Schlueter',\n   11       email: 'i@izs.me',\n   12:      url: 'http://blog.izs.me/' },\n   13    description: 'The thing npm uses to read package.json files with semantics and defaults and validation',\n   14    repository: \n   ..\n   50    \"name\": \"read-package-json\",\n   51    \"version\": \"0.1.1\",\n   52:   \"author\": \"Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)\",\n   53    \"description\": \"The thing npm uses to read package.json files with semantics and defaults and validation\",\n   54    \"repository\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\read-package-json\\test\\fixtures\\not-json.css:\n    7    \"name\": \"read-package-json\",\n    8    \"version\": \"0.1.1\",\n    9:   \"author\": \"Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)\",\n   10    \"description\": \"The thing npm uses to read package.json files with semantics and defaults and validation\",\n   11    \"repository\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   27        \"name\": \"Isaac Z. Schlueter\",\n   28        \"email\": \"i@izs.me\",\n   29:       \"url\": \"http://blog.izs.me\"\n   30      },\n   31      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\rimraf\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\tar\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"tar\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\tar\\node_modules\\block-stream\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"block-stream\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\tar\\node_modules\\inherits\\package.json:\n   25      \"name\": \"Isaac Z. Schlueter\",\n   26      \"email\": \"i@izs.me\",\n   27:     \"url\": \"http://blog.izs.me/\"\n   28    },\n   29    \"scripts\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\unzip\\node_modules\\readable-stream\\fs.js:\n 1137  // Realpath\n 1138  // Not using realpath(2) because it's bad.\n 1139: // See: http://insanecoding.blogspot.com/2007/11/pathmax-simply-isnt.html\n 1140  \n 1141  var normalize = pathModule.normalize;\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\unzip\\node_modules\\readable-stream\\package.json:\n   23      \"name\": \"Isaac Z. Schlueter\",\n   24      \"email\": \"i@izs.me\",\n   25:     \"url\": \"http://blog.izs.me/\"\n   26    },\n   27    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\unzip\\node_modules\\setimmediate\\package.json:\n   79      \"files\": \"test/tests.js\"\n   80    },\n   81:   \"readme\": \"<a href=\\\"http://ci.testling.com/NobleJS/setImmediate\\\">\\n    <img src=\\\"http://ci.testling.com/NobleJS/setImmediate.png\\\" alt=\\\"Testling-CI badge showing browser compliance\\\"\\n         align=\\\"right\\\">\\n</a>\\n\\n# setImmediate.js\\n**A NobleJS production**\\n\\n## Introduction\\n\\n**setImmediate.js** is a highly cross-browser implementation of the `setImmediate` and `clearImmediate` APIs, currently\\na [W3C draft spec][spec] from the Web Performance Working Group. `setImmediate` allows scripts to yield to the browser,\\nexecuting a given operation asynchronously, in a manner that is typically more efficient and consumes less power than\\nthe usual `setTimeout(..., 0)` pattern.\\n\\nsetImmediate.js runs at “full speed” in the following browsers and environments, using various clever tricks:\\n\\n * Internet Explorer 6+\\n * Firefox 3+\\n * WebKit\\n * Opera 9.5+\\n * Node.js\\n * Web workers in browsers that support `MessageChannel`, which I can't find solid info on.\\n\\nIn all other browsers we fall back to using `setTimeout`, so it's always safe to use.\\n\\n## The Tricks\\n\\n### `process.nextTick`\\n\\nIn Node.js versions below 0.9, `setImmediate` is not available, but [`process.nextTick`][nextTIck] is, so we use it to\\nshim support for a global `setImmediate`. In Node.js 0.9 and above, `setImmediate` is available.\\n\\nNote that we check for *actual* Node.js environments, not emulated ones like those produced by browserify or similar.\\nSuch emulated environments often already include a `process.nextTick` shim that's not as browser-compatible as\\nsetImmediate.js.\\n\\n### `postMessage`\\n\\nIn Firefox 3+, Internet Explorer 9+, all modern WebKit browsers, and Opera 9.5+, [`postMessage`][postMessage] is\\navailable and provides a good way to queue tasks on the event loop. It's quite the abuse, using a cross-document\\nmessaging protocol within the same document simply to get access to the event loop task queue, but until there are\\nnative implementations, this is the best option.\\n\\nNote that Internet Explorer 8 includes a synchronous version of `postMessage`. We detect this, or any other such\\nsynchronous implementation, and fall back to another trick.\\n\\n### `MessageChannel`\\n\\nUnfortunately, `postMessage` has completely different semantics inside web workers, and so cannot be used there. So we\\nturn to [`MessageChannel`][MessageChannel], which has worse browser support, but does work inside a web worker.\\n\\n### `<script> onreadystatechange`\\n\\nFor our last trick, we pull something out to make things fast in Internet Explorer versions 6 through 8: namely,\\ncreating a `<script>` element and firing our calls in its `onreadystatechange` event. This does execute in a future\\nturn of the event loop, and is also faster than `setTimeout(…, 0)`, so hey, why not?\\n\\n## Usage\\n\\nIn the browser, include it with a `<script>` tag; pretty simple.\\n\\nIn Node.js, do\\n\\n```\\nnpm install setimmediate\\n```\\n\\nthen\\n\\n```js\\nrequire(\\\"setimmediate\\\");\\n```\\n\\nsomewhere early in your app; it attaches to the global.\\n\\n## Demo\\n\\n* [Quick sort demo][cross-browser-demo]\\n \\n## Reference and Reading\\n\\n * [Efficient Script Yielding W3C Editor's Draft][spec]\\n * [W3C mailing list post introducing the specification][list-post]\\n * [IE Test Drive demo][ie-demo]\\n * [Introductory blog post by Nicholas C. Zakas][ncz]\\n\\n\\n[spec]: https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\\n[list-post]: http://lists.w3.org/Archives/Public/public-web-perf/2011Jun/0100.html\\n[ie-demo]: http://ie.microsoft.com/testdrive/Performance/setImmediateSorting/Default.html\\n[ncz]: http://www.nczonline.net/blog/2011/09/19/script-yielding-with-setimmediate/\\n[nextTick]: http://nodejs.org/docs/v0.8.16/api/process.html#process_process_nexttick_callback\\n[postMessage]: http://www.whatwg.org/specs/web-apps/current-work/multipage/web-messaging.html#posting-messages\\n[MessageChannel]: http://www.whatwg.org/specs/web-apps/current-work/multipage/web-messaging.html#channel-messaging\\n[cross-browser-demo]: http://jphpsf.github.com/setImmediate-shim-demo\\n\",\n   82    \"readmeFilename\": \"README.md\",\n   83    \"_id\": \"setimmediate@1.0.1\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\unzip\\node_modules\\setimmediate\\README.md:\n   84   * [W3C mailing list post introducing the specification][list-post]\n   85   * [IE Test Drive demo][ie-demo]\n   86:  * [Introductory blog post by Nicholas C. Zakas][ncz]\n   87  \n   88  \n   ..\n   90  [list-post]: http://lists.w3.org/Archives/Public/public-web-perf/2011Jun/0100.html\n   91  [ie-demo]: http://ie.microsoft.com/testdrive/Performance/setImmediateSorting/Default.html\n   92: [ncz]: http://www.nczonline.net/blog/2011/09/19/script-yielding-with-setimmediate/\n   93  [nextTick]: http://nodejs.org/docs/v0.8.16/api/process.html#process_process_nexttick_callback\n   94  [postMessage]: http://www.whatwg.org/specs/web-apps/current-work/multipage/web-messaging.html#posting-messages\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\unzip\\node_modules\\setimmediate\\qUnitTest\\lib\\qunit.js:\n 1119  /**\n 1120   * jsDump\n 1121:  * Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\n 1122   * Licensed under BSD (http://www.opensource.org/licenses/bsd-license.php)\n 1123   * Date: 5/15/2008\n ....\n 1125   * @version 1.0.0\n 1126   * @author Ariel Flesler\n 1127:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1128   */\n 1129  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\lodash.js:\n 5055      function template(text, data, options) {\n 5056        // based on John Resig's `tmpl` implementation\n 5057:       // http://ejohn.org/blog/javascript-micro-templating/\n 5058        // and Laura Doktorova's doT.js\n 5059        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\package.json:\n   37      \"main\": \"./dist/lodash.compat.js\"\n   38    },\n   39:   \"readme\": \"# Lo-Dash <sup>v1.2.1</sup>\\n\\nA low-level utility library delivering consistency, [customization](https://github.com/bestiejs/lodash#custom-builds), [performance](http://lodash.com/benchmarks), and [extra features](https://github.com/bestiejs/lodash#features).\\n\\n## Download\\n\\n* Lo-Dash builds (for modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.min.js)\\n\\n* Lo-Dash compatibility builds (for legacy and modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.compat.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.compat.min.js)\\n\\n* Underscore compatibility builds:<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.underscore.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.2.1/dist/lodash.underscore.min.js)\\n\\n* CDN copies of ≤ v1.2.1’s builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/):<br>\\n[Lo-Dash dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.js),\\n[Lo-Dash prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.min.js),<br>\\n[Lo-Dash compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.compat.js),\\n[Lo-Dash compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.compat.min.js),<br>\\n[Underscore compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.underscore.js), and\\n[Underscore compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.1/lodash.underscore.min.js)\\n\\n* For optimal file size, [create a custom build](https://github.com/bestiejs/lodash#custom-builds) with only the features you need\\n\\n## Dive in\\n\\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\\n\\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/lodash/wiki/Roadmap).\\n\\n## Resources\\n\\nFor more information check out these articles, screencasts, and other videos over Lo-Dash:\\n\\n * Posts\\n  - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\\n\\n * Videos\\n  - [Introducing Lo-Dash](https://vimeo.com/44154599)\\n  - [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\\n  - [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\\n  - [Unit testing in Lo-Dash](https://vimeo.com/45865290)\\n  - [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\\n  - [CascadiaJS: Lo-Dash for a better utility belt](http://www.youtube.com/watch?v=dpPy4f_SeEk)\\n\\n## Features\\n\\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\\n * [_(…)](http://lodash.com/docs#_) supports intuitive chaining\\n * [_.at](http://lodash.com/docs#at) for cherry-picking collection values\\n * [_.bindKey](http://lodash.com/docs#bindKey) for binding [*“lazy”* defined](http://michaux.ca/articles/lazy-function-definition-pattern) methods\\n * [_.cloneDeep](http://lodash.com/docs#cloneDeep) for deep cloning arrays and objects\\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\\n * [_.debounce](http://lodash.com/docs#debounce) and [_.throttle](http://lodash.com/docs#throttle) accept an `options` argument for more control\\n * [_.createCallback](http://lodash.com/docs#createCallback) to customize how callback arguments are handled and support callback shorthands in mixins\\n * [_.findIndex](http://lodash.com/docs#findIndex) and [_.findKey](http://lodash.com/docs#findKey) for finding indexes and keys of collections\\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\\n * [_.merge](http://lodash.com/docs#merge) for a deep [_.extend](http://lodash.com/docs#extend)\\n * [_.parseInt](http://lodash.com/docs#parseInt) for consistent cross-environment behavior\\n * [_.partial](http://lodash.com/docs#partial) and [_.partialRight](http://lodash.com/docs#partialRight) for partial application without `this` binding\\n * [_.runInContext](http://lodash.com/docs#runInContext) for easier mocking and extended environment support\\n * [_.support](http://lodash.com/docs#support) to flag environment features\\n * [_.template](http://lodash.com/docs#template) supports [*“imports”* options](http://lodash.com/docs#templateSettings_imports), [ES6 template delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6), and [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\\n * [_.unzip](http://lodash.com/docs#unzip) as the inverse of [_.zip](http://lodash.com/docs#zip)\\n * [_.where](http://lodash.com/docs#where) supports deep object comparisons\\n * [_.clone](http://lodash.com/docs#clone), [_.omit](http://lodash.com/docs#omit), [_.pick](http://lodash.com/docs#pick),\\n   [and more…](http://lodash.com/docs \\\"_.assign, _.cloneDeep, _.first, _.initial, _.isEqual, _.last, _.merge, _.rest\\\") accept `callback` and `thisArg` arguments\\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\\n   [and more…](http://lodash.com/docs \\\"_.at, _.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where\\\") accept strings\\n * [_.filter](http://lodash.com/docs#filter), [_.find](http://lodash.com/docs#find), [_.map](http://lodash.com/docs#map),\\n   [and more…](http://lodash.com/docs \\\"_.countBy, _.every, _.first, _.groupBy, _.initial, _.last, _.max, _.min, _.reject, _.rest, _.some, _.sortBy, _.sortedIndex, _.uniq\\\") support *“_.pluck”* and *“_.where”* `callback` shorthands\\n\\n## Support\\n\\nLo-Dash has been tested in at least Chrome 5~26, Firefox 2~20, IE 6-10, Opera 9.25~12, Safari 3-6, Node.js 0.4.8-0.10.5, Narwhal 0.3.2, PhantomJS 1.9.0, RingoJS 0.9, and Rhino 1.7RC5.\\n\\n## Custom builds\\n\\nCustom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need.\\nTo top it off, we handle all method dependency and alias mapping for you.\\nFor a more detailed summary over the differences between various builds, check out the [wiki entry](https://github.com/bestiejs/lodash/wiki/build-differences).\\n\\n * Backbone builds, with only methods required by Backbone, may be created using the `backbone` modifier argument.\\n```bash\\nlodash backbone\\n```\\n\\n * Legacy builds, tailored for older environments without [ES5 support](http://es5.github.com/), may be created using the `legacy` modifier argument.\\n```bash\\nlodash legacy\\n```\\n\\n * Modern builds, tailored for newer environments with ES5 support, may be created using the `modern` modifier argument.\\n```bash\\nlodash modern\\n```\\n\\n * Mobile builds, without method compilation and most bug fixes for old browsers, may be created using the `mobile` modifier argument.\\n```bash\\nlodash mobile\\n```\\n\\n * Strict builds, with `_.bindAll`, `_.defaults`, and `_.extend` in [strict mode](http://es5.github.com/#C), may be created using the `strict` modifier argument.\\n```bash\\nlodash strict\\n```\\n\\n * Underscore builds, tailored for projects already using Underscore, may be created using the `underscore` modifier argument.\\n```bash\\nlodash underscore\\n```\\n\\nCustom builds may be created using the following commands:\\n\\n * Use the `category` argument to pass comma separated categories of methods to include in the build.<br>\\n   Valid categories (case-insensitive) are *“arrays”*, *“chaining”*, *“collections”*, *“functions”*, *“objects”*, and *“utilities”*.\\n```bash\\nlodash category=collections,functions\\nlodash category=\\\"collections, functions\\\"\\n```\\n\\n * Use the `exports` argument to pass comma separated names of ways to export the `LoDash` function.<br>\\n   Valid exports are *“amd”*, *“commonjs”*, *“global”*, *“node”*, and *“none”*.\\n```bash\\nlodash exports=amd,commonjs,node\\nlodash exports=\\\"amd, commonjs, node\\\"\\n```\\n\\n * Use the `iife` argument to specify code to replace the immediately-invoked function expression that wraps Lo-Dash.\\n```bash\\nlodash iife=\\\"!function(window,undefined){%output%}(this)\\\"\\n```\\n\\n * Use the `include` argument to pass comma separated method/category names to include in the build.\\n```bash\\nlodash include=each,filter,map\\nlodash include=\\\"each, filter, map\\\"\\n```\\n\\n * Use the `minus` argument to pass comma separated method/category names to remove from those included in the build.\\n```bash\\nlodash underscore minus=result,shuffle\\nlodash underscore minus=\\\"result, shuffle\\\"\\n```\\n\\n * Use the `plus` argument to pass comma separated method/category names to add to those included in the build.\\n```bash\\nlodash backbone plus=random,template\\nlodash backbone plus=\\\"random, template\\\"\\n```\\n\\n * Use the `template` argument to pass the file path pattern used to match template files to precompile.\\n```bash\\nlodash template=\\\"./*.jst\\\"\\n```\\n\\n * Use the `settings` argument to pass the template settings used when precompiling templates.\\n```bash\\nlodash settings=\\\"{interpolate:/\\\\{\\\\{([\\\\s\\\\S]+?)\\\\}\\\\}/g}\\\"\\n```\\n\\n * Use the `moduleId` argument to specify the AMD module ID of Lo-Dash, which defaults to “lodash”, used by precompiled templates.\\n```bash\\nlodash moduleId=\\\"underscore\\\"\\n```\\n\\nAll arguments, except `legacy` with `mobile`, `modern`, or `underscore`, may be combined.<br>\\nUnless specified by `-o` or `--output`, all files created are saved to the current working directory.\\n\\nThe following options are also supported:\\n\\n * `-c`, `--stdout` ......... Write output to standard output\\n * `-d`, `--debug` ........... Write only the non-minified development output\\n * `-h`, `--help` ............. Display help information\\n * `-m`, `--minify` ......... Write only the minified production output\\n * `-o`, `--output` ......... Write output to a given path/filename\\n * `-p`, `--source-map` .. Generate a source map for the minified output, using an optional source map URL\\n * `-s`, `--silent` ......... Skip status updates normally logged to the console\\n * `-V`, `--version` ....... Output current version of Lo-Dash\\n\\nThe `lodash` command-line utility is available when Lo-Dash is installed as a global package (i.e. `npm install -g lodash`).\\n\\n## Installation and usage\\n\\nIn browsers:\\n\\n```html\\n<script src=\\\"lodash.js\\\"></script>\\n```\\n\\nUsing [`npm`](http://npmjs.org/):\\n\\n```bash\\nnpm install lodash\\n\\nnpm install -g lodash\\nnpm link lodash\\n```\\n\\nTo avoid potential issues, update `npm` before installing Lo-Dash:\\n\\n```bash\\nnpm install npm -g\\n```\\n\\nIn [Node.js](http://nodejs.org/) and [RingoJS ≥ v0.8.0](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash');\\n\\n// or as a drop-in replacement for Underscore\\nvar _ = require('lodash/dist/lodash.underscore');\\n```\\n\\n**Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\\n\\nIn [RingoJS ≤ v0.7.0](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash')._;\\n```\\n\\nIn [Rhino](http://www.mozilla.org/rhino/):\\n\\n```js\\nload('lodash.js');\\n```\\n\\nIn an AMD loader like [RequireJS](http://requirejs.org/):\\n\\n```js\\nrequire({\\n  'paths': {\\n    'underscore': 'path/to/lodash'\\n  }\\n},\\n['underscore'], function(_) {\\n  console.log(_.VERSION);\\n});\\n```\\n\\n## Release Notes\\n\\n### <sup>v1.2.1</sup>\\n\\n * Added Component package support\\n * Updated the build utility to work with changes in GitHub’s API\\n * Ensured `_.isPlainObject` works with objects created by `Object.create(null)`\\n * Ensured *“isType”* methods return `false` for subclassed values\\n * Ensured debounced functions, with `leading` and `trailing` calls enabled,<br>\\n   only perform trailing calls after they’re called more than once\\n\\nThe full changelog is available [here](https://github.com/bestiejs/lodash/wiki/Changelog).\\n\\n## BestieJS\\n\\nLo-Dash is part of the BestieJS *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5+ precedents, unit testing, and plenty of documentation.\\n\\n## Author\\n\\n| [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](http://twitter.com/jdalton \\\"Follow @jdalton on Twitter\\\") |\\n|---|\\n| [John-David Dalton](http://allyoucanleet.com/) |\\n\\n## Contributors\\n\\n| [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \\\"Follow @kitcambridge on Twitter\\\") | [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias \\\"Follow @mathias on Twitter\\\") |\\n|---|---|\\n| [Kit Cambridge](http://kitcambridge.github.io/) | [Mathias Bynens](http://mathiasbynens.be/) |\\n\",\n   40    \"readmeFilename\": \"README.md\",\n   41    \"_id\": \"lodash@1.2.1\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\README.md:\n   38  \n   39   * Posts\n   40:   - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\n   41  \n   42   * Videos\n   ..\n  220  ```\n  221  \n  222: **Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n  223  \n  224  In [RingoJS ≤ v0.7.0](http://ringojs.org/):\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\dist\\lodash.compat.js:\n 5046      function template(text, data, options) {\n 5047        // based on John Resig's `tmpl` implementation\n 5048:       // http://ejohn.org/blog/javascript-micro-templating/\n 5049        // and Laura Doktorova's doT.js\n 5050        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\dist\\lodash.js:\n 4786      function template(text, data, options) {\n 4787        // based on John Resig's `tmpl` implementation\n 4788:       // http://ejohn.org/blog/javascript-micro-templating/\n 4789        // and Laura Doktorova's doT.js\n 4790        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\dist\\lodash.legacy.js:\n 4972      function template(text, data, options) {\n 4973        // based on John Resig's `tmpl` implementation\n 4974:       // http://ejohn.org/blog/javascript-micro-templating/\n 4975        // and Laura Doktorova's doT.js\n 4976        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\dist\\lodash.mobile.js:\n 4864      function template(text, data, options) {\n 4865        // based on John Resig's `tmpl` implementation\n 4866:       // http://ejohn.org/blog/javascript-micro-templating/\n 4867        // and Laura Doktorova's doT.js\n 4868        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\lodash\\vendor\\tar\\vendor\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\yamljs\\node_modules\\argparse\\node_modules\\underscore\\index.html:\n 2301          Fix for multiple single quotes within a template string for\n 2302          <tt>_.template</tt>. See:\n 2303:         <a href=\"http://www.west-wind.com/Weblog/posts/509108.aspx\">Rick Strahl's blog post</a>.\n 2304        </p>\n 2305  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\yamljs\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\jquery.js:\n  605  	// Evaluates a script in a global context\n  606  	// Workarounds based on findings by Jim Driscoll\n  607: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  608  	globalEval: function( data ) {\n  609  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2689  			get: function( elem ) {\n 2690  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2691: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2692  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2693  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\configstore\\node_modules\\yamljs\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\qunit.js:\n 1572  /**\n 1573   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1574:  * http://flesler.blogspot.com Licensed under BSD\n 1575   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1576   *\n ....\n 1578   * @version 1.0.0\n 1579   * @author Ariel Flesler\n 1580:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1581   */\n 1582  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\request\\node_modules\\hawk\\lib\\browser.js:\n  393  \n  394          // Based on: parseURI 1.2.2\n  395:         // http://blog.stevenlevithan.com/archives/parseuri\n  396          // (c) Steven Levithan <stevenlevithan.com>\n  397          // MIT License\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\update-notifier\\node_modules\\request\\node_modules\\json-stringify-safe\\package.json:\n   20      \"name\": \"Isaac Z. Schlueter\",\n   21      \"email\": \"i@izs.me\",\n   22:     \"url\": \"http://blog.izs.me\"\n   23    },\n   24    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\bower\\node_modules\\which\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"which\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\connect-mongo\\node_modules\\mongodb\\CONTRIBUTING.md:\n    4  \n    5  - Before starting to write code, look for existing [tickets](https://github.com/mongodb/node-mongodb-native/issues) or [create one](https://github.com/mongodb/node-mongodb-native/issues/new) for your specific issue. That way you avoid working on something that might not be of interest or that has been addressed already in a different branch.\n    6: - Fork the [repo](https://github.com/mongodb/node-mongodb-native) _or_ for small documentation changes, navigate to the source on github and click the [Edit](https://github.com/blog/844-forking-with-the-edit-button) button.\n    7  - Follow the general coding style of the rest of the project:\n    8    - 2 space tabs\n    .\n   19  ### Documentation\n   20  \n   21: To contribute to the [API documentation](http://mongodb.github.com/node-mongodb-native/) just make your changes to the inline documentation of the appropriate [source code](https://github.com/mongodb/node-mongodb-native/tree/master/docs) in the master branch and submit a [pull request](https://help.github.com/articles/using-pull-requests/). You might also use the github [Edit](https://github.com/blog/844-forking-with-the-edit-button) button.\n   22  \n   23  If you'd like to preview your documentation changes, first commit your changes to your local master branch, then execute `make generate_docs`. Make sure you have the python documentation framework sphinx installed `easy_install sphinx`. The docs are generated under `docs/build'. If all looks good, submit a [pull request](https://help.github.com/articles/using-pull-requests/) to the master branch with your changes.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\express\\History.md:\n  629    * Fixed `SlowBuffer` support. Closes #584 [reported by tyrda01]\n  630    * Fixed .filename view engine option [reported by drudge]\n  631:   * Fixed blog example\n  632    * Fixed `{req,res}.app` reference when mounting [Ben Weaver]\n  633  \n  ...\n  764      vs previously `partial('user', { object: user })`.\n  765    * Added _route-separation_ example since many people question ways\n  766:     to do this with CommonJS modules. Also view the _blog_ example for\n  767      an alternative.\n  768    * Performance; caching view path derived partial object names\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\express\\lib\\application.js:\n  266   * For example if the application was\n  267   * mounted as \"/admin\", which itself\n  268:  * was mounted as \"/blog\" then the\n  269:  * return value would be \"/blog/admin\".\n  270   *\n  271   * @return {String}\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\express\\lib\\response.js:\n  605   *    res.location('/foo/bar').;\n  606   *    res.location('http://example.com');\n  607:  *    res.location('../login'); // /blog/post/1 -> /blog/login\n  608   *\n  609   * Mounting:\n  ...\n  612   *   is given a path that does _not_ lead with \"/\" it becomes\n  613   *   relative to the mount-point. For example if the application\n  614:  *   is mounted at \"/blog\", the following would become \"/blog/login\".\n  615   *\n  616   *      res.location('login');\n  ...\n  668   *    res.redirect(301, 'http://example.com');\n  669   *    res.redirect('http://example.com', 301);\n  670:  *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n  671   *\n  672   * @param {String} url\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\dateformat\\package.json:\n   14      \"node\": \"*\"\n   15    },\n   16:   \"readme\": \"# node-dateformat\\n\\nA node.js package for Steven Levithan's excellent [dateFormat()][dateformat] function.\\n\\n## Modifications\\n\\n* Removed the `Date.prototype.format` method. Sorry folks, but extending native prototypes is for suckers.\\n* Added a `module.exports = dateFormat;` statement at the bottom\\n\\n## Usage\\n\\nAs taken from Steven's post, modified to match the Modifications listed above:\\n\\n    var dateFormat = require('dateformat');\\n    var now = new Date();\\n\\n    // Basic usage\\n    dateFormat(now, \\\"dddd, mmmm dS, yyyy, h:MM:ss TT\\\");\\n    // Saturday, June 9th, 2007, 5:46:21 PM\\n\\n    // You can use one of several named masks\\n    dateFormat(now, \\\"isoDateTime\\\");\\n    // 2007-06-09T17:46:21\\n\\n    // ...Or add your own\\n    dateFormat.masks.hammerTime = 'HH:MM! \\\"Can\\\\'t touch this!\\\"';\\n    dateFormat(now, \\\"hammerTime\\\");\\n    // 17:46! Can't touch this!\\n\\n    // When using the standalone dateFormat function,\\n    // you can also provide the date as a string\\n    dateFormat(\\\"Jun 9 2007\\\", \\\"fullDate\\\");\\n    // Saturday, June 9, 2007\\n\\n    // Note that if you don't include the mask argument,\\n    // dateFormat.masks.default is used\\n    dateFormat(now);\\n    // Sat Jun 09 2007 17:46:21\\n\\n    // And if you don't include the date argument,\\n    // the current date and time is used\\n    dateFormat();\\n    // Sat Jun 09 2007 17:46:22\\n\\n    // You can also skip the date argument (as long as your mask doesn't\\n    // contain any numbers), in which case the current date/time is used\\n    dateFormat(\\\"longTime\\\");\\n    // 5:46:22 PM EST\\n\\n    // And finally, you can convert local time to UTC time. Simply pass in\\n    // true as an additional argument (no argument skipping allowed in this case):\\n    dateFormat(now, \\\"longTime\\\", true);\\n    // 10:46:21 PM UTC\\n\\n    // ...Or add the prefix \\\"UTC:\\\" to your mask.\\n    dateFormat(now, \\\"UTC:h:MM:ss TT Z\\\");\\n    // 10:46:21 PM UTC\\n\\n    // You can also get the ISO 8601 week of the year:\\n    dateFormat(now, \\\"W\\\");\\n    // 42\\n## License\\n\\n(c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\\n\\n[dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\\n[stevenlevithan]: http://stevenlevithan.com/\\n\",\n   17    \"readmeFilename\": \"Readme.md\",\n   18    \"_id\": \"dateformat@1.0.2-1.2.3\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\dateformat\\Readme.md:\n   64  (c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\n   65  \n   66: [dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\n   67  [stevenlevithan]: http://stevenlevithan.com/\n   68  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\dateformat\\lib\\dateformat.js:\n   26       * Get the ISO 8601 week number\n   27       * Based on comments from\n   28:      * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   29       */\n   30      getWeek = function (date) {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\lodash.js:\n 4674    function template(text, data, options) {\n 4675      // based on John Resig's `tmpl` implementation\n 4676:     // http://ejohn.org/blog/javascript-micro-templating/\n 4677      // and Laura Doktorova's doT.js\n 4678      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\package.json:\n   50      \"test\": \"node ./test/test.js ./dist/lodash.js && node ./test/test.js ./dist/lodash.min.js && node ./test/test-build.js\"\n   51    },\n   52:   \"readme\": \"# Lo-Dash <sup>v1.0.1</sup>\\n[![build status](https://secure.travis-ci.org/bestiejs/lodash.png)](http://travis-ci.org/bestiejs/lodash)\\n\\nAn alternative to Underscore.js, delivering consistency, [customization](https://github.com/bestiejs/lodash#custom-builds), [performance](http://lodash.com/benchmarks), and [extra features](https://github.com/bestiejs/lodash#features).\\n\\n## Download\\n\\n* Lo-Dash builds (for modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.min.js)\\n\\n* Lo-Dash compatibility builds (for legacy and modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.compat.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.compat.min.js)\\n\\n* Underscore compatibility builds:<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.underscore.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.0.1/dist/lodash.underscore.min.js)\\n\\n* CDN copies of ≤ v1.0.1’s builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/):<br>\\n[Lo-Dash dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.js),\\n[Lo-Dash prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.min.js),<br>\\n[Lo-Dash compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.compat.js),\\n[Lo-Dash compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.compat.min.js),<br>\\n[Underscore compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.underscore.js), and\\n[Underscore compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.0.1/lodash.underscore.min.js)\\n\\n* For optimal file size, [create a custom build](https://github.com/bestiejs/lodash#custom-builds) with only the features you need\\n\\n## Dive in\\n\\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\\n\\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/lodash/wiki/Roadmap).\\n\\n## Resources\\n\\nFor more information check out these articles, screencasts, and other videos over Lo-Dash:\\n\\n * Posts\\n  - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\\n\\n * Videos\\n  - [Introducing Lo-Dash](https://vimeo.com/44154599)\\n  - [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\\n  - [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\\n  - [Unit testing in Lo-Dash](https://vimeo.com/45865290)\\n  - [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\\n  - [CascadiaJS: Lo-Dash for a better utility belt](http://www.youtube.com/watch?v=dpPy4f_SeEk)\\n\\n## Features\\n\\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\\n * [_(…)](http://lodash.com/docs#_) supports intuitive chaining\\n * [_.at](http://lodash.com/docs#at) for cherry-picking collection values\\n * [_.bindKey](http://lodash.com/docs#bindKey) for binding [*“lazy”* defined](http://michaux.ca/articles/lazy-function-definition-pattern) methods\\n * [_.cloneDeep](http://lodash.com/docs#cloneDeep) for deep cloning arrays and objects\\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\\n * [_.merge](http://lodash.com/docs#merge) for a deep [_.extend](http://lodash.com/docs#extend)\\n * [_.partial](http://lodash.com/docs#partial) and [_.partialRight](http://lodash.com/docs#partialRight) for partial application without `this` binding\\n * [_.template](http://lodash.com/docs#template) supports [*“imports”* options](http://lodash.com/docs#templateSettings_imports), [ES6 template delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6), and [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\\n * [_.where](http://lodash.com/docs#where) supports deep object comparisons\\n * [_.clone](http://lodash.com/docs#clone), [_.omit](http://lodash.com/docs#omit), [_.pick](http://lodash.com/docs#pick),\\n   [and more…](http://lodash.com/docs \\\"_.assign, _.cloneDeep, _.first, _.initial, _.isEqual, _.last, _.merge, _.rest\\\") accept `callback` and `thisArg` arguments\\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\\n   [and more…](http://lodash.com/docs \\\"_.at, _.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where\\\") accept strings\\n * [_.filter](http://lodash.com/docs#filter), [_.find](http://lodash.com/docs#find), [_.map](http://lodash.com/docs#map),\\n   [and more…](http://lodash.com/docs \\\"_.countBy, _.every, _.first, _.groupBy, _.initial, _.last, _.max, _.min, _.reject, _.rest, _.some, _.sortBy, _.sortedIndex, _.uniq\\\") support *“_.pluck”* and *“_.where”* `callback` shorthands\\n\\n## Support\\n\\nLo-Dash has been tested in at least Chrome 5~24, Firefox 1~18, IE 6-10, Opera 9.25-12, Safari 3-6, Node.js 0.4.8-0.8.20, Narwhal 0.3.2, PhantomJS 1.8.1, RingoJS 0.9, and Rhino 1.7RC5.\\n\\n## Custom builds\\n\\nCustom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need.\\nTo top it off, we handle all method dependency and alias mapping for you.\\n\\n * Backbone builds, with only methods required by Backbone, may be created using the `backbone` modifier argument.\\n```bash\\nlodash backbone\\n```\\n\\n * CSP builds, supporting default [Content Security Policy](https://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html) restrictions, may be created using the `csp` modifier argument.\\n   The `csp` modifier is an alais of the `mobile` modifier. Lo-Dash may be used in Chrome extensions by using either the `csp`, `mobile`, or `underscore` build and using precompiled templates, or loading Lo-Dash in a [sandbox](http://developer.chrome.com/stable/extensions/sandboxingEval.html).\\n```bash\\nlodash csp\\n```\\n\\n * Legacy builds, tailored for older environments without [ES5 support](http://es5.github.com/), may be created using the `legacy` modifier argument.\\n```bash\\nlodash legacy\\n```\\n\\n * Modern builds, tailored for newer environments with ES5 support, may be created using the `modern` modifier argument.\\n```bash\\nlodash modern\\n```\\n\\n * Mobile builds, without method compilation and most bug fixes for old browsers, may be created using the `mobile` modifier argument.\\n```bash\\nlodash mobile\\n```\\n\\n * Strict builds, with `_.bindAll`, `_.defaults`, and `_.extend` in [strict mode](http://es5.github.com/#C), may be created using the `strict` modifier argument.\\n```bash\\nlodash strict\\n```\\n\\n * Underscore builds, tailored for projects already using Underscore, may be created using the `underscore` modifier argument.\\n```bash\\nlodash underscore\\n```\\n\\nCustom builds may be created using the following commands:\\n\\n * Use the `category` argument to pass comma separated categories of methods to include in the build.<br>\\n   Valid categories (case-insensitive) are *“arrays”*, *“chaining”*, *“collections”*, *“functions”*, *“objects”*, and *“utilities”*.\\n```bash\\nlodash category=collections,functions\\nlodash category=\\\"collections, functions\\\"\\n```\\n\\n * Use the `exports` argument to pass comma separated names of ways to export the `LoDash` function.<br>\\n   Valid exports are *“amd”*, *“commonjs”*, *“global”*, *“node”*, and *“none”*.\\n```bash\\nlodash exports=amd,commonjs,node\\nlodash exports=\\\"amd, commonjs, node\\\"\\n```\\n\\n * Use the `iife` argument to specify code to replace the immediately-invoked function expression that wraps Lo-Dash.\\n```bash\\nlodash iife=\\\"!function(window,undefined){%output%}(this)\\\"\\n```\\n\\n * Use the `include` argument to pass comma separated method/category names to include in the build.\\n```bash\\nlodash include=each,filter,map\\nlodash include=\\\"each, filter, map\\\"\\n```\\n\\n * Use the `minus` argument to pass comma separated method/category names to remove from those included in the build.\\n```bash\\nlodash underscore minus=result,shuffle\\nlodash underscore minus=\\\"result, shuffle\\\"\\n```\\n\\n * Use the `plus` argument to pass comma separated method/category names to add to those included in the build.\\n```bash\\nlodash backbone plus=random,template\\nlodash backbone plus=\\\"random, template\\\"\\n```\\n\\n * Use the `template` argument to pass the file path pattern used to match template files to precompile.\\n```bash\\nlodash template=\\\"./*.jst\\\"\\n```\\n\\n * Use the `settings` argument to pass the template settings used when precompiling templates.\\n```bash\\nlodash settings=\\\"{interpolate:/\\\\{\\\\{([\\\\s\\\\S]+?)\\\\}\\\\}/g}\\\"\\n```\\n\\n * Use the `moduleId` argument to specify the AMD module ID of Lo-Dash, which defaults to “lodash”, used by precompiled templates.\\n```bash\\nlodash moduleId=\\\"underscore\\\"\\n```\\n\\nAll arguments, except `legacy` with `csp`, `mobile`, `modern`, or `underscore`, may be combined.<br>\\nUnless specified by `-o` or `--output`, all files created are saved to the current working directory.\\n\\nThe following options are also supported:\\n\\n * `-c`, `--stdout` ......... Write output to standard output\\n * `-d`, `--debug` ........... Write only the non-minified development output\\n * `-h`, `--help` ............. Display help information\\n * `-m`, `--minify` ......... Write only the minified production output\\n * `-o`, `--output` ......... Write output to a given path/filename\\n * `-p`, `--source-map` .. Generate a source map for the minified output, using an optional source map URL\\n * `-s`, `--silent` ......... Skip status updates normally logged to the console\\n * `-V`, `--version` ....... Output current version of Lo-Dash\\n\\nThe `lodash` command-line utility is available when Lo-Dash is installed as a global package (i.e. `npm install -g lodash`).\\n\\n## Installation and usage\\n\\nIn browsers:\\n\\n```html\\n<script src=\\\"lodash.js\\\"></script>\\n```\\n\\nUsing [`npm`](http://npmjs.org/):\\n\\n```bash\\nnpm install lodash\\n\\nnpm install -g lodash\\nnpm link lodash\\n```\\n\\nTo avoid potential issues, update `npm` before installing Lo-Dash:\\n\\n```bash\\nnpm install npm -g\\n```\\n\\nIn [Node.js](http://nodejs.org/) and [RingoJS v0.8.0+](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash');\\n\\n// or as a drop-in replacement for Underscore\\nvar _ = require('lodash/lodash.underscore');\\n```\\n\\n**Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\\n\\nIn [RingoJS v0.7.0-](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash')._;\\n```\\n\\nIn [Rhino](http://www.mozilla.org/rhino/):\\n\\n```js\\nload('lodash.js');\\n```\\n\\nIn an AMD loader like [RequireJS](http://requirejs.org/):\\n\\n```js\\nrequire({\\n  'paths': {\\n    'underscore': 'path/to/lodash'\\n  }\\n},\\n['underscore'], function(_) {\\n  console.log(_.VERSION);\\n});\\n```\\n\\n## Release Notes\\n\\n### <sup>v1.0.1</sup>\\n\\n * Add support for specifying source map URLs in `-p`/`--source-map` build options\\n * Ensured the second argument passed to `_.assign` is not treated as a `callback`\\n * Ensured `-p`/`--source-map` build options correctly set the `sourceMappingURL`\\n * Made `-p`/`--source-map` build options set source map *“sources”* keys based on the builds performed\\n * Made `_.defer` use `setImmediate`, in Node.js, when available\\n * Made `_.where` search arrays for values regardless of their index position\\n * Removed dead code from `_.template`\\n\\nThe full changelog is available [here](https://github.com/bestiejs/lodash/wiki/Changelog).\\n\\n## BestieJS\\n\\nLo-Dash is part of the BestieJS *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5 precedents, unit testing, and plenty of documentation.\\n\\n## Author\\n\\n* [John-David Dalton](http://allyoucanleet.com/)\\n  [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](https://twitter.com/jdalton \\\"Follow @jdalton on Twitter\\\")\\n\\n## Contributors\\n\\n* [Kit Cambridge](http://kitcambridge.github.com/)\\n  [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \\\"Follow @kitcambridge on Twitter\\\")\\n* [Mathias Bynens](http://mathiasbynens.be/)\\n  [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \\\"Follow @mathias on Twitter\\\")\\n\",\n   53    \"readmeFilename\": \"README.md\",\n   54    \"_id\": \"lodash@1.0.1\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\README.md:\n   39  \n   40   * Posts\n   41:   - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\n   42  \n   43   * Videos\n   ..\n  219  ```\n  220  \n  221: **Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n  222  \n  223  In [RingoJS v0.7.0-](http://ringojs.org/):\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.compat.js:\n 4667    function template(text, data, options) {\n 4668      // based on John Resig's `tmpl` implementation\n 4669:     // http://ejohn.org/blog/javascript-micro-templating/\n 4670      // and Laura Doktorova's doT.js\n 4671      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\dist\\lodash.js:\n 4517    function template(text, data, options) {\n 4518      // based on John Resig's `tmpl` implementation\n 4519:     // http://ejohn.org/blog/javascript-micro-templating/\n 4520      // and Laura Doktorova's doT.js\n 4521      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\vendor\\qunit\\qunit\\qunit.js:\n 1752  /**\n 1753   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1754:  * http://flesler.blogspot.com Licensed under BSD\n 1755   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1756   *\n ....\n 1758   * @version 1.0.0\n 1759   * @author Ariel Flesler\n 1760:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1761   */\n 1762  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\findup-sync\\node_modules\\lodash\\vendor\\tar\\vendor\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\glob\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"glob\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\glob\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   18      \"name\": \"Isaac Z. Schlueter\",\n   19      \"email\": \"i@izs.me\",\n   20:     \"url\": \"http://blog.izs.me/\"\n   21    },\n   22    \"readme\": \"A dead simple way to do inheritance in JS.\\n\\n    var inherits = require(\\\"inherits\\\")\\n\\n    function Animal () {\\n      this.alive = true\\n    }\\n    Animal.prototype.say = function (what) {\\n      console.log(what)\\n    }\\n\\n    inherits(Dog, Animal)\\n    function Dog () {\\n      Dog.super.apply(this)\\n    }\\n    Dog.prototype.sniff = function () {\\n      this.say(\\\"sniff sniff\\\")\\n    }\\n    Dog.prototype.bark = function () {\\n      this.say(\\\"woof woof\\\")\\n    }\\n\\n    inherits(Chihuahua, Dog)\\n    function Chihuahua () {\\n      Chihuahua.super.apply(this)\\n    }\\n    Chihuahua.prototype.bark = function () {\\n      this.say(\\\"yip yip\\\")\\n    }\\n\\n    // also works\\n    function Cat () {\\n      Cat.super.apply(this)\\n    }\\n    Cat.prototype.hiss = function () {\\n      this.say(\\\"CHSKKSS!!\\\")\\n    }\\n    inherits(Cat, Animal, {\\n      meow: function () { this.say(\\\"miao miao\\\") }\\n    })\\n    Cat.prototype.purr = function () {\\n      this.say(\\\"purr purr\\\")\\n    }\\n\\n\\n    var c = new Chihuahua\\n    assert(c instanceof Chihuahua)\\n    assert(c instanceof Dog)\\n    assert(c instanceof Animal)\\n\\nThe actual function is laughably small.  10-lines small.\\n\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\package.json:\n   23        \"name\": \"Martin Grenfell\",\n   24        \"email\": \"martin.grenfell@gmail.com\",\n   25:       \"url\": \"http://got-ravings.blogspot.com\"\n   26      }\n   27    ],\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore\\index.html:\n 2301          Fix for multiple single quotes within a template string for\n 2302          <tt>_.template</tt>. See:\n 2303:         <a href=\"http://www.west-wind.com/Weblog/posts/509108.aspx\">Rick Strahl's blog post</a>.\n 2304        </p>\n 2305  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\jquery.js:\n  605  	// Evaluates a script in a global context\n  606  	// Workarounds based on findings by Jim Driscoll\n  607: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  608  	globalEval: function( data ) {\n  609  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2689  			get: function( elem ) {\n 2690  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2691: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2692  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2693  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\argparse\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\qunit.js:\n 1572  /**\n 1573   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1574:  * http://flesler.blogspot.com Licensed under BSD\n 1575   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1576   *\n ....\n 1578   * @version 1.0.0\n 1579   * @author Ariel Flesler\n 1580:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1581   */\n 1582  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\index.html:\n   53  <li>Language extension: <a href=\"http://mbebenita.github.com/LLJS/\">LLJS</a> (low-level JS), <a href=\"http://sweetjs.org/\">Sweet.js</a> (macro)</li>\n   54  <li>ES6/Harmony transpiler: <a href=\"https://github.com/matthewrobb/six\">Six</a>, <a href=\"https://github.com/jdiamond/harmonizr\">Harmonizr</a></li>\n   55: <li>Eclipse Orion smart editing (<a href=\"https://github.com/aclement/esprima-outline\">outline view</a>, <a href=\"http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html\">content assist</a>)</li>\n   56  <li>Source transformation: <a href=\"https://github.com/substack/node-falafel\">node-falafel</a>, <a href=\"https://github.com/Constellation/esmangle\">Esmangle</a>, <a href=\"https://github.com/Constellation/escodegen\">escodegen</a></li>\n   57  </ul>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\package.json:\n   34      \"benchmark-quick\": \"node test/benchmarks.js quick\"\n   35    },\n   36:   \"readme\": \"**Esprima** ([esprima.org](http://esprima.org)) is a high performance,\\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\\nparser written in ECMAScript (also popularly known as\\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\\n\\nEsprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as\\n[Node.js](http://nodejs.org).\\n\\n### Features\\n\\n- Full support for [ECMAScript 5.1](http://www.ecma-international.org/publications/standards/Ecma-262.htm)(ECMA-262)\\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\\n- Heavily tested (> 550 [unit tests](http://esprima.org/test/) with solid 100% statement coverage)\\n- Optional tracking of syntax node location (index-based and line-column)\\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\\n\\nEsprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\\nIt is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\\nwith the new generation of fast parsers.\\n\\n### Applications\\n\\nEsprima serves as the basis for many popular JavaScript development tools:\\n\\n- Code coverage analysis: [node-cover](https://github.com/itay/node-cover), [Istanbul](https://github.com/yahoo/Istanbul)\\n- Documentation tool: [JFDoc](https://github.com/thejohnfreeman/jfdoc), [JSDuck](https://github.com/senchalabs/jsduck)\\n- Language extension: [LLJS](http://mbebenita.github.com/LLJS/) (low-level JS),\\n[Sweet.js](http://sweetjs.org/) (macro)\\n- ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\\n- Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\\n- Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\\n- Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\\n\\n### Questions?\\n- [Documentation](http://esprima.org/doc)\\n- [Issue tracker](http://issues.esprima.org): [known problems](http://code.google.com/p/esprima/issues/list?q=Defect)\\nand [future plans](http://code.google.com/p/esprima/issues/list?q=Enhancement)\\n- [Mailing list](http://groups.google.com/group/esprima)\\n- [Contribution guide](http://esprima.org/doc/index.html#contribution)\\n\\nFollow [@Esprima](http://twitter.com/Esprima) on Twitter to get the\\ndevelopment updates.\\nFeedback and contribution are welcomed!\\n\\n### License\\n\\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\\n and other contributors.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n  * Redistributions of source code must retain the above copyright\\n    notice, this list of conditions and the following disclaimer.\\n\\n  * Redistributions in binary form must reproduce the above copyright\\n    notice, this list of conditions and the following disclaimer in the\\n    documentation and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\",\n   37    \"readmeFilename\": \"README.md\",\n   38    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\README.md:\n   31  [Sweet.js](http://sweetjs.org/) (macro)\n   32  - ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\n   33: - Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\n   34  - Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\n   35  - Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\js-yaml\\node_modules\\esprima\\doc\\index.html:\n  201  </ul>\n  202  \n  203: For some more info, read also the blog post on <a href=\"http://ariya.ofilabs.com/2011/08/hall-of-api-shame-boolean-trap.html\">Boolean trap</a>.\n  204  \n  205  <h2 id=\"ast\">Syntax Tree Format</h2>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\lodash\\lodash.js:\n 3788    function template(text, data, options) {\n 3789      // based on John Resig's `tmpl` implementation\n 3790:     // http://ejohn.org/blog/javascript-micro-templating/\n 3791      // and Laura Doktorova's doT.js\n 3792      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\lodash\\package.json:\n   37      \"main\": \"./lodash.js\"\n   38    },\n   39:   \"readme\": \"# Lo-Dash <sup>v0.9.2</sup>\\n[![build status](https://secure.travis-ci.org/bestiejs/lodash.png)](http://travis-ci.org/bestiejs/lodash)\\n\\nA drop-in replacement<sup>[*](https://github.com/bestiejs/lodash/wiki/Drop-in-Disclaimer)</sup> for Underscore.js, from the devs behind [jsPerf.com](http://jsperf.com), delivering [performance](http://lodash.com/benchmarks), [bug fixes](https://github.com/bestiejs/lodash#resolved-underscorejs-issues), and [additional features](http://lodash.com/#features).\\n\\nLo-Dash’s performance is gained by avoiding slower native methods, instead opting for simplified non-ES5 compliant methods optimized for common usage, and by leveraging function compilation to reduce the number of overall function calls.\\n\\n## Download\\n\\n * [Development build](https://raw.github.com/bestiejs/lodash/v0.9.2/lodash.js)\\n * [Production build](https://raw.github.com/bestiejs/lodash/v0.9.2/lodash.min.js)\\n * [Underscore build](https://raw.github.com/bestiejs/lodash/v0.9.2/lodash.underscore.min.js) tailored for projects already using Underscore\\n * CDN copies of ≤ v0.9.2’s [Production](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/0.9.2/lodash.min.js), [Underscore](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/0.9.2/lodash.underscore.min.js), and [Development](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/0.9.2/lodash.js) builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/)\\n * For optimal file size, [create a custom build](https://github.com/bestiejs/lodash#custom-builds) with only the features you need\\n\\n## Dive in\\n\\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\\n\\nCreate your own benchmarks at [jsPerf](http://jsperf.com), or [search](http://jsperf.com/search?q=lodash) for existing ones.\\n\\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/lodash/wiki/Roadmap).\\n\\n## Screencasts\\n\\nFor more information check out these screencasts over Lo-Dash:\\n\\n * [Introducing Lo-Dash](https://vimeo.com/44154599)\\n * [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\\n * [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\\n * [Unit testing in Lo-Dash](https://vimeo.com/45865290)\\n * [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\\n\\n## Features\\n\\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\\n * [_.clone](http://lodash.com/docs#clone) supports *“deep”* cloning\\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\\n * [_.lateBind](http://lodash.com/docs#lateBind) for late binding\\n * [_.merge](http://lodash.com/docs#merge) for a *“deep”* [_.extend](http://lodash.com/docs#extend)\\n * [_.partial](http://lodash.com/docs#partial) for partial application without `this` binding\\n * [_.pick](http://lodash.com/docs#pick) and [_.omit](http://lodash.com/docs#omit) accepts `callback` and `thisArg` arguments\\n * [_.template](http://lodash.com/docs#template) supports [ES6 delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6) and utilizes [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl) for easier debugging\\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\\n   [and more…](http://lodash.com/docs \\\"_.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where\\\") accept strings\\n\\n## Support\\n\\nLo-Dash has been tested in at least Chrome 5~23, Firefox 1~16, IE 6-10, Opera 9.25-12, Safari 3-6, Node.js 0.4.8-0.8.14, Narwhal 0.3.2, RingoJS 0.8, and Rhino 1.7RC5.\\n\\n## Custom builds\\n\\nCustom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need.\\nTo top it off, we handle all method dependency and alias mapping for you.\\n\\n * Backbone builds, with only methods required by Backbone, may be created using the `backbone` modifier argument.\\n```bash\\nlodash backbone\\n```\\n\\n * CSP builds, supporting default Content Security Policy restrictions, may be created using the `csp` modifier argument.\\n```bash\\nlodash csp\\n```\\n\\n * Legacy builds, tailored for older browsers without [ES5 support](http://es5.github.com/), may be created using the `legacy` modifier argument.\\n```bash\\nlodash legacy\\n```\\n\\n * Mobile builds, with IE < 9 bug fixes and method compilation removed, may be created using the `mobile` modifier argument.\\n```bash\\nlodash mobile\\n```\\n\\n * Strict builds, with `_.bindAll`, `_.defaults`, and `_.extend` in [strict mode](http://es5.github.com/#C), may be created using the `strict` modifier argument.\\n```bash\\nlodash strict\\n```\\n\\n * Underscore builds, tailored for projects already using Underscore, may be created using the `underscore` modifier argument.\\n```bash\\nlodash underscore\\n```\\n\\nCustom builds may be created using the following commands:\\n\\n * Use the `category` argument to pass comma separated categories of methods to include in the build.<br>\\n   Valid categories (case-insensitive) are *“arrays”*, *“chaining”*, *“collections”*, *“functions”*, *“objects”*, and *“utilities”*.\\n```bash\\nlodash category=collections,functions\\nlodash category=\\\"collections, functions\\\"\\n```\\n\\n * Use the `exports` argument to pass comma separated names of ways to export the `LoDash` function.<br>\\n   Valid exports are *“amd”*, *“commonjs”*, *“global”*, *“node”*, and *“none”*.\\n```bash\\nlodash exports=amd,commonjs,node\\nlodash exports=\\\"amd, commonjs, node\\\"\\n```\\n\\n * Use the `iife` argument to specify code to replace the immediately-invoked function expression that wraps Lo-Dash.\\n```bash\\nlodash iife=\\\"!function(window,undefined){%output%}(this)\\\"\\n```\\n\\n * Use the `include` argument to pass comma separated method/category names to include in the build.\\n```bash\\nlodash include=each,filter,map\\nlodash include=\\\"each, filter, map\\\"\\n```\\n\\n * Use the `minus` argument to pass comma separated method/category names to remove from those included in the build.\\n```bash\\nlodash underscore minus=result,shuffle\\nlodash underscore minus=\\\"result, shuffle\\\"\\n```\\n\\n * Use the `plus` argument to pass comma separated method/category names to add to those included in the build.\\n```bash\\nlodash backbone plus=random,template\\nlodash backbone plus=\\\"random, template\\\"\\n```\\n\\n * Use the `template` argument to pass the file path pattern used to match template files to precompile.\\n```bash\\nlodash template=\\\"./*.jst\\\"\\n```\\n\\n * Use the `settings` argument to pass the template settings used when precompiling templates.\\n```bash\\nlodash settings=\\\"{interpolate:/\\\\\\\\{\\\\\\\\{([\\\\\\\\s\\\\\\\\S]+?)\\\\\\\\}\\\\\\\\}/g}\\\"\\n```\\n\\n * Use the `moduleId` argument to specify the AMD module ID of Lo-Dash, which defaults to “lodash”, used by precompiled templates.\\n```bash\\nlodash moduleId=\\\"underscore\\\"\\n```\\n\\nAll arguments, except `legacy` with `csp` or `mobile`, may be combined.<br>\\nUnless specified by `-o` or `--output`, all files created are saved to the current working directory.\\n\\nThe following options are also supported:\\n\\n * `-c`, `--stdout`&nbsp;&nbsp;&nbsp;&nbsp; Write output to standard output\\n * `-d`, `--debug`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write only the debug output\\n * `-h`, `--help`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Display help information\\n * `-m`, `--minify`&nbsp;&nbsp;&nbsp;&nbsp; Write only the minified output\\n * `-o`, `--output`&nbsp;&nbsp;&nbsp;&nbsp; Write output to a given path/filename\\n * `-s`, `--silent`&nbsp;&nbsp;&nbsp;&nbsp; Skip status updates normally logged to the console\\n * `-V`, `--version`&nbsp;&nbsp; Output current version of Lo-Dash\\n\\nThe `lodash` command-line utility is available when Lo-Dash is installed as a global package (i.e. `npm install -g lodash`).\\n\\n## Installation and usage\\n\\nIn browsers:\\n\\n```html\\n<script src=\\\"lodash.js\\\"></script>\\n```\\n\\nUsing [npm](http://npmjs.org/):\\n\\n```bash\\nnpm install lodash\\n\\nnpm install -g lodash\\nnpm link lodash\\n```\\n\\nIn [Node.js](http://nodejs.org/) and [RingoJS v0.8.0+](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash');\\n```\\n\\n**Note:** If Lo-Dash is installed globally, [run `npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\\n\\nIn [RingoJS v0.7.0-](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash')._;\\n```\\n\\nIn [Rhino](http://www.mozilla.org/rhino/):\\n\\n```js\\nload('lodash.js');\\n```\\n\\nIn an AMD loader like [RequireJS](http://requirejs.org/):\\n\\n```js\\nrequire({\\n  'paths': {\\n    'underscore': 'path/to/lodash'\\n  }\\n},\\n['underscore'], function(_) {\\n  console.log(_.VERSION);\\n});\\n```\\n\\n## Resolved Underscore.js issues\\n\\n * Allow iteration of objects with a `length` property [[#799](https://github.com/documentcloud/underscore/pull/799), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L545-551)]\\n * Fix cross-browser object iteration bugs [[#60](https://github.com/documentcloud/underscore/issues/60), [#376](https://github.com/documentcloud/underscore/issues/376), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L558-582)]\\n * Methods should work on pages with incorrectly shimmed native methods [[#7](https://github.com/documentcloud/underscore/issues/7), [#742](https://github.com/documentcloud/underscore/issues/742), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L140-146)]\\n * `_.isEmpty` should support jQuery/MooTools DOM query collections [[#690](https://github.com/documentcloud/underscore/pull/690), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L747-752)]\\n * `_.isObject` should avoid V8 bug [#2291](http://code.google.com/p/v8/issues/detail?id=2291) [[#605](https://github.com/documentcloud/underscore/issues/605), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L828-840)]\\n * `_.keys` should work with `arguments` objects cross-browser [[#396](https://github.com/documentcloud/underscore/issues/396), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L921-923)]\\n * `_.range` should coerce arguments to numbers [[#634](https://github.com/documentcloud/underscore/issues/634), [#683](https://github.com/documentcloud/underscore/issues/683), [test](https://github.com/bestiejs/lodash/blob/v0.9.2/test/test.js#L1337-1340)]\\n\\n## Release Notes\\n\\n### <sup>v0.9.2</sup>\\n\\n * Added `fromIndex` argument to `_.contains`\\n * Added `moduleId` build option\\n * Added Closure Compiler *“simple”* optimizations to the build process\\n * Added support for strings in `_.max` and `_.min`\\n * Added support for ES6 template delimiters to `_.template`\\n * Ensured re-minification of Lo-Dash by third parties avoids Closure Compiler bugs\\n * Optimized `_.every`, `_.find`, `_.some`, and `_.uniq`\\n\\nThe full changelog is available [here](https://github.com/bestiejs/lodash/wiki/Changelog).\\n\\n## BestieJS\\n\\nLo-Dash is part of the BestieJS *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5 precedents, unit testing, and plenty of documentation.\\n\\n## Author\\n\\n* [John-David Dalton](http://allyoucanleet.com/)\\n  [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](https://twitter.com/jdalton \\\"Follow @jdalton on Twitter\\\")\\n\\n## Contributors\\n\\n* [Kit Cambridge](http://kitcambridge.github.com/)\\n  [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \\\"Follow @kitcambridge on Twitter\\\")\\n* [Mathias Bynens](http://mathiasbynens.be/)\\n  [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \\\"Follow @mathias on Twitter\\\")\\n\",\n   40    \"readmeFilename\": \"README.md\",\n   41    \"_id\": \"lodash@0.9.2\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\lodash\\README.md:\n  180  ```\n  181  \n  182: **Note:** If Lo-Dash is installed globally, [run `npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n  183  \n  184  In [RingoJS v0.7.0-](http://ringojs.org/):\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\lodash\\vendor\\tar\\vendor\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\minimatch\\node_modules\\sigmund\\package.json:\n   29      \"name\": \"Isaac Z. Schlueter\",\n   30      \"email\": \"i@izs.me\",\n   31:     \"url\": \"http://blog.izs.me/\"\n   32    },\n   33    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\nopt\\package.json:\n    6      \"name\": \"Isaac Z. Schlueter\",\n    7      \"email\": \"i@izs.me\",\n    8:     \"url\": \"http://blog.izs.me/\"\n    9    },\n   10    \"main\": \"lib/nopt.js\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   27        \"name\": \"Isaac Z. Schlueter\",\n   28        \"email\": \"i@izs.me\",\n   29:       \"url\": \"http://blog.izs.me\"\n   30      },\n   31      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\rimraf\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\underscore.string\\test\\test_underscore\\vendor\\qunit.js:\n  833  /**\n  834   * jsDump\n  835:  * Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\n  836   * Licensed under BSD (http://www.opensource.org/licenses/bsd-license.php)\n  837   * Date: 5/15/2008\n  ...\n  839   * @version 1.0.0\n  840   * @author Ariel Flesler\n  841:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n  842   */\n  843  QUnit.jsDump = (function() {\n  ...\n 2031  /**\n 2032   * jsDump\n 2033:  * Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\n 2034   * Licensed under BSD (http://www.opensource.org/licenses/bsd-license.php)\n 2035   * Date: 5/15/2008\n ....\n 2037   * @version 1.0.0\n 2038   * @author Ariel Flesler\n 2039:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 2040   */\n 2041  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt\\node_modules\\which\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"which\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-bower-requirejs\\node_modules\\requirejs\\bin\\r.js:\n    <binary>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-cssmin\\node_modules\\clean-css\\test\\data\\960.css:\n  577  }\n  578  \n  579: /* http://www.yuiblog.com/blog/2010/09/27/clearfix-reloaded-overflowhidden-demystified */\n  580  \n  581  .clearfix:before,\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-cssmin\\node_modules\\clean-css\\test\\data\\big-min.css:\n  206  .txt_droite{text-align:right}\n  207  .annotation{display:inline-block;font-size:10px;line-height:100%;color:#747b83}\n  208: .type_element,.titre_blog,.nature_edito{font-size:11px;font-size:1.1rem;font-family:arial,sans-serif;font-weight:700;color:#a2a9ae;text-transform:uppercase}\n  209  .type_element{white-space:nowrap}\n  210  .nature_edito{display:block;font-weight:400;font-size:16px;font-family:FetteEngschrift,'Arial Narrow',sans-serif}\n  211: .titre_blog{display:block}\n  212  .bloc_bg_gris2{background:#f8f9fb;padding:8px 16px}\n  213  .mgl5{margin-left:5px}\n  ...\n  415  .global .supplement_partenaire,.col_droite .supplement_partenaire .annonce .accroche{display:block;margin-bottom:5px;font-weight:700}\n  416  .global .bloc_droit .bandeau,.global .bloc_bandeau .bandeau{padding:0 16px;margin:0;font-size:17px;line-height:26px;color:#fff;text-transform:uppercase}\n  417: .global .bloc_droit .titre{display:block;background:url(/medias/web/img/textes/blog_expert.png) no-repeat;text-indent:-99999px}\n  418  .global .bloc_droit .contenu_droit{padding:18px 14px 10px;overflow:hidden}\n  419  .global .bloc_droit .entree,.global .bloc_droit .entree.auto{height:46px;padding:7px 14px 10px;overflow:hidden;border-top:1px solid #e9edf0}\n  ...\n 2167  #core-liberation .block-all-forums table .ft-c{text-align:center}\n 2168  #core-liberation .block-all-forums table th,#core-liberation .block-all-forums table td{padding:4px 0 6px}\n 2169: #core-liberation .block-all-blogs{margin-bottom:28px}\n 2170: #core-liberation .block-all-blogs .block-content .headrest{border-bottom:1px dotted #ddd}\n 2171: #core-liberation .block-all-blogs .headrest h4{text-transform:uppercase}\n 2172: #core-liberation .block-all-blogs .headrest h5{text-transform:uppercase;padding:5px 9px 6px;float:left}\n 2173: #core-liberation .block-all-blogs .block-content .list .mini-tpl{border-bottom:0}\n 2174: #core-liberation .block-all-blogs .block-content .list li{clear:none}\n 2175: #core-liberation .block-all-blogs .block-content .list li.new-line{clear:both}\n 2176: #core-liberation .block-all-blogs .block-content .list .blog h5 .icon{display:none}\n 2177: #core-liberation .block-all-blogs .block-content .list .blog-libe h5 .icon{display:block;position:absolute;background:url(http://s0.libe.com/libe/img/common/_sprites_icons/icons.png?9914d0d70a49) no-repeat -38px -84px;width:20px;height:7px;margin-top:4px;top:7px;right:7px}\n 2178: #core-liberation .block-all-blogs .block-content .list .blog-libe{padding-top:3px}\n 2179: #core-liberation .block-all-blogs .block-content .list .blog-libe h5{position:relative;display:block;padding:7px 40px 7px 7px}\n 2180: #core-liberation .block-all-blogs .block-content .list .blog-libe img.visual{margin-top:0}\n 2181  #core-liberation .block-search-head form input[type=submit],#core-liberation .block-search-results form input[type=submit]{background-image:url(http://s0.libe.com/libe/img/common/bg-search-formsubmit.png?96b143873213);background-repeat:repeat-x;background-position:0 0;border-style:solid;border-width:1px;padding:1px 3px 3px;height:22px}\n 2182  #core-liberation .block-search-head form input[type=submit]:hover{background-image:url(http://s0.libe.com/libe/img/common/bg-search-formsubmit-on.png?21388ca68b89)}\n ....\n 2681  .cat-mode .bg-c{background-color:#944d93}\n 2682  .cat-mode .ft-c{color:#944d93!important}\n 2683: .cat-blogs .bg-c{background-color:#324c99}\n 2684: .cat-blogs .ft-c{color:#324c99!important}\n 2685  .cat-voyages .bg-c{background-color:#7baf1f}\n 2686  .cat-voyages .ft-c{color:#7baf1f!important}\n ....\n 2711  #header-liberation .header-base .nav .cat-ecrans .nav1 .on a,#header-liberation .header-base .nav-no-js .cat-ecrans:hover .nav1 a,#header-liberation .header-base .nav .cat-ecrans .nav1 a:hover{background-color:#1d9b9a}\n 2712  #header-liberation .header-base .nav .cat-mode .nav1 .on a,#header-liberation .header-base .nav-no-js .cat-mode:hover .nav1 a,#header-liberation .header-base .nav .cat-mode .nav1 a:hover{background-color:#944d93}\n 2713: #header-liberation .header-base .nav .cat-blogs .nav1 .on a,#header-liberation .header-base .nav-no-js .cat-blogs:hover .nav1 a,#header-liberation .header-base .nav .cat-blogs .nav1 a:hover{background-color:#324c99}\n 2714  #header-liberation .header-base .nav .cat-voyages .nav1 .on a,#header-liberation .header-base .nav-no-js .cat-voyages:hover .nav1 a,#header-liberation .header-base .nav .cat-voyages .nav1 a:hover{background-color:#7baf1f}\n 2715  #header-liberation .header-base .nav .cat-regions .nav1 .on a,#header-liberation .header-base .nav-no-js .cat-regions:hover .nav1 a,#header-liberation .header-base .nav .cat-regions .nav1 a:hover{background-color:#f2a787}\n ....\n 2723  #header-liberation .header-base .nav .cat-ecrans .nav2{border-top:3px solid #1d9b9a}\n 2724  #header-liberation .header-base .nav .cat-mode .nav2{border-top:3px solid #944d93}\n 2725: #header-liberation .header-base .nav .cat-blogs .nav2{border-top:3px solid #324c99}\n 2726  #header-liberation .header-base .nav .cat-voyages .nav2{border-top:3px solid #7baf1f}\n 2727  #header-liberation .header-base .nav .cat-regions .nav2{border-top:3px solid #f2a787}\n ....\n 2735  #header-liberation .header-base .nav .cat-ecrans .nav2 a:hover,#header-liberation .header-base .nav .cat-ecrans .nav2 .on{color:#1d9b9a}\n 2736  #header-liberation .header-base .nav .cat-mode .nav2 a:hover,#header-liberation .header-base .nav .cat-mode .nav2 .on{color:#944d93}\n 2737: #header-liberation .header-base .nav .cat-blogs .nav2 a:hover,#header-liberation .header-base .nav .cat-blogs .nav2 .on{color:#324c99}\n 2738  #header-liberation .header-base .nav .cat-voyages .nav2 a:hover,#header-liberation .header-base .nav .cat-voyages .nav2 .on{color:#7baf1f}\n 2739  #header-liberation .header-base .nav .cat-regions .nav2 a:hover,#header-liberation .header-base .nav .cat-regions .nav2 .on{color:#f2a787}\n ....\n 2880  #core-liberation .block-all-forums .forum span.infos{color:#555}\n 2881  #core-liberation .block-all-forums .forum span.infos a{color:#555}\n 2882: #core-liberation .block-all-blogs .block-content .headrest{border-bottom-color:#ddd}\n 2883: #core-liberation .block-all-blogs .headrest h4{color:#e20000}\n 2884: #core-liberation .block-all-blogs .headrest h5{color:#fff;background-color:#575757}\n 2885: #core-liberation .block-all-blogs .list li .blog-libe h5{background-color:#f5f5f5}\n 2886  #core-liberation .block-search-head form input[type=submit],#core-liberation .block-search-results form input[type=submit]{border-color:#888}\n 2887  #core-liberation .block-search-head .pagination,#core-liberation .block-search-results .pagination{background:0;border-color:#b7b7b7}\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-cssmin\\node_modules\\clean-css\\test\\data\\big.css:\n   54  /*\n   55   * 1. Corrects text resizing oddly in IE6/7 when body font-size is set using em units\n   56:  *    http://clagnut.com/blog/348/#c790\n   57   * 2. Prevents iOS text size adjust after orientation change, without disabling user zoom\n   58   *    www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/\n   ..\n  216   * 1. Removes border when inside 'a' element in IE6/7/8/9, FF3\n  217   * 2. Improves image quality when scaled in IE7\n  218:  *    code.flickr.com/blog/2008/11/12/on-ui-quality-the-little-things-client-side-image-resizing/\n  219   */\n  220  \n  ...\n  350  /*\n  351   * Removes inner padding and border in FF3+\n  352:  * www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/\n  353   */\n  354  button::-moz-focus-inner,\n  ...\n 1114  \n 1115  /*\n 1116: ** EXPORTS PARTENAIRES, BLOGS, FORUMS, SPORT\n 1117  */\n 1118  /* CETTE CLASS NE SERT QUE POUR LES EXPORTS PARTENAIRES ET IL DOIT EN DEMEURER AINSI\n ....\n 1207  \n 1208  \n 1209: .type_element, .titre_blog, .nature_edito  {\n 1210    font-size: 11px;\n 1211    font-size: 1.1rem;\n ....\n 1228  }\n 1229  \n 1230: .titre_blog {\n 1231    display: block;\n 1232  }\n ....\n 2255  .global .bloc_droit .titre {\n 2256    display: block;\n 2257:   background: url('/medias/web/img/textes/blog_expert.png') no-repeat;\n 2258    text-indent: -99999px;\n 2259  }\n ....\n 10956  #core-liberation .block-all-forums table th,\n 10957  #core-liberation .block-all-forums table td { padding: 4px 0 6px }\n 10958: #core-liberation .block-all-blogs { margin-bottom: 28px }\n 10959: #core-liberation .block-all-blogs .block-content .headrest { border-bottom: 1px dotted #ddd }\n 10960: #core-liberation .block-all-blogs .headrest h4 { text-transform: uppercase }\n 10961: #core-liberation .block-all-blogs .headrest h5 {\n 10962      text-transform: uppercase;\n 10963      padding: 5px 9px 6px;\n 10964      float: left;\n 10965  }\n 10966: #core-liberation .block-all-blogs .block-content .list .mini-tpl { border-bottom: 0 }\n 10967: #core-liberation .block-all-blogs .block-content .list li { clear: none }\n 10968: #core-liberation .block-all-blogs .block-content .list li.new-line { clear: both }\n 10969: #core-liberation .block-all-blogs .block-content .list .blog h5 .icon { display: none }\n 10970: #core-liberation .block-all-blogs .block-content .list .blog-libe h5 .icon {\n 10971      display: block;\n 10972      position: absolute;\n .....\n 10978      right: 7px;\n 10979  }\n 10980: #core-liberation .block-all-blogs .block-content .list .blog-libe { padding-top: 3px }\n 10981: #core-liberation .block-all-blogs .block-content .list .blog-libe h5 {\n 10982      position: relative;\n 10983      display: block;\n 10984      padding: 7px 40px 7px 7px;\n 10985  }\n 10986: #core-liberation .block-all-blogs .block-content .list .blog-libe img.visual { margin-top: 0 }\n 10987  #core-liberation .block-search-head form input[type=submit],\n 10988  #core-liberation .block-search-results form input[type=submit] {\n .....\n 12924  .cat-mode .bg-c { background-color: #944d93 }\n 12925  .cat-mode .ft-c { color: #944d93!important }\n 12926: .cat-blogs .bg-c { background-color: #324c99 }\n 12927: .cat-blogs .ft-c { color: #324c99!important }\n 12928  .cat-voyages .bg-c { background-color: #7baf1f }\n 12929  .cat-voyages .ft-c { color: #7baf1f!important }\n .....\n 12987  #header-liberation .header-base .nav-no-js .cat-mode:hover .nav1 a,\n 12988  #header-liberation .header-base .nav .cat-mode .nav1 a:hover { background-color: #944d93 }\n 12989: #header-liberation .header-base .nav .cat-blogs .nav1 .on a,\n 12990: #header-liberation .header-base .nav-no-js .cat-blogs:hover .nav1 a,\n 12991: #header-liberation .header-base .nav .cat-blogs .nav1 a:hover { background-color: #324c99 }\n 12992  #header-liberation .header-base .nav .cat-voyages .nav1 .on a,\n 12993  #header-liberation .header-base .nav-no-js .cat-voyages:hover .nav1 a,\n .....\n 13011  #header-liberation .header-base .nav .cat-ecrans .nav2 { border-top: 3px solid #1d9b9a }\n 13012  #header-liberation .header-base .nav .cat-mode .nav2 { border-top: 3px solid #944d93 }\n 13013: #header-liberation .header-base .nav .cat-blogs .nav2 { border-top: 3px solid #324c99 }\n 13014  #header-liberation .header-base .nav .cat-voyages .nav2 { border-top: 3px solid #7baf1f }\n 13015  #header-liberation .header-base .nav .cat-regions .nav2 { border-top: 3px solid #f2a787 }\n .....\n 13029  #header-liberation .header-base .nav .cat-mode .nav2 a:hover,\n 13030  #header-liberation .header-base .nav .cat-mode .nav2 .on { color: #944d93 }\n 13031: #header-liberation .header-base .nav .cat-blogs .nav2 a:hover,\n 13032: #header-liberation .header-base .nav .cat-blogs .nav2 .on { color: #324c99 }\n 13033  #header-liberation .header-base .nav .cat-voyages .nav2 a:hover,\n 13034  #header-liberation .header-base .nav .cat-voyages .nav2 .on { color: #7baf1f }\n .....\n 13278  #core-liberation .block-all-forums .forum span.infos { color: #555 }\n 13279  #core-liberation .block-all-forums .forum span.infos a { color: #555 }\n 13280: #core-liberation .block-all-blogs .block-content .headrest { border-bottom-color: #ddd }\n 13281: #core-liberation .block-all-blogs .headrest h4 { color: #e20000 }\n 13282: #core-liberation .block-all-blogs .headrest h5 {\n 13283      color: #fff;\n 13284      background-color: #575757;\n 13285  }\n 13286: #core-liberation .block-all-blogs .list li .blog-libe h5 { background-color: #f5f5f5 }\n 13287  #core-liberation .block-search-head form input[type=submit],\n 13288  #core-liberation .block-search-results form input[type=submit] { border-color: #888 }\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-htmlmin\\node_modules\\html-minifier\\package.json:\n   51    },\n   52    \"main\": \"./dist/all.js\",\n   53:   \"readme\": \"[HTMLMinifier](http://kangax.github.com/html-minifier/) is a Javascript-based HTML minifier (duh), with lint-like capabilities.\\n\\nInstalling with [npm](https://github.com/isaacs/npm):\\n\\n<pre>\\nnpm install html-minifier\\n</pre>\\n\\nSee [corresponding blog post](http://perfectionkills.com/experimenting-with-html-minifier/) for all the gory details of [how it works](http://perfectionkills.com/experimenting-with-html-minifier/#how_it_works), [description of each option](http://perfectionkills.com/experimenting-with-html-minifier/#options), [testing results](http://perfectionkills.com/experimenting-with-html-minifier/#field_testing) and [conclusions](http://perfectionkills.com/experimenting-with-html-minifier/#cost_and_benefits).\\n\\n[Test suite is available online](http://kangax.github.com/html-minifier/tests/index.html).\",\n   54    \"readmeFilename\": \"README.md\",\n   55    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-htmlmin\\node_modules\\html-minifier\\README.md:\n    7  </pre>\n    8  \n    9: See [corresponding blog post](http://perfectionkills.com/experimenting-with-html-minifier/) for all the gory details of [how it works](http://perfectionkills.com/experimenting-with-html-minifier/#how_it_works), [description of each option](http://perfectionkills.com/experimenting-with-html-minifier/#options), [testing results](http://perfectionkills.com/experimenting-with-html-minifier/#field_testing) and [conclusions](http://perfectionkills.com/experimenting-with-html-minifier/#cost_and_benefits).\n   10  \n   11  [Test suite is available online](http://kangax.github.com/html-minifier/tests/index.html).\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\mocha\\node_modules\\ms\\test\\support\\jquery.js:\n  603  	// Evaluates a script in a global context\n  604  	// Workarounds based on findings by Jim Driscoll\n  605: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  606  	globalEval: function( data ) {\n  607  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2625  			get: function( elem ) {\n 2626  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2627: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2628  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2629  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\request\\node_modules\\json-stringify-safe\\package.json:\n   20      \"name\": \"Isaac Z. Schlueter\",\n   21      \"email\": \"i@izs.me\",\n   22:     \"url\": \"http://blog.izs.me\"\n   23    },\n   24    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\request\\node_modules\\qs\\test\\browser\\jquery.js:\n  600  	// Evaluates a script in a global context\n  601  	// Workarounds based on findings by Jim Driscoll\n  602: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  603  	globalEval: function( data ) {\n  604  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2312  			get: function( elem ) {\n 2313  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2314: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2315  				var attributeNode = elem.getAttributeNode(\"tabIndex\");\n 2316  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"tar\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\node_modules\\block-stream\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"block-stream\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\node_modules\\fstream\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"fstream\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\node_modules\\fstream\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\node_modules\\fstream\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\node_modules\\fstream\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   30        \"name\": \"Isaac Z. Schlueter\",\n   31        \"email\": \"i@izs.me\",\n   32:       \"url\": \"http://blog.izs.me\"\n   33      },\n   34      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\tar\\node_modules\\inherits\\package.json:\n   25      \"name\": \"Isaac Z. Schlueter\",\n   26      \"email\": \"i@izs.me\",\n   27:     \"url\": \"http://blog.izs.me/\"\n   28    },\n   29    \"scripts\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\jpegtran-bin\\node_modules\\which\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"which\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\mocha\\node_modules\\ms\\test\\support\\jquery.js:\n  603  	// Evaluates a script in a global context\n  604  	// Workarounds based on findings by Jim Driscoll\n  605: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  606  	globalEval: function( data ) {\n  607  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2625  			get: function( elem ) {\n 2626  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2627: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2628  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2629  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\request\\node_modules\\json-stringify-safe\\package.json:\n   20      \"name\": \"Isaac Z. Schlueter\",\n   21      \"email\": \"i@izs.me\",\n   22:     \"url\": \"http://blog.izs.me\"\n   23    },\n   24    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\request\\node_modules\\qs\\test\\browser\\jquery.js:\n  600  	// Evaluates a script in a global context\n  601  	// Workarounds based on findings by Jim Driscoll\n  602: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  603  	globalEval: function( data ) {\n  604  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2312  			get: function( elem ) {\n 2313  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2314: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2315  				var attributeNode = elem.getAttributeNode(\"tabIndex\");\n 2316  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"tar\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\node_modules\\block-stream\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"block-stream\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\node_modules\\fstream\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"fstream\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\node_modules\\fstream\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\node_modules\\fstream\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\node_modules\\fstream\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   30        \"name\": \"Isaac Z. Schlueter\",\n   31        \"email\": \"i@izs.me\",\n   32:       \"url\": \"http://blog.izs.me\"\n   33      },\n   34      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\tar\\node_modules\\inherits\\package.json:\n   25      \"name\": \"Isaac Z. Schlueter\",\n   26      \"email\": \"i@izs.me\",\n   27:     \"url\": \"http://blog.izs.me/\"\n   28    },\n   29    \"scripts\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-imagemin\\node_modules\\optipng-bin\\node_modules\\which\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"which\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\package.json:\n   34    },\n   35    \"preferGlobal\": true,\n   36:   \"readme\": \"JSHint, A Static Code Analysis Tool for JavaScript\\n==================================================\\n[![Build Status](https://travis-ci.org/jshint/jshint.png?branch=master)](https://travis-ci.org/jshint/jshint)\\n\\nJSHint is a community-driven tool to detect errors and potential problems in\\nJavaScript code and to enforce your team's coding conventions. We made JSHint\\nvery flexible so you can easily adjust it to your particular coding guidelines\\nand the environment you expect your code to execute in.\\n\\nOur goal is to help JavaScript developers write complex programs without\\nworrying about typos and language gotchas.\\n\\nWe believe that static code analysis programs—as well as other code quality\\ntools—are important and beneficial to the JavaScript community and, thus,\\nshould not alienate their users.\\n\\nFor general usage and hacking information, visit our website:\\n[http://jshint.com/](http://jshint.com/).\\n\\nJSHint Fundraiser / Bug Bounties\\n--------------------------------\\n\\nWe're [running a fundraiser](https://www.bountysource.com/#fundraisers/91-jshint)\\nfor JSHint! If JSHint helps you in your day-to-day development, please consider\\ndonating.  All money raised on this page will be used as monetary rewards for\\nfixing JSHint bugs and implementing new features. Our hope is to introduce more\\ndevelopers to JSHint hacking and boost its development.\\n\\n**Rules**:\\n\\n1. All funds (aside from fees) will be used only to fund bounties.\\n2. If core team ends up fixing bounty bugs, the reward will be donated to the Electronic Frontier Foundation.\\n3. Before marking bugs as fixed, all patches must be reviewed by a core team member.\\n\\nThanks!\\n\\nReporting a bug\\n---------------\\n\\nTo report a bug simply create a\\n[new GitHub Issue](https://github.com/jshint/jshint/issues/new) and describe\\nyour problem or suggestion. We welcome all kind of feedback regarding\\nJSHint including but not limited to:\\n\\n * When JSHint doesn't work as expected\\n * When JSHint complains about valid JavaScript code that works in all browsers\\n * When you simply want a new option or feature\\n\\nBefore reporting a bug look around to see if there are any open or closed tickets\\nthat cover your issue. And remember the wisdom: pull request > bug report > tweet.\\n\\n\\nFAQ\\n---\\n\\n#### How do I turn off \\\"mixed tabs and spaces\\\" warning?\\n\\nIf you're using so-called [smart tabs](http://www.emacswiki.org/SmartTabs)\\nthen we have an option `smarttabs` for you. Otherwise, your solution is to\\nrun JSHint with a custom reporter that discards any warnings you don't like.\\nFor example, this [example reporter](https://gist.github.com/3885619)\\ndiscards all warnings about mixed tabs and spaces.\\n\\nContributing\\n------------\\n\\nLook for a file named `CONTRIBUTING.md` in this repository. It contains our\\ncontributing guidelines. We also have\\n[a mailing list](http://groups.google.com/group/jshint/).\\n\\nLicense\\n-------\\n\\nJSHint is distributed under the MIT License. One file and one file only\\n(src/stable/jshint.js) is distributed under the slightly modified MIT License.\\n\\nAttribution\\n-----------\\n\\nCore Team members:\\n\\n * [Anton Kovalyov](http://anton.kovalyov.net/) ([@valueof](http://twitter.com/valueof))\\n * [Wolfgang Kluge](http://klugesoftware.de/) ([blog](http://gehirnwindung.de/))\\n * [Josh Perez](http://www.goatslacker.com/) ([@goatslacker](http://twitter.com/goatslacker))\\n * [Brent Lintner](http://brentlintner.heroku.com/) ([@brentlintner](http://twitter.com/brentlintner))\\n\\nMaintainer: Anton Kovalyov\\n\\nThank you!\\n----------\\n\\nWe really appreciate all kind of feedback and contributions. Thanks for using and supporting JSHint!\\n\",\n   37    \"readmeFilename\": \"README.md\",\n   38    \"_id\": \"jshint@1.1.0\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\README.md:\n   81  \n   82   * [Anton Kovalyov](http://anton.kovalyov.net/) ([@valueof](http://twitter.com/valueof))\n   83:  * [Wolfgang Kluge](http://klugesoftware.de/) ([blog](http://gehirnwindung.de/))\n   84   * [Josh Perez](http://www.goatslacker.com/) ([@goatslacker](http://twitter.com/goatslacker))\n   85   * [Brent Lintner](http://brentlintner.heroku.com/) ([@brentlintner](http://twitter.com/brentlintner))\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"glob\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\cli\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   25      \"name\": \"Isaac Z. Schlueter\",\n   26      \"email\": \"i@izs.me\",\n   27:     \"url\": \"http://blog.izs.me/\"\n   28    },\n   29    \"scripts\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\esprima\\doc\\index.html:\n  261  </ul>\n  262  \n  263: For some more info, read also the blog post on <a href=\"http://ariya.ofilabs.com/2011/08/hall-of-api-shame-boolean-trap.html\">Boolean trap</a>.\n  264  \n  265  <h4 id=\"ast\">Syntax Tree Format</h4>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\minimatch\\node_modules\\sigmund\\package.json:\n   29      \"name\": \"Isaac Z. Schlueter\",\n   30      \"email\": \"i@izs.me\",\n   31:     \"url\": \"http://blog.izs.me/\"\n   32    },\n   33    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\node_modules\\underscore\\index.html:\n 2301          Fix for multiple single quotes within a template string for\n 2302          <tt>_.template</tt>. See:\n 2303:         <a href=\"http://www.west-wind.com/Weblog/posts/509108.aspx\">Rick Strahl's blog post</a>.\n 2304        </p>\n 2305  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\tests\\stable\\regression\\libs\\jquery-1.7.js:\n  609  	// Evaluates a script in a global context\n  610  	// Workarounds based on findings by Jim Driscoll\n  611: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  612  	globalEval: function( data ) {\n  613  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2677  			get: function( elem ) {\n 2678  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2679: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2680  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2681  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-jshint\\node_modules\\jshint\\tests\\stable\\regression\\libs\\lodash.js:\n 3962    function template(text, data, options) {\n 3963      // based on John Resig's `tmpl` implementation\n 3964:     // http://ejohn.org/blog/javascript-micro-templating/\n 3965      // and Laura Doktorova's doT.js\n 3966      // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-livereload\\node_modules\\tiny-lr\\node_modules\\noptify\\node_modules\\nopt\\package.json:\n    6      \"name\": \"Isaac Z. Schlueter\",\n    7      \"email\": \"i@izs.me\",\n    8:     \"url\": \"http://blog.izs.me/\"\n    9    },\n   10    \"main\": \"lib/nopt.js\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-livereload\\node_modules\\tiny-lr\\node_modules\\qs\\test\\browser\\jquery.js:\n  600  	// Evaluates a script in a global context\n  601  	// Workarounds based on findings by Jim Driscoll\n  602: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  603  	globalEval: function( data ) {\n  604  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2312  			get: function( elem ) {\n 2313  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2314: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2315  				var attributeNode = elem.getAttributeNode(\"tabIndex\");\n 2316  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\package.json:\n   30      \"test\": \"node test/run-tests.js\"\n   31    },\n   32:   \"readme\": \"UglifyJS 2\\n==========\\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\\n\\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\\n\\nThis page documents the command line utility.  For\\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\\nThere's also an\\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\\nChrome and probably Safari).\\n\\nInstall\\n-------\\n\\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\\n(You may need to restart your computer after this step).\\n\\nFrom NPM for use as a command line app:\\n\\n    npm install uglify-js -g\\n\\nFrom NPM for programmatic use:\\n\\n    npm install uglify-js\\n\\nFrom Git:\\n\\n    git clone git://github.com/mishoo/UglifyJS2.git\\n    cd UglifyJS2\\n    npm link .\\n\\nUsage\\n-----\\n\\n    uglifyjs [input files] [options]\\n\\nUglifyJS2 can take multiple input files.  It's recommended that you pass the\\ninput files first, then pass the options.  UglifyJS will parse input files\\nin sequence and apply any compression options.  The files are parsed in the\\nsame global scope, that is, a reference from a file to some\\nvariable/function declared in another file will be matched properly.\\n\\nIf you want to read from STDIN instead, pass a single dash instead of input\\nfiles.\\n\\nThe available options are:\\n\\n    --source-map       Specify an output file where to generate source map.\\n                                                                          [string]\\n    --source-map-root  The path to the original source to be included in the\\n                       source map.                                        [string]\\n    --source-map-url   The path to the source map to be added in //@\\n                       sourceMappingURL.  Defaults to the value passed with\\n                       --source-map.                                      [string]\\n    --in-source-map    Input source map, useful if you're compressing JS that was\\n                       generated from some other original code.\\n    --screw-ie8        Pass this flag if you don't care about full compliance with\\n                       Internet Explorer 6-8 quirks (by default UglifyJS will try\\n                       to be IE-proof).\\n    -p, --prefix       Skip prefix for original filenames that appear in source\\n                       maps. For example -p 3 will drop 3 directories from file\\n                       names and ensure they are relative paths.\\n    -o, --output       Output file (default STDOUT).\\n    -b, --beautify     Beautify output/specify output options.            [string]\\n    -m, --mangle       Mangle names/pass mangler options.                 [string]\\n    -r, --reserved     Reserved names to exclude from mangling.\\n    -c, --compress     Enable compressor/pass compressor options. Pass options\\n                       like -c hoist_vars=false,if_return=false. Use -c with no\\n                       argument to use the default compression options.   [string]\\n    -d, --define       Global definitions                                 [string]\\n    --comments         Preserve copyright comments in the output. By default this\\n                       works like Google Closure, keeping JSDoc-style comments\\n                       that contain \\\"@license\\\" or \\\"@preserve\\\". You can optionally\\n                       pass one of the following arguments to this flag:\\n                       - \\\"all\\\" to keep all comments\\n                       - a valid JS regexp (needs to start with a slash) to keep\\n                       only comments that match.\\n                       Note that currently not *all* comments can be kept when\\n                       compression is on, because of dead code removal or\\n                       cascading statements into sequences.               [string]\\n    --stats            Display operations run time on STDERR.            [boolean]\\n    --acorn            Use Acorn for parsing.                            [boolean]\\n    --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\\n                                                                         [boolean]\\n    --self             Build itself (UglifyJS2) as a library (implies\\n                       --wrap=UglifyJS --export-all)                     [boolean]\\n    --wrap             Embed everything in a big function, making the “exports”\\n                       and “global” variables available. You need to pass an\\n                       argument to this option to specify the name that your\\n                       module will take when included in, say, a browser.\\n                                                                          [string]\\n    --export-all       Only used when --wrap, this tells UglifyJS to add code to\\n                       automatically export all globals.                 [boolean]\\n    --lint             Display some scope warnings                       [boolean]\\n    -v, --verbose      Verbose                                           [boolean]\\n    -V, --version      Print version number and exit.                    [boolean]\\n\\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\\ngoes to STDOUT.\\n\\n## Source map options\\n\\nUglifyJS2 can generate a source map file, which is highly useful for\\ndebugging your compressed JavaScript.  To get a source map, pass\\n`--source-map output.js.map` (full path to the file where you want the\\nsource map dumped).\\n\\nAdditionally you might need `--source-map-root` to pass the URL where the\\noriginal files can be found.  In case you are passing full paths to input\\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\\ndirectories to drop from the path prefix when declaring files in the source\\nmap.\\n\\nFor example:\\n\\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\\\\n             /home/doe/work/foo/src/js/file2.js \\\\\\n             -o foo.min.js \\\\\\n             --source-map foo.min.js.map \\\\\\n             --source-map-root http://foo.com/src \\\\\\n             -p 5 -c -m\\n\\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\\nmapping will refer to `http://foo.com/src/js/file1.js` and\\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\\nas the source map root, and the original files as `js/file1.js` and\\n`js/file2.js`).\\n\\n### Composed source map\\n\\nWhen you're compressing JS code that was output by a compiler such as\\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\\noption to take an input source map.  Assuming you have a mapping from\\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\\ncompressed JS by mapping every token in the compiled JS to its original\\nlocation.\\n\\nTo use this feature you need to pass `--in-source-map\\n/path/to/input/source.map`.  Normally the input source map should also point\\nto the file containing the generated JS, so if that's correct you can omit\\ninput files from the command line.\\n\\n## Mangler options\\n\\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\\n(comma-separated) options are supported:\\n\\n- `sort` — to assign shorter names to most frequently used variables.  This\\n  saves a few hundred bytes on jQuery before gzip, but the output is\\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\\n  on) therefore it's not enabled by default.\\n\\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\\n  default).\\n\\n- `eval` — mangle names visible in scopes where `eval` or `when` are used\\n  (disabled by default).\\n\\nWhen mangling is enabled but you want to prevent certain names from being\\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\\ncomma-separated list of names.  For example:\\n\\n    uglifyjs ... -m -r '$,require,exports'\\n\\nto prevent the `require`, `exports` and `$` names from being changed.\\n\\n## Compressor options\\n\\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\\nyou can pass a comma-separated list of options.  Options are in the form\\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\\nto set `true`; it's effectively a shortcut for `foo=true`).\\n\\n- `sequences` -- join consecutive simple statements using the comma operator\\n- `properties` -- rewrite property access using the dot notation, for\\n  example `foo[\\\"bar\\\"] → foo.bar`\\n- `dead_code` -- remove unreachable code\\n- `drop_debugger` -- remove `debugger;` statements\\n- `unsafe` (default: false) -- apply \\\"unsafe\\\" transformations (discussion below)\\n- `conditionals` -- apply optimizations for `if`-s and conditional\\n  expressions\\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\\n- `evaluate` -- attempt to evaluate constant expressions\\n- `booleans` -- various optimizations for boolean context, for example `!!a\\n  ? b : c → a ? b : c`\\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\\n  statically determine the condition\\n- `unused` -- drop unreferenced functions and variables\\n- `hoist_funs` -- hoist function declarations\\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\\n  by default because it seems to increase the size of the output in general)\\n- `if_return` -- optimizations for if/return and if/continue\\n- `join_vars` -- join consecutive `var` statements\\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\\n  and `x = something(), x` into `x = something()`\\n- `warnings` -- display warnings when dropping unreachable code or unused\\n  declarations etc.\\n\\n### The `unsafe` option\\n\\nIt enables some transformations that *might* break code logic in certain\\ncontrived cases, but should be fine for most code.  You might want to try it\\non your own code, it should reduce the minified size.  Here's what happens\\nwhen this flag is on:\\n\\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\\n- `new Object()` → `{}`\\n- `String(exp)` or `exp.toString()` → `\\\"\\\" + exp`\\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\\n- `typeof foo == \\\"undefined\\\"` → `foo === void 0`\\n- `void 0` → `\\\"undefined\\\"` (if there is a variable named \\\"undefined\\\" in\\n  scope; we do it because the variable name will be mangled, typically\\n  reduced to a single character).\\n\\n### Conditional compilation\\n\\nYou can use the `--define` (`-d`) switch in order to declare global\\nvariables that UglifyJS will assume to be constants (unless defined in\\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\\ndead code removal UglifyJS will discard the following from the output:\\n```javascript\\nif (DEBUG) {\\n\\tconsole.log(\\\"debug stuff\\\");\\n}\\n```\\n\\nUglifyJS will warn about the condition being always false and about dropping\\nunreachable code; for now there is no option to turn off only this specific\\nwarning, you can pass `warnings=false` to turn off *all* warnings.\\n\\nAnother way of doing that is to declare your globals as constants in a\\nseparate file and include it into the build.  For example you can have a\\n`build/defines.js` file with the following:\\n```javascript\\nconst DEBUG = false;\\nconst PRODUCTION = true;\\n// etc.\\n```\\n\\nand build your code like this:\\n\\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\\n\\nUglifyJS will notice the constants and, since they cannot be altered, it\\nwill evaluate references to them to the value itself and drop unreachable\\ncode as usual.  The possible downside of this approach is that the build\\nwill contain the `const` declarations.\\n\\n<a name=\\\"codegen-options\\\"></a>\\n## Beautifier options\\n\\nThe code generator tries to output shortest code possible by default.  In\\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\\ncan pass additional arguments that control the code output:\\n\\n- `beautify` (default `true`) -- whether to actually beautify the output.\\n  Passing `-b` will set this to true, but you might need to pass `-b` even\\n  when you want to generate minified code, in order to specify additional\\n  arguments, so you can use `-b beautify=false` to override it.\\n- `indent-level` (default 4)\\n- `indent-start` (default 0) -- prefix all lines by that many spaces\\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\\n  objects\\n- `space-colon` (default `true`) -- insert a space after the colon signs\\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\\n  regexps\\n- `inline-script` (default `false`) -- escape the slash in occurrences of\\n  `</script` in strings\\n- `width` (default 80) -- only takes effect when beautification is on, this\\n  specifies an (orientative) line width that the beautifier will try to\\n  obey.  It refers to the width of the line text (excluding indentation).\\n  It doesn't work very well currently, but it does make the code generated\\n  by UglifyJS more readable.\\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\\n- `ie-proof` (default `true`) -- generate “IE-proof” code (for now this\\n  means add brackets around the do/while in code like this: `if (foo) do\\n  something(); while (bar); else ...`.\\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\\n  `do`, `while` or `with` statements, even if their body is a single\\n  statement.\\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\\n  you pass `false` then whenever possible we will use a newline instead of a\\n  semicolon, leading to more readable output of uglified code (size before\\n  gzip could be smaller; size after gzip insignificantly larger).\\n- `negate-iife` (default `!beautify`) -- prefer negation, rather than\\n  parens, for \\\"Immediately-Called Function Expressions\\\".  This defaults to\\n  `true` when beautification is off, and `false` if beautification is on;\\n  pass it manually to force a value.\\n\\n### Keeping copyright notices or other comments\\n\\nYou can pass `--comments` to retain certain comments in the output.  By\\ndefault it will keep JSDoc-style comments that contain \\\"@preserve\\\",\\n\\\"@license\\\" or \\\"@cc_on\\\" (conditional compilation for IE).  You can pass\\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\\nkeep only comments that match this regexp.  For example `--comments\\n'/foo|bar/'` will keep only comments that contain \\\"foo\\\" or \\\"bar\\\".\\n\\nNote, however, that there might be situations where comments are lost.  For\\nexample:\\n```javascript\\nfunction f() {\\n\\t/** @preserve Foo Bar */\\n\\tfunction g() {\\n\\t  // this function is never called\\n\\t}\\n\\treturn something();\\n}\\n```\\n\\nEven though it has \\\"@preserve\\\", the comment will be lost because the inner\\nfunction `g` (which is the AST node to which the comment is attached to) is\\ndiscarded by the compressor as not referenced.\\n\\nThe safest comments where to place copyright information (or other info that\\nneeds to be kept in the output) are comments attached to toplevel nodes.\\n\\n## Support for the SpiderMonkey AST\\n\\nUglifyJS2 has its own abstract syntax tree format; for\\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\\nwe can't easily change to using the SpiderMonkey AST internally.  However,\\nUglifyJS now has a converter which can import a SpiderMonkey AST.\\n\\nFor example [Acorn][acorn] is a super-fast parser that produces a\\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\\ncompress that:\\n\\n    acorn file.js | uglifyjs --spidermonkey -m -c\\n\\nThe `--spidermonkey` option tells UglifyJS that all input files are not\\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\\ndon't use our own parser in this case, but just transform that AST into our\\ninternal AST.\\n\\n### Use Acorn for parsing\\n\\nMore for fun, I added the `--acorn` option which will use Acorn to do all\\nthe parsing.  If you pass this option, UglifyJS will `require(\\\"acorn\\\")`.\\n\\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\\nin total it's a bit more than just using UglifyJS's own parser.\\n\\nAPI Reference\\n-------------\\n\\nAssuming installation via NPM, you can load UglifyJS in your application\\nlike this:\\n```javascript\\nvar UglifyJS = require(\\\"uglify-js\\\");\\n```\\n\\nIt exports a lot of names, but I'll discuss here the basics that are needed\\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\\nparse, (2) compress, (3) mangle, (4) generate output code.\\n\\n### The simple way\\n\\nThere's a single toplevel function which combines all the steps.  If you\\ndon't need additional customization, you might want to go with `minify`.\\nExample:\\n```javascript\\nvar result = UglifyJS.minify(\\\"/path/to/file.js\\\");\\nconsole.log(result.code); // minified output\\n// if you need to pass code instead of file name\\nvar result = UglifyJS.minify(\\\"var b = function () {};\\\", {fromString: true});\\n```\\n\\nYou can also compress multiple files:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ]);\\nconsole.log(result.code);\\n```\\n\\nTo generate a source map:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ], {\\n\\toutSourceMap: \\\"out.js.map\\\"\\n});\\nconsole.log(result.code); // minified output\\nconsole.log(result.map);\\n```\\n\\nNote that the source map is not saved in a file, it's just returned in\\n`result.map`.  The value passed for `outSourceMap` is only used to set the\\n`file` attribute in the source map (see [the spec][sm-spec]).\\n\\nYou can also specify sourceRoot property to be included in source map:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ], {\\n\\toutSourceMap: \\\"out.js.map\\\",\\n\\tsourceRoot: \\\"http://example.com/src\\\"\\n});\\n```\\n\\nIf you're compressing compiled JavaScript and have a source map for it, you\\ncan use the `inSourceMap` argument:\\n```javascript\\nvar result = UglifyJS.minify(\\\"compiled.js\\\", {\\n\\tinSourceMap: \\\"compiled.js.map\\\",\\n\\toutSourceMap: \\\"minified.js.map\\\"\\n});\\n// same as before, it returns `code` and `map`\\n```\\n\\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\\nno sense otherwise).\\n\\nOther options:\\n\\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\\n\\n- `fromString` (default `false`) — if you pass `true` then you can pass\\n  JavaScript source code, rather than file names.\\n\\n- `mangle` — pass `false` to skip mangling names.\\n\\n- `output` (default `null`) — pass an object if you wish to specify\\n  additional [output options][codegen].  The defaults are optimized\\n  for best compression.\\n\\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\\n  Pass an object to specify custom [compressor options][compressor].\\n\\nWe could add more options to `UglifyJS.minify` — if you need additional\\nfunctionality please suggest!\\n\\n### The hard way\\n\\nFollowing there's more detailed API info, in case the `minify` function is\\ntoo simple for your needs.\\n\\n#### The parser\\n```javascript\\nvar toplevel_ast = UglifyJS.parse(code, options);\\n```\\n\\n`options` is optional and if present it must be an object.  The following\\nproperties are available:\\n\\n- `strict` — disable automatic semicolon insertion and support for trailing\\n  comma in arrays and objects\\n- `filename` — the name of the file where this code is coming from\\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\\n  `parse`)\\n\\nThe last two options are useful when you'd like to minify multiple files and\\nget a single file as the output and a proper source map.  Our CLI tool does\\nsomething like this:\\n```javascript\\nvar toplevel = null;\\nfiles.forEach(function(file){\\n\\tvar code = fs.readFileSync(file);\\n\\ttoplevel = UglifyJS.parse(code, {\\n\\t\\tfilename: file,\\n\\t\\ttoplevel: toplevel\\n\\t});\\n});\\n```\\n\\nAfter this, we have in `toplevel` a big AST containing all our files, with\\neach token having proper information about where it came from.\\n\\n#### Scope information\\n\\nUglifyJS contains a scope analyzer that you need to call manually before\\ncompressing or mangling.  Basically it augments various nodes in the AST\\nwith information about where is a name defined, how many times is a name\\nreferenced, if it is a global or not, if a function is using `eval` or the\\n`with` statement etc.  I will discuss this some place else, for now what's\\nimportant to know is that you need to call the following before doing\\nanything with the tree:\\n```javascript\\ntoplevel.figure_out_scope()\\n```\\n\\n#### Compression\\n\\nLike this:\\n```javascript\\nvar compressor = UglifyJS.Compressor(options);\\nvar compressed_ast = toplevel.transform(compressor);\\n```\\n\\nThe `options` can be missing.  Available options are discussed above in\\n“Compressor options”.  Defaults should lead to best compression in most\\nscripts.\\n\\nThe compressor is destructive, so don't rely that `toplevel` remains the\\noriginal tree.\\n\\n#### Mangling\\n\\nAfter compression it is a good idea to call again `figure_out_scope` (since\\nthe compressor might drop unused variables / unreachable code and this might\\nchange the number of identifiers or their position).  Optionally, you can\\ncall a trick that helps after Gzip (counting character frequency in\\nnon-mangleable words).  Example:\\n```javascript\\ncompressed_ast.figure_out_scope();\\ncompressed_ast.compute_char_frequency();\\ncompressed_ast.mangle_names();\\n```\\n\\n#### Generating output\\n\\nAST nodes have a `print` method that takes an output stream.  Essentially,\\nto generate code you do this:\\n```javascript\\nvar stream = UglifyJS.OutputStream(options);\\ncompressed_ast.print(stream);\\nvar code = stream.toString(); // this is your minified code\\n```\\n\\nor, for a shortcut you can do:\\n```javascript\\nvar code = compressed_ast.print_to_string(options);\\n```\\n\\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\\nmost of them documented above in section “Beautifier options”.  The two\\nwhich we care about here are `source_map` and `comments`.\\n\\n#### Keeping comments in the output\\n\\nIn order to keep certain comments in the output you need to pass the\\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\\nthose comments whose body matches the regexp will be kept.  Note that body\\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\\ncalled for every comment in the tree and will receive two arguments: the\\nnode that the comment is attached to, and the comment token itself.\\n\\nThe comment token has these properties:\\n\\n- `type`: \\\"comment1\\\" for single-line comments or \\\"comment2\\\" for multi-line\\n  comments\\n- `value`: the comment body\\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\\n  original code where this comment appears\\n- `line` and `col`: the line and column where this comment appears in the\\n  original code\\n- `file` — the file name of the original file\\n- `nlb` — true if there was a newline before this comment in the original\\n  code, or if this comment contains a newline.\\n\\nYour function should return `true` to keep the comment, or a falsy value\\notherwise.\\n\\n#### Generating a source mapping\\n\\nYou need to pass the `source_map` argument when calling `print`.  It needs\\nto be a `SourceMap` object (which is a thin wrapper on top of the\\n[source-map][source-map] library).\\n\\nExample:\\n```javascript\\nvar source_map = UglifyJS.SourceMap(source_map_options);\\nvar stream = UglifyJS.OutputStream({\\n\\t...\\n\\tsource_map: source_map\\n});\\ncompressed_ast.print(stream);\\n\\nvar code = stream.toString();\\nvar map = source_map.toString(); // json output for your source map\\n```\\n\\nThe `source_map_options` (optional) can contain the following properties:\\n\\n- `file`: the name of the JavaScript output file that this mapping refers to\\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\\n- `orig`: the \\\"original source map\\\", handy when you compress generated JS\\n  and want to map the minified output back to the original code where it\\n  came from.  It can be simply a string in JSON, or a JSON object containing\\n  the original source map.\\n\\n  [acorn]: https://github.com/marijnh/acorn\\n  [source-map]: https://github.com/mozilla/source-map\\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\\n  [codegen]: http://lisperator.net/uglifyjs/codegen\\n  [compressor]: http://lisperator.net/uglifyjs/compress\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\README.md:\n  324  \n  325  UglifyJS2 has its own abstract syntax tree format; for\n  326: [practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\n  327  we can't easily change to using the SpiderMonkey AST internally.  However,\n  328  UglifyJS now has a converter which can import a SpiderMonkey AST.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\ast.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\compress.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\mozilla-ast.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\output.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\parse.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\scope.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\sourcemap.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\transform.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-contrib-uglify\\node_modules\\uglify-js\\lib\\utils.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-express\\node_modules\\forever-monitor\\node_modules\\broadway\\node_modules\\nconf\\node_modules\\ini\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"ini\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-express\\node_modules\\forever-monitor\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-express\\node_modules\\forever-monitor\\node_modules\\utile\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-express\\node_modules\\forever-monitor\\node_modules\\utile\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   24        \"name\": \"Isaac Z. Schlueter\",\n   25        \"email\": \"i@izs.me\",\n   26:       \"url\": \"http://blog.izs.me\"\n   27      },\n   28      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-express\\node_modules\\nopt\\package.json:\n    6      \"name\": \"Isaac Z. Schlueter\",\n    7      \"email\": \"i@izs.me\",\n    8:     \"url\": \"http://blog.izs.me/\"\n    9    },\n   10    \"main\": \"lib/nopt.js\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\adapter\\lib\\angular-scenario.js:\n  556  	// Evaluates a script in a global context\n  557  	// Workarounds based on findings by Jim Driscoll\n  558: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  559  	globalEval: function( data ) {\n  560  		if ( data && core_rnotwhite.test( data ) ) {\n  ...\n 2459  			get: function( elem ) {\n 2460  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2461: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2462  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2463  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\adapter\\lib\\qunit.js:\n 1572  /**\n 1573   * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n 1574:  * http://flesler.blogspot.com Licensed under BSD\n 1575   * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n 1576   *\n ....\n 1578   * @version 1.0.0\n 1579   * @author Ariel Flesler\n 1580:  * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n 1581   */\n 1582  QUnit.jsDump = (function() {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\dateformat\\package.json:\n   14      \"node\": \"*\"\n   15    },\n   16:   \"readme\": \"# node-dateformat\\n\\nA node.js package for Steven Levithan's excellent [dateFormat()][dateformat] function.\\n\\n## Modifications\\n\\n* Removed the `Date.prototype.format` method. Sorry folks, but extending native prototypes is for suckers.\\n* Added a `module.exports = dateFormat;` statement at the bottom\\n\\n## Usage\\n\\nAs taken from Steven's post, modified to match the Modifications listed above:\\n\\n    var dateFormat = require('dateformat');\\n    var now = new Date();\\n\\n    // Basic usage\\n    dateFormat(now, \\\"dddd, mmmm dS, yyyy, h:MM:ss TT\\\");\\n    // Saturday, June 9th, 2007, 5:46:21 PM\\n\\n    // You can use one of several named masks\\n    dateFormat(now, \\\"isoDateTime\\\");\\n    // 2007-06-09T17:46:21\\n\\n    // ...Or add your own\\n    dateFormat.masks.hammerTime = 'HH:MM! \\\"Can\\\\'t touch this!\\\"';\\n    dateFormat(now, \\\"hammerTime\\\");\\n    // 17:46! Can't touch this!\\n\\n    // When using the standalone dateFormat function,\\n    // you can also provide the date as a string\\n    dateFormat(\\\"Jun 9 2007\\\", \\\"fullDate\\\");\\n    // Saturday, June 9, 2007\\n\\n    // Note that if you don't include the mask argument,\\n    // dateFormat.masks.default is used\\n    dateFormat(now);\\n    // Sat Jun 09 2007 17:46:21\\n\\n    // And if you don't include the date argument,\\n    // the current date and time is used\\n    dateFormat();\\n    // Sat Jun 09 2007 17:46:22\\n\\n    // You can also skip the date argument (as long as your mask doesn't\\n    // contain any numbers), in which case the current date/time is used\\n    dateFormat(\\\"longTime\\\");\\n    // 5:46:22 PM EST\\n\\n    // And finally, you can convert local time to UTC time. Simply pass in\\n    // true as an additional argument (no argument skipping allowed in this case):\\n    dateFormat(now, \\\"longTime\\\", true);\\n    // 10:46:21 PM UTC\\n\\n    // ...Or add the prefix \\\"UTC:\\\" to your mask.\\n    dateFormat(now, \\\"UTC:h:MM:ss TT Z\\\");\\n    // 10:46:21 PM UTC\\n\\n    // You can also get the ISO 8601 week of the year:\\n    dateFormat(now, \\\"W\\\");\\n    // 42\\n## License\\n\\n(c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\\n\\n[dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\\n[stevenlevithan]: http://stevenlevithan.com/\\n\",\n   17    \"readmeFilename\": \"Readme.md\",\n   18    \"_id\": \"dateformat@1.0.2-1.2.3\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\dateformat\\Readme.md:\n   64  (c) 2007-2009 Steven Levithan [stevenlevithan.com][stevenlevithan], MIT license.\n   65  \n   66: [dateformat]: http://blog.stevenlevithan.com/archives/date-time-format\n   67  [stevenlevithan]: http://stevenlevithan.com/\n   68  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\dateformat\\lib\\dateformat.js:\n   26       * Get the ISO 8601 week number\n   27       * Based on comments from\n   28:      * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   29       */\n   30      getWeek = function (date) {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\glob\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"glob\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\glob\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   18      \"name\": \"Isaac Z. Schlueter\",\n   19      \"email\": \"i@izs.me\",\n   20:     \"url\": \"http://blog.izs.me/\"\n   21    },\n   22    \"readme\": \"A dead simple way to do inheritance in JS.\\n\\n    var inherits = require(\\\"inherits\\\")\\n\\n    function Animal () {\\n      this.alive = true\\n    }\\n    Animal.prototype.say = function (what) {\\n      console.log(what)\\n    }\\n\\n    inherits(Dog, Animal)\\n    function Dog () {\\n      Dog.super.apply(this)\\n    }\\n    Dog.prototype.sniff = function () {\\n      this.say(\\\"sniff sniff\\\")\\n    }\\n    Dog.prototype.bark = function () {\\n      this.say(\\\"woof woof\\\")\\n    }\\n\\n    inherits(Chihuahua, Dog)\\n    function Chihuahua () {\\n      Chihuahua.super.apply(this)\\n    }\\n    Chihuahua.prototype.bark = function () {\\n      this.say(\\\"yip yip\\\")\\n    }\\n\\n    // also works\\n    function Cat () {\\n      Cat.super.apply(this)\\n    }\\n    Cat.prototype.hiss = function () {\\n      this.say(\\\"CHSKKSS!!\\\")\\n    }\\n    inherits(Cat, Animal, {\\n      meow: function () { this.say(\\\"miao miao\\\") }\\n    })\\n    Cat.prototype.purr = function () {\\n      this.say(\\\"purr purr\\\")\\n    }\\n\\n\\n    var c = new Chihuahua\\n    assert(c instanceof Chihuahua)\\n    assert(c instanceof Dog)\\n    assert(c instanceof Animal)\\n\\nThe actual function is laughably small.  10-lines small.\\n\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\http-proxy\\package.json:\n   53      \"node\": \">= 0.6.6\"\n   54    },\n   55:   \"readme\": \"# node-http-proxy [![Build Status](https://secure.travis-ci.org/nodejitsu/node-http-proxy.png)](http://travis-ci.org/nodejitsu/node-http-proxy)\\n\\n<img src=\\\"http://i.imgur.com/8fTt9.png\\\" />\\n\\n## Battle-hardened node.js http proxy\\n\\n### Features\\n\\n* Reverse proxies incoming http.ServerRequest streams\\n* Can be used as a CommonJS module in node.js\\n* Uses event buffering to support application latency in proxied requests\\n* Reverse or Forward Proxy based on simple JSON-based configuration\\n* Supports [WebSockets][1]\\n* Supports [HTTPS][2]\\n* Minimal request overhead and latency\\n* Full suite of functional tests\\n* Battled-hardened through __production usage__ @ [nodejitsu.com][0]\\n* Written entirely in Javascript\\n* Easy to use API\\n\\n### When to use node-http-proxy\\n\\nLet's suppose you were running multiple http application servers, but you only wanted to expose one machine to the internet. You could setup node-http-proxy on that one machine and then reverse-proxy the incoming http requests to locally running services which were not exposed to the outside network. \\n\\n### Installing npm (node package manager)\\n\\n```\\ncurl https://npmjs.org/install.sh | sh\\n```\\n\\n### Installing node-http-proxy\\n\\n```\\nnpm install http-proxy\\n```\\n\\n## Using node-http-proxy\\n\\nThere are several ways to use node-http-proxy; the library is designed to be flexible so that it can be used by itself, or in conjunction with other node.js libraries / tools:\\n\\n1. Standalone HTTP Proxy server\\n2. Inside of another HTTP server (like Connect)\\n3. In conjunction with a Proxy Routing Table\\n4. As a forward-proxy with a reverse proxy \\n5. From the command-line as a long running process\\n6. customized with 3rd party middleware.\\n\\nIn each of these scenarios node-http-proxy can handle any of these types of requests:\\n\\n1. HTTP Requests (http://)\\n2. HTTPS Requests (https://)\\n3. WebSocket Requests (ws://)\\n4. Secure WebSocket Requests (wss://)\\n\\nSee the [examples][3] for more working sample code.\\n\\n### Setup a basic stand-alone proxy server\\n\\n``` js\\nvar http = require('http'),\\n    httpProxy = require('http-proxy');\\n//\\n// Create your proxy server\\n//\\nhttpProxy.createServer(9000, 'localhost').listen(8000);\\n\\n//\\n// Create your target server\\n//\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('request successfully proxied!' + '\\\\n' + JSON.stringify(req.headers, true, 2));\\n  res.end();\\n}).listen(9000);\\n```\\n\\n### Setup a stand-alone proxy server with custom server logic\\n\\n``` js\\nvar http = require('http'),\\n    httpProxy = require('http-proxy');\\n    \\n//\\n// Create a proxy server with custom application logic\\n//\\nhttpProxy.createServer(function (req, res, proxy) {\\n  //\\n  // Put your custom server logic here\\n  //\\n  proxy.proxyRequest(req, res, {\\n    host: 'localhost',\\n    port: 9000\\n  });\\n}).listen(8000);\\n\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('request successfully proxied: ' + req.url +'\\\\n' + JSON.stringify(req.headers, true, 2));\\n  res.end();\\n}).listen(9000);\\n```\\n\\n### Setup a stand-alone proxy server with latency (e.g. IO, etc)\\n\\n``` js\\nvar http = require('http'),\\n    httpProxy = require('http-proxy');\\n\\n//\\n// Create a proxy server with custom application logic\\n//\\nhttpProxy.createServer(function (req, res, proxy) {\\n  //\\n  // Buffer the request so that `data` and `end` events\\n  // are not lost during async operation(s).\\n  //\\n  var buffer = httpProxy.buffer(req);\\n  \\n  //\\n  // Wait for two seconds then respond: this simulates\\n  // performing async actions before proxying a request\\n  //\\n  setTimeout(function () {\\n    proxy.proxyRequest(req, res, {\\n      host: 'localhost',\\n      port: 9000, \\n      buffer: buffer\\n    });      \\n  }, 2000);\\n}).listen(8000);\\n\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('request successfully proxied: ' + req.url +'\\\\n' + JSON.stringify(req.headers, true, 2));\\n  res.end();\\n}).listen(9000);\\n```\\n\\n### Proxy requests within another http server\\n\\n``` js\\nvar http = require('http'),\\n    httpProxy = require('http-proxy');\\n    \\n//\\n// Create a new instance of HttProxy to use in your server\\n//\\nvar proxy = new httpProxy.RoutingProxy();\\n\\n//\\n// Create a regular http server and proxy its handler\\n//\\nhttp.createServer(function (req, res) {\\n  //\\n  // Put your custom server logic here, then proxy\\n  //\\n  proxy.proxyRequest(req, res, {\\n    host: 'localhost',\\n    port: 9000\\n  });\\n}).listen(8001);\\n\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('request successfully proxied: ' + req.url +'\\\\n' + JSON.stringify(req.headers, true, 2));\\n  res.end();\\n}).listen(9000); \\n```\\n\\n### Proxy requests using a ProxyTable\\nA Proxy Table is a simple lookup table that maps incoming requests to proxy target locations. Take a look at an example of the options you need to pass to httpProxy.createServer:\\n\\n``` js\\nvar options = {\\n  router: {\\n    'foo.com/baz': '127.0.0.1:8001',\\n    'foo.com/buz': '127.0.0.1:8002',\\n    'bar.com/buz': '127.0.0.1:8003'\\n  }\\n};\\n```\\n\\nThe above route table will take incoming requests to 'foo.com/baz' and forward them to '127.0.0.1:8001'. Likewise it will take incoming requests to 'foo.com/buz' and forward them to '127.0.0.1:8002'. The routes themselves are later converted to regular expressions to enable more complex matching functionality. We can create a proxy server with these options by using the following code:\\n\\n``` js\\nvar proxyServer = httpProxy.createServer(options);\\nproxyServer.listen(80);\\n```\\n\\n### Proxy requests using a 'Hostname Only' ProxyTable\\nAs mentioned in the previous section, all routes passes to the ProxyTable are by default converted to regular expressions that are evaluated at proxy-time. This is good for complex URL rewriting of proxy requests, but less efficient when one simply wants to do pure hostname routing based on the HTTP 'Host' header. If you are only concerned with hostname routing, you change the lookup used by the internal ProxyTable:\\n\\n``` js\\nvar options = {\\n  hostnameOnly: true,\\n  router: {\\n    'foo.com': '127.0.0.1:8001',\\n    'bar.com': '127.0.0.1:8002'\\n  }\\n}\\n```\\n\\nNotice here that I have not included paths on the individual domains because this is not possible when using only the HTTP 'Host' header. Care to learn more? See [RFC2616: HTTP/1.1, Section 14.23, \\\"Host\\\"][4].\\n\\n### Proxy requests using a 'Pathname Only' ProxyTable\\n\\nIf you dont care about forwarding to different hosts, you can redirect based on the request path.\\n\\n``` js\\nvar options = {\\n  pathnameOnly: true,\\n  router: {\\n    '/wiki': '127.0.0.1:8001',\\n    '/blog': '127.0.0.1:8002',\\n    '/api':  '127.0.0.1:8003'\\n  }\\n}\\n```\\n\\nThis comes in handy if you are running separate services or applications on separate paths.  Note, using this option disables routing by hostname entirely.\\n\\n\\n### Proxy requests with an additional forward proxy\\nSometimes in addition to a reverse proxy, you may want your front-facing server to forward traffic to another location. For example, if you wanted to load test your staging environment. This is possible when using node-http-proxy using similar JSON-based configuration to a proxy table: \\n\\n``` js\\nvar proxyServerWithForwarding = httpProxy.createServer(9000, 'localhost', {\\n  forward: {\\n    port: 9000,\\n    host: 'staging.com'\\n  }\\n});\\nproxyServerWithForwarding.listen(80);\\n```\\n\\nThe forwarding option can be used in conjunction with the proxy table options by simply including both the 'forward' and 'router' properties in the options passed to 'createServer'.\\n\\n### Listening for proxy events\\nSometimes you want to listen to an event on a proxy. For example, you may want to listen to the 'end' event, which represents when the proxy has finished proxying a request.\\n\\n``` js\\nvar httpProxy = require('http-proxy');\\n\\nvar server = httpProxy.createServer(function (req, res, proxy) {\\n  var buffer = httpProxy.buffer(req);\\n\\n  proxy.proxyRequest(req, res, {\\n    host: '127.0.0.1',\\n    port: 9000,\\n    buffer: buffer\\n  });\\n});\\n\\nserver.proxy.on('end', function () {\\n  console.log(\\\"The request was proxied.\\\");\\n});\\n\\nserver.listen(8000);\\n```\\n\\nIt's important to remember not to listen for events on the proxy object in the function passed to `httpProxy.createServer`. Doing so would add a new listener on every request, which would end up being a disaster.\\n\\n## Using HTTPS\\nYou have all the full flexibility of node-http-proxy offers in HTTPS as well as HTTP. The two basic scenarios are: with a stand-alone proxy server or in conjunction with another HTTPS server.\\n\\n### Proxying to HTTP from HTTPS\\nThis is probably the most common use-case for proxying in conjunction with HTTPS. You have some front-facing HTTPS server, but all of your internal traffic is HTTP. In this way, you can reduce the number of servers to which your CA and other important security files are deployed and reduce the computational overhead from HTTPS traffic. \\n\\nUsing HTTPS in `node-http-proxy` is relatively straight-forward:\\n \\n``` js\\nvar fs = require('fs'),\\n    http = require('http'),\\n    https = require('https'),\\n    httpProxy = require('http-proxy');\\n    \\nvar options = {\\n  https: {\\n    key: fs.readFileSync('path/to/your/key.pem', 'utf8'),\\n    cert: fs.readFileSync('path/to/your/cert.pem', 'utf8')\\n  }\\n};\\n\\n//\\n// Create a standalone HTTPS proxy server\\n//\\nhttpProxy.createServer(8000, 'localhost', options).listen(8001);\\n\\n//\\n// Create an instance of HttpProxy to use with another HTTPS server\\n//\\nvar proxy = new httpProxy.HttpProxy({\\n  target: {\\n    host: 'localhost', \\n    port: 8000\\n  }\\n});\\nhttps.createServer(options.https, function (req, res) {\\n  proxy.proxyRequest(req, res)\\n}).listen(8002);\\n\\n//\\n// Create the target HTTPS server for both cases\\n//\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('hello https\\\\n');\\n  res.end();\\n}).listen(8000);\\n```\\n\\n### Using two certificates\\n\\nSuppose that your reverse proxy will handle HTTPS traffic for two different domains `fobar.com` and `barbaz.com`.\\nIf you need to use two different certificates you can take advantage of [Server Name Indication](http://en.wikipedia.org/wiki/Server_Name_Indication).\\n\\n``` js\\nvar https = require('https'),\\n    path = require(\\\"path\\\"),\\n    fs = require(\\\"fs\\\"),\\n    crypto = require(\\\"crypto\\\");\\n\\n//\\n// generic function to load the credentials context from disk\\n//\\nfunction getCredentialsContext (cer) {\\n  return crypto.createCredentials({\\n    key:  fs.readFileSync(path.join(__dirname, 'certs', cer + '.key')),\\n    cert: fs.readFileSync(path.join(__dirname, 'certs', cer + '.crt'))\\n  }).context;\\n}\\n\\n//\\n// A certificate per domain hash\\n//\\nvar certs = {\\n  \\\"fobar.com\\\":  getCredentialsContext(\\\"foobar\\\"),\\n  \\\"barbaz.com\\\": getCredentialsContext(\\\"barbaz\\\")\\n};\\n\\n//\\n// Proxy options\\n//\\nvar options = {\\n  https: {\\n    SNICallback: function (hostname) {\\n      return certs[hostname];\\n    },\\n    cert: myCert,\\n    key: myKey,\\n    ca: [myCa]\\n  },\\n  hostnameOnly: true,\\n  router: {\\n    'fobar.com':  '127.0.0.1:8001',\\n    'barbaz.com': '127.0.0.1:8002'\\n  }\\n};\\n\\n//\\n// Create a standalone HTTPS proxy server\\n//\\nhttpProxy.createServer(options).listen(8001);\\n\\n//\\n// Create the target HTTPS server\\n//\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('hello https\\\\n');\\n  res.end();\\n}).listen(8000);\\n\\n```\\n\\n### Proxying to HTTPS from HTTPS\\nProxying from HTTPS to HTTPS is essentially the same as proxying from HTTPS to HTTP, but you must include the `target` option in when calling `httpProxy.createServer` or instantiating a new instance of `HttpProxy`.\\n\\n``` js\\nvar fs = require('fs'),\\n    https = require('https'),\\n    httpProxy = require('http-proxy');\\n    \\nvar options = {\\n  https: {\\n    key: fs.readFileSync('path/to/your/key.pem', 'utf8'),\\n    cert: fs.readFileSync('path/to/your/cert.pem', 'utf8')\\n  },\\n  target: {\\n    https: true // This could also be an Object with key and cert properties\\n  }\\n};\\n\\n//\\n// Create a standalone HTTPS proxy server\\n//\\nhttpProxy.createServer(8000, 'localhost', options).listen(8001);\\n\\n//\\n// Create an instance of HttpProxy to use with another HTTPS server\\n//\\nvar proxy = new httpProxy.HttpProxy({ \\n  target: {\\n    host: 'localhost', \\n    port: 8000,\\n    https: true\\n  }\\n});\\n\\nhttps.createServer(options.https, function (req, res) {\\n  proxy.proxyRequest(req, res);\\n}).listen(8002);\\n\\n//\\n// Create the target HTTPS server for both cases\\n//\\nhttps.createServer(options.https, function (req, res) {\\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\\n  res.write('hello https\\\\n');\\n  res.end();\\n}).listen(8000);\\n```\\n## Middleware\\n\\n`node-http-proxy` now supports connect middleware. Add middleware functions to your createServer call:\\n\\n``` js\\nhttpProxy.createServer(\\n  require('connect-gzip').gzip(),\\n  9000, 'localhost'\\n).listen(8000);\\n```\\n\\nA regular request we receive is to support the modification of html/xml content that is returned in the response from an upstream server. \\n\\n[Harmon](https://github.com/No9/harmon/) is a stream based middleware plugin that is designed to solve that problem in the most effective way possible. \\n\\n## Proxying WebSockets\\nWebsockets are handled automatically when using `httpProxy.createServer()`, however, if you supply a callback inside the createServer call, you will need to handle the 'upgrade' proxy event yourself. Here's how:\\n\\n```js\\n\\nvar options = {\\n    ....\\n};\\n\\nvar server = httpProxy.createServer(\\n    callback/middleware, \\n    options\\n);\\n\\nserver.listen(port, function () { ... });\\nserver.on('upgrade', function (req, socket, head) {\\n    server.proxy.proxyWebSocketRequest(req, socket, head);\\n});\\n```\\n\\nIf you would rather not use createServer call, and create the server that proxies yourself, see below:\\n\\n``` js\\nvar http = require('http'),\\n    httpProxy = require('http-proxy');\\n    \\n//\\n// Create an instance of node-http-proxy\\n//\\nvar proxy = new httpProxy.HttpProxy({\\n  target: {\\n    host: 'localhost',\\n    port: 8000\\n  }\\n});\\n\\nvar server = http.createServer(function (req, res) {\\n  //\\n  // Proxy normal HTTP requests\\n  //\\n  proxy.proxyRequest(req, res);\\n});\\n\\nserver.on('upgrade', function (req, socket, head) {\\n  //\\n  // Proxy websocket requests too\\n  //\\n  proxy.proxyWebSocketRequest(req, socket, head);\\n});\\n\\nserver.listen(8080);\\n```\\n\\n### with custom server logic\\n\\n``` js\\nvar httpProxy = require('http-proxy')\\n\\nvar server = httpProxy.createServer(function (req, res, proxy) {\\n  //\\n  // Put your custom server logic here\\n  //\\n  proxy.proxyRequest(req, res, {\\n    host: 'localhost',\\n    port: 9000\\n  });\\n})\\n\\nserver.on('upgrade', function (req, socket, head) {\\n  //\\n  // Put your custom server logic here\\n  //\\n  server.proxy.proxyWebSocketRequest(req, socket, head, {\\n    host: 'localhost',\\n    port: 9000\\n  });\\n});\\n\\nserver.listen(8080);\\n```\\n\\n### Configuring your Socket limits\\n\\nBy default, `node-http-proxy` will set a 100 socket limit for all `host:port` proxy targets. You can change this in two ways: \\n\\n1. By passing the `maxSockets` option to `httpProxy.createServer()`\\n2. By calling `httpProxy.setMaxSockets(n)`, where `n` is the number of sockets you with to use. \\n\\n## POST requests and buffering\\n\\nexpress.bodyParser will interfere with proxying of POST requests (and other methods that have a request \\nbody). With bodyParser active, proxied requests will never send anything to the upstream server, and \\nthe original client will just hang. See https://github.com/nodejitsu/node-http-proxy/issues/180 for options.\\n\\n## Using node-http-proxy from the command line\\nWhen you install this package with npm, a node-http-proxy binary will become available to you. Using this binary is easy with some simple options:\\n\\n``` js\\nusage: node-http-proxy [options] \\n\\nAll options should be set with the syntax --option=value\\n\\noptions:\\n  --port   PORT       Port that the proxy server should run on\\n  --target HOST:PORT  Location of the server the proxy will target\\n  --config OUTFILE    Location of the configuration file for the proxy server\\n  --silent            Silence the log output from the proxy server\\n  -h, --help          You're staring at it\\n```\\n\\n<br/>\\n## Why doesn't node-http-proxy have more advanced features like x, y, or z?\\n\\nIf you have a suggestion for a feature currently not supported, feel free to open a [support issue][6]. node-http-proxy is designed to just proxy http requests from one server to another, but we will be soon releasing many other complimentary projects that can be used in conjunction with node-http-proxy.\\n\\n## Options\\n\\n### Http Proxy\\n\\n`createServer()` supports the following options\\n\\n```javascript\\n{\\n  forward: { // options for forward-proxy\\n    port: 8000,\\n    host: 'staging.com'\\n  },\\n  target : { // options for proxy target\\n    port : 8000, \\n    host : 'localhost',\\n  };\\n  source : { // additional options for websocket proxying \\n    host : 'localhost',\\n    port : 8000,\\n    https: true\\n  },\\n  enable : {\\n    xforward: true // enables X-Forwarded-For\\n  },\\n  changeOrigin: false, // changes the origin of the host header to the target URL\\n  timeout: 120000 // override the default 2 minute http socket timeout value in milliseconds\\n}\\n```\\n\\n## Run Tests\\nThe test suite is designed to fully cover the combinatoric possibilities of HTTP and HTTPS proxying:\\n\\n1. HTTP --> HTTP\\n2. HTTPS --> HTTP\\n3. HTTPS --> HTTPS\\n4. HTTP --> HTTPS\\n\\n```\\nvows test/*-test.js --spec\\nvows test/*-test.js --spec --https\\nvows test/*-test.js --spec --https --target=https\\nvows test/*-test.js --spec --target=https\\n```\\n\\n<br/>\\n### License\\n\\n(The MIT License)\\n\\nCopyright (c) 2010 Charlie Robbins, Mikeal Rogers, Fedor Indutny, & Marak Squires\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n\\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n[0]: http://nodejitsu.com\\n[1]: https://github.com/nodejitsu/node-http-proxy/blob/master/examples/websocket/websocket-proxy.js\\n[2]: https://github.com/nodejitsu/node-http-proxy/blob/master/examples/http/proxy-https-to-http.js\\n[3]: https://github.com/nodejitsu/node-http-proxy/tree/master/examples\\n[4]: http://www.ietf.org/rfc/rfc2616.txt\\n[5]: http://socket.io\\n[6]: http://github.com/nodejitsu/node-http-proxy/issues\\n\",\n   56    \"readmeFilename\": \"README.md\",\n   57    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\http-proxy\\README.md:\n  212    router: {\n  213      '/wiki': '127.0.0.1:8001',\n  214:     '/blog': '127.0.0.1:8002',\n  215      '/api':  '127.0.0.1:8003'\n  216    }\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\http-proxy\\node_modules\\utile\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\http-proxy\\node_modules\\utile\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   24        \"name\": \"Isaac Z. Schlueter\",\n   25        \"email\": \"i@izs.me\",\n   26:       \"url\": \"http://blog.izs.me\"\n   27      },\n   28      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\escodegen\\node_modules\\esprima\\index.html:\n   53  <li>Language extension: <a href=\"http://mbebenita.github.com/LLJS/\">LLJS</a> (low-level JS), <a href=\"http://sweetjs.org/\">Sweet.js</a> (macro)</li>\n   54  <li>ES6/Harmony transpiler: <a href=\"https://github.com/matthewrobb/six\">Six</a>, <a href=\"https://github.com/jdiamond/harmonizr\">Harmonizr</a></li>\n   55: <li>Eclipse Orion smart editing (<a href=\"https://github.com/aclement/esprima-outline\">outline view</a>, <a href=\"http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html\">content assist</a>)</li>\n   56  <li>Source transformation: <a href=\"https://github.com/substack/node-falafel\">node-falafel</a>, <a href=\"https://github.com/Constellation/esmangle\">Esmangle</a>, <a href=\"https://github.com/Constellation/escodegen\">escodegen</a></li>\n   57  </ul>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\escodegen\\node_modules\\esprima\\package.json:\n   34      \"benchmark-quick\": \"node test/benchmarks.js quick\"\n   35    },\n   36:   \"readme\": \"**Esprima** ([esprima.org](http://esprima.org)) is a high performance,\\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\\nparser written in ECMAScript (also popularly known as\\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\\n\\nEsprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as\\n[Node.js](http://nodejs.org).\\n\\n### Features\\n\\n- Full support for [ECMAScript 5.1](http://www.ecma-international.org/publications/standards/Ecma-262.htm)(ECMA-262)\\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\\n- Heavily tested (> 550 [unit tests](http://esprima.org/test/) with solid 100% statement coverage)\\n- Optional tracking of syntax node location (index-based and line-column)\\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\\n\\nEsprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\\nIt is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\\nwith the new generation of fast parsers.\\n\\n### Applications\\n\\nEsprima serves as the basis for many popular JavaScript development tools:\\n\\n- Code coverage analysis: [node-cover](https://github.com/itay/node-cover), [Istanbul](https://github.com/yahoo/Istanbul)\\n- Documentation tool: [JFDoc](https://github.com/thejohnfreeman/jfdoc), [JSDuck](https://github.com/senchalabs/jsduck)\\n- Language extension: [LLJS](http://mbebenita.github.com/LLJS/) (low-level JS),\\n[Sweet.js](http://sweetjs.org/) (macro)\\n- ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\\n- Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\\n- Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\\n- Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\\n\\n### Questions?\\n- [Documentation](http://esprima.org/doc)\\n- [Issue tracker](http://issues.esprima.org): [known problems](http://code.google.com/p/esprima/issues/list?q=Defect)\\nand [future plans](http://code.google.com/p/esprima/issues/list?q=Enhancement)\\n- [Mailing list](http://groups.google.com/group/esprima)\\n- [Contribution guide](http://esprima.org/doc/index.html#contribution)\\n\\nFollow [@Esprima](http://twitter.com/Esprima) on Twitter to get the\\ndevelopment updates.\\nFeedback and contribution are welcomed!\\n\\n### License\\n\\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\\n and other contributors.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n  * Redistributions of source code must retain the above copyright\\n    notice, this list of conditions and the following disclaimer.\\n\\n  * Redistributions in binary form must reproduce the above copyright\\n    notice, this list of conditions and the following disclaimer in the\\n    documentation and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\",\n   37    \"readmeFilename\": \"README.md\",\n   38    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\escodegen\\node_modules\\esprima\\README.md:\n   31  [Sweet.js](http://sweetjs.org/) (macro)\n   32  - ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\n   33: - Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\n   34  - Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\n   35  - Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\escodegen\\node_modules\\esprima\\doc\\index.html:\n  201  </ul>\n  202  \n  203: For some more info, read also the blog post on <a href=\"http://ariya.ofilabs.com/2011/08/hall-of-api-shame-boolean-trap.html\">Boolean trap</a>.\n  204  \n  205  <h2 id=\"ast\">Syntax Tree Format</h2>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\ext-core-3.1.0.js:\n 3482  \n 3483  var tpl = new Ext.DomHelper.createTemplate(html);\n 3484: tpl.append('blog-roll', ['link1', 'http://www.jackslocum.com/', \"Jack&#39;s Site\"]);\n 3485: tpl.append('blog-roll', ['link2', 'http://www.dustindiaz.com/', \"Dustin&#39;s Site\"]);\n 3486   * </code></pre></p>\n 3487   *\n ....\n 3490  \n 3491  var tpl = new Ext.DomHelper.createTemplate(html);\n 3492: tpl.append('blog-roll', {\n 3493      id: 'link1',\n 3494      url: 'http://www.jackslocum.com/',\n 3495      text: \"Jack&#39;s Site\"\n 3496  });\n 3497: tpl.append('blog-roll', {\n 3498      id: 'link2',\n 3499      url: 'http://www.dustindiaz.com/',\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\jquery-1.6.4.js:\n  605  	// Evaluates a script in a global context\n  606  	// Workarounds based on findings by Jim Driscoll\n  607: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  608  	globalEval: function( data ) {\n  609  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2415  			get: function( elem ) {\n 2416  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2417: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2418  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2419  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\jquery-1.7.1.js:\n  603  	// Evaluates a script in a global context\n  604  	// Workarounds based on findings by Jim Driscoll\n  605: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  606  	globalEval: function( data ) {\n  607  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2625  			get: function( elem ) {\n 2626  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2627: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2628  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2629  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\jquery.mobile-1.0.js:\n 1351  //         \"removable\" for mobile-only development. Added IE6/7 document.title\n 1352  //         support. Attempted to make Iframe as hidden as possible by using\n 1353: //         techniques from http://www.paciellogroup.com/blog/?p=604. Added \n 1354  //         support for the \"shortcut\" format $(window).hashchange( fn ) and\n 1355  //         $(window).hashchange() like jQuery provides for built-in events.\n ....\n 1601            \n 1602            // Create hidden Iframe. Attempt to make Iframe as hidden as possible\n 1603:           // by using techniques from http://www.paciellogroup.com/blog/?p=604.\n 1604            iframe = $('<iframe tabindex=\"-1\" title=\"empty\"/>').hide()\n 1605              \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\mootools-1.3.2.js:\n   23  \n   24  inspiration:\n   25:   - Class implementation inspired by [Base.js](http://dean.edwards.name/weblog/2006/03/base/) Copyright (c) 2006 Dean Edwards, [GNU Lesser General Public License](http://opensource.org/licenses/lgpl-license.php)\n   26    - Some functionality inspired by [Prototype.js](http://prototypejs.org) Copyright (c) 2005-2007 Sam Stephenson, [MIT License](http://opensource.org/licenses/mit-license.php)\n   27  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\mootools-1.4.1.js:\n   23  \n   24  inspiration:\n   25:   - Class implementation inspired by [Base.js](http://dean.edwards.name/weblog/2006/03/base/) Copyright (c) 2006 Dean Edwards, [GNU Lesser General Public License](http://opensource.org/licenses/lgpl-license.php)\n   26    - Some functionality inspired by [Prototype.js](http://prototypejs.org) Copyright (c) 2005-2007 Sam Stephenson, [MIT License](http://opensource.org/licenses/mit-license.php)\n   27  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\esprima\\test\\3rdparty\\parse-js.js:\n   23                             Author: Mihai Bazon\n   24                           <mihai.bazon@gmail.com>\n   25:                        http://mihai.bazon.net/blog\n   26  \n   27    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\package.json:\n   30      \"test\": \"node test/run-tests.js\"\n   31    },\n   32:   \"readme\": \"UglifyJS 2\\n==========\\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\\n\\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\\n\\nThis page documents the command line utility.  For\\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\\nThere's also an\\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\\nChrome and probably Safari).\\n\\nInstall\\n-------\\n\\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\\n(You may need to restart your computer after this step).\\n\\nFrom NPM for use as a command line app:\\n\\n    npm install uglify-js -g\\n\\nFrom NPM for programmatic use:\\n\\n    npm install uglify-js\\n\\nFrom Git:\\n\\n    git clone git://github.com/mishoo/UglifyJS2.git\\n    cd UglifyJS2\\n    npm link .\\n\\nUsage\\n-----\\n\\n    uglifyjs [input files] [options]\\n\\nUglifyJS2 can take multiple input files.  It's recommended that you pass the\\ninput files first, then pass the options.  UglifyJS will parse input files\\nin sequence and apply any compression options.  The files are parsed in the\\nsame global scope, that is, a reference from a file to some\\nvariable/function declared in another file will be matched properly.\\n\\nIf you want to read from STDIN instead, pass a single dash instead of input\\nfiles.\\n\\nThe available options are:\\n\\n    --source-map       Specify an output file where to generate source map.\\n                                                                          [string]\\n    --source-map-root  The path to the original source to be included in the\\n                       source map.                                        [string]\\n    --source-map-url   The path to the source map to be added in //@\\n                       sourceMappingURL.  Defaults to the value passed with\\n                       --source-map.                                      [string]\\n    --in-source-map    Input source map, useful if you're compressing JS that was\\n                       generated from some other original code.\\n    --screw-ie8        Pass this flag if you don't care about full compliance with\\n                       Internet Explorer 6-8 quirks (by default UglifyJS will try\\n                       to be IE-proof).\\n    -p, --prefix       Skip prefix for original filenames that appear in source\\n                       maps. For example -p 3 will drop 3 directories from file\\n                       names and ensure they are relative paths.\\n    -o, --output       Output file (default STDOUT).\\n    -b, --beautify     Beautify output/specify output options.            [string]\\n    -m, --mangle       Mangle names/pass mangler options.                 [string]\\n    -r, --reserved     Reserved names to exclude from mangling.\\n    -c, --compress     Enable compressor/pass compressor options. Pass options\\n                       like -c hoist_vars=false,if_return=false. Use -c with no\\n                       argument to use the default compression options.   [string]\\n    -d, --define       Global definitions                                 [string]\\n    --comments         Preserve copyright comments in the output. By default this\\n                       works like Google Closure, keeping JSDoc-style comments\\n                       that contain \\\"@license\\\" or \\\"@preserve\\\". You can optionally\\n                       pass one of the following arguments to this flag:\\n                       - \\\"all\\\" to keep all comments\\n                       - a valid JS regexp (needs to start with a slash) to keep\\n                       only comments that match.\\n                       Note that currently not *all* comments can be kept when\\n                       compression is on, because of dead code removal or\\n                       cascading statements into sequences.               [string]\\n    --stats            Display operations run time on STDERR.            [boolean]\\n    --acorn            Use Acorn for parsing.                            [boolean]\\n    --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\\n                                                                         [boolean]\\n    --self             Build itself (UglifyJS2) as a library (implies\\n                       --wrap=UglifyJS --export-all)                     [boolean]\\n    --wrap             Embed everything in a big function, making the “exports”\\n                       and “global” variables available. You need to pass an\\n                       argument to this option to specify the name that your\\n                       module will take when included in, say, a browser.\\n                                                                          [string]\\n    --export-all       Only used when --wrap, this tells UglifyJS to add code to\\n                       automatically export all globals.                 [boolean]\\n    --lint             Display some scope warnings                       [boolean]\\n    -v, --verbose      Verbose                                           [boolean]\\n    -V, --version      Print version number and exit.                    [boolean]\\n\\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\\ngoes to STDOUT.\\n\\n## Source map options\\n\\nUglifyJS2 can generate a source map file, which is highly useful for\\ndebugging your compressed JavaScript.  To get a source map, pass\\n`--source-map output.js.map` (full path to the file where you want the\\nsource map dumped).\\n\\nAdditionally you might need `--source-map-root` to pass the URL where the\\noriginal files can be found.  In case you are passing full paths to input\\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\\ndirectories to drop from the path prefix when declaring files in the source\\nmap.\\n\\nFor example:\\n\\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\\\\n             /home/doe/work/foo/src/js/file2.js \\\\\\n             -o foo.min.js \\\\\\n             --source-map foo.min.js.map \\\\\\n             --source-map-root http://foo.com/src \\\\\\n             -p 5 -c -m\\n\\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\\nmapping will refer to `http://foo.com/src/js/file1.js` and\\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\\nas the source map root, and the original files as `js/file1.js` and\\n`js/file2.js`).\\n\\n### Composed source map\\n\\nWhen you're compressing JS code that was output by a compiler such as\\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\\noption to take an input source map.  Assuming you have a mapping from\\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\\ncompressed JS by mapping every token in the compiled JS to its original\\nlocation.\\n\\nTo use this feature you need to pass `--in-source-map\\n/path/to/input/source.map`.  Normally the input source map should also point\\nto the file containing the generated JS, so if that's correct you can omit\\ninput files from the command line.\\n\\n## Mangler options\\n\\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\\n(comma-separated) options are supported:\\n\\n- `sort` — to assign shorter names to most frequently used variables.  This\\n  saves a few hundred bytes on jQuery before gzip, but the output is\\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\\n  on) therefore it's not enabled by default.\\n\\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\\n  default).\\n\\n- `eval` — mangle names visible in scopes where `eval` or `when` are used\\n  (disabled by default).\\n\\nWhen mangling is enabled but you want to prevent certain names from being\\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\\ncomma-separated list of names.  For example:\\n\\n    uglifyjs ... -m -r '$,require,exports'\\n\\nto prevent the `require`, `exports` and `$` names from being changed.\\n\\n## Compressor options\\n\\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\\nyou can pass a comma-separated list of options.  Options are in the form\\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\\nto set `true`; it's effectively a shortcut for `foo=true`).\\n\\n- `sequences` -- join consecutive simple statements using the comma operator\\n- `properties` -- rewrite property access using the dot notation, for\\n  example `foo[\\\"bar\\\"] → foo.bar`\\n- `dead_code` -- remove unreachable code\\n- `drop_debugger` -- remove `debugger;` statements\\n- `unsafe` (default: false) -- apply \\\"unsafe\\\" transformations (discussion below)\\n- `conditionals` -- apply optimizations for `if`-s and conditional\\n  expressions\\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\\n- `evaluate` -- attempt to evaluate constant expressions\\n- `booleans` -- various optimizations for boolean context, for example `!!a\\n  ? b : c → a ? b : c`\\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\\n  statically determine the condition\\n- `unused` -- drop unreferenced functions and variables\\n- `hoist_funs` -- hoist function declarations\\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\\n  by default because it seems to increase the size of the output in general)\\n- `if_return` -- optimizations for if/return and if/continue\\n- `join_vars` -- join consecutive `var` statements\\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\\n  and `x = something(), x` into `x = something()`\\n- `warnings` -- display warnings when dropping unreachable code or unused\\n  declarations etc.\\n\\n### The `unsafe` option\\n\\nIt enables some transformations that *might* break code logic in certain\\ncontrived cases, but should be fine for most code.  You might want to try it\\non your own code, it should reduce the minified size.  Here's what happens\\nwhen this flag is on:\\n\\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\\n- `new Object()` → `{}`\\n- `String(exp)` or `exp.toString()` → `\\\"\\\" + exp`\\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\\n- `typeof foo == \\\"undefined\\\"` → `foo === void 0`\\n- `void 0` → `\\\"undefined\\\"` (if there is a variable named \\\"undefined\\\" in\\n  scope; we do it because the variable name will be mangled, typically\\n  reduced to a single character).\\n\\n### Conditional compilation\\n\\nYou can use the `--define` (`-d`) switch in order to declare global\\nvariables that UglifyJS will assume to be constants (unless defined in\\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\\ndead code removal UglifyJS will discard the following from the output:\\n```javascript\\nif (DEBUG) {\\n\\tconsole.log(\\\"debug stuff\\\");\\n}\\n```\\n\\nUglifyJS will warn about the condition being always false and about dropping\\nunreachable code; for now there is no option to turn off only this specific\\nwarning, you can pass `warnings=false` to turn off *all* warnings.\\n\\nAnother way of doing that is to declare your globals as constants in a\\nseparate file and include it into the build.  For example you can have a\\n`build/defines.js` file with the following:\\n```javascript\\nconst DEBUG = false;\\nconst PRODUCTION = true;\\n// etc.\\n```\\n\\nand build your code like this:\\n\\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\\n\\nUglifyJS will notice the constants and, since they cannot be altered, it\\nwill evaluate references to them to the value itself and drop unreachable\\ncode as usual.  The possible downside of this approach is that the build\\nwill contain the `const` declarations.\\n\\n<a name=\\\"codegen-options\\\"></a>\\n## Beautifier options\\n\\nThe code generator tries to output shortest code possible by default.  In\\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\\ncan pass additional arguments that control the code output:\\n\\n- `beautify` (default `true`) -- whether to actually beautify the output.\\n  Passing `-b` will set this to true, but you might need to pass `-b` even\\n  when you want to generate minified code, in order to specify additional\\n  arguments, so you can use `-b beautify=false` to override it.\\n- `indent-level` (default 4)\\n- `indent-start` (default 0) -- prefix all lines by that many spaces\\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\\n  objects\\n- `space-colon` (default `true`) -- insert a space after the colon signs\\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\\n  regexps\\n- `inline-script` (default `false`) -- escape the slash in occurrences of\\n  `</script` in strings\\n- `width` (default 80) -- only takes effect when beautification is on, this\\n  specifies an (orientative) line width that the beautifier will try to\\n  obey.  It refers to the width of the line text (excluding indentation).\\n  It doesn't work very well currently, but it does make the code generated\\n  by UglifyJS more readable.\\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\\n- `ie-proof` (default `true`) -- generate “IE-proof” code (for now this\\n  means add brackets around the do/while in code like this: `if (foo) do\\n  something(); while (bar); else ...`.\\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\\n  `do`, `while` or `with` statements, even if their body is a single\\n  statement.\\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\\n  you pass `false` then whenever possible we will use a newline instead of a\\n  semicolon, leading to more readable output of uglified code (size before\\n  gzip could be smaller; size after gzip insignificantly larger).\\n- `negate-iife` (default `!beautify`) -- prefer negation, rather than\\n  parens, for \\\"Immediately-Called Function Expressions\\\".  This defaults to\\n  `true` when beautification is off, and `false` if beautification is on;\\n  pass it manually to force a value.\\n\\n### Keeping copyright notices or other comments\\n\\nYou can pass `--comments` to retain certain comments in the output.  By\\ndefault it will keep JSDoc-style comments that contain \\\"@preserve\\\",\\n\\\"@license\\\" or \\\"@cc_on\\\" (conditional compilation for IE).  You can pass\\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\\nkeep only comments that match this regexp.  For example `--comments\\n'/foo|bar/'` will keep only comments that contain \\\"foo\\\" or \\\"bar\\\".\\n\\nNote, however, that there might be situations where comments are lost.  For\\nexample:\\n```javascript\\nfunction f() {\\n\\t/** @preserve Foo Bar */\\n\\tfunction g() {\\n\\t  // this function is never called\\n\\t}\\n\\treturn something();\\n}\\n```\\n\\nEven though it has \\\"@preserve\\\", the comment will be lost because the inner\\nfunction `g` (which is the AST node to which the comment is attached to) is\\ndiscarded by the compressor as not referenced.\\n\\nThe safest comments where to place copyright information (or other info that\\nneeds to be kept in the output) are comments attached to toplevel nodes.\\n\\n## Support for the SpiderMonkey AST\\n\\nUglifyJS2 has its own abstract syntax tree format; for\\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\\nwe can't easily change to using the SpiderMonkey AST internally.  However,\\nUglifyJS now has a converter which can import a SpiderMonkey AST.\\n\\nFor example [Acorn][acorn] is a super-fast parser that produces a\\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\\ncompress that:\\n\\n    acorn file.js | uglifyjs --spidermonkey -m -c\\n\\nThe `--spidermonkey` option tells UglifyJS that all input files are not\\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\\ndon't use our own parser in this case, but just transform that AST into our\\ninternal AST.\\n\\n### Use Acorn for parsing\\n\\nMore for fun, I added the `--acorn` option which will use Acorn to do all\\nthe parsing.  If you pass this option, UglifyJS will `require(\\\"acorn\\\")`.\\n\\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\\nin total it's a bit more than just using UglifyJS's own parser.\\n\\nAPI Reference\\n-------------\\n\\nAssuming installation via NPM, you can load UglifyJS in your application\\nlike this:\\n```javascript\\nvar UglifyJS = require(\\\"uglify-js\\\");\\n```\\n\\nIt exports a lot of names, but I'll discuss here the basics that are needed\\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\\nparse, (2) compress, (3) mangle, (4) generate output code.\\n\\n### The simple way\\n\\nThere's a single toplevel function which combines all the steps.  If you\\ndon't need additional customization, you might want to go with `minify`.\\nExample:\\n```javascript\\nvar result = UglifyJS.minify(\\\"/path/to/file.js\\\");\\nconsole.log(result.code); // minified output\\n// if you need to pass code instead of file name\\nvar result = UglifyJS.minify(\\\"var b = function () {};\\\", {fromString: true});\\n```\\n\\nYou can also compress multiple files:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ]);\\nconsole.log(result.code);\\n```\\n\\nTo generate a source map:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ], {\\n\\toutSourceMap: \\\"out.js.map\\\"\\n});\\nconsole.log(result.code); // minified output\\nconsole.log(result.map);\\n```\\n\\nNote that the source map is not saved in a file, it's just returned in\\n`result.map`.  The value passed for `outSourceMap` is only used to set the\\n`file` attribute in the source map (see [the spec][sm-spec]).\\n\\nYou can also specify sourceRoot property to be included in source map:\\n```javascript\\nvar result = UglifyJS.minify([ \\\"file1.js\\\", \\\"file2.js\\\", \\\"file3.js\\\" ], {\\n\\toutSourceMap: \\\"out.js.map\\\",\\n\\tsourceRoot: \\\"http://example.com/src\\\"\\n});\\n```\\n\\nIf you're compressing compiled JavaScript and have a source map for it, you\\ncan use the `inSourceMap` argument:\\n```javascript\\nvar result = UglifyJS.minify(\\\"compiled.js\\\", {\\n\\tinSourceMap: \\\"compiled.js.map\\\",\\n\\toutSourceMap: \\\"minified.js.map\\\"\\n});\\n// same as before, it returns `code` and `map`\\n```\\n\\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\\nno sense otherwise).\\n\\nOther options:\\n\\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\\n\\n- `fromString` (default `false`) — if you pass `true` then you can pass\\n  JavaScript source code, rather than file names.\\n\\n- `mangle` — pass `false` to skip mangling names.\\n\\n- `output` (default `null`) — pass an object if you wish to specify\\n  additional [output options][codegen].  The defaults are optimized\\n  for best compression.\\n\\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\\n  Pass an object to specify custom [compressor options][compressor].\\n\\nWe could add more options to `UglifyJS.minify` — if you need additional\\nfunctionality please suggest!\\n\\n### The hard way\\n\\nFollowing there's more detailed API info, in case the `minify` function is\\ntoo simple for your needs.\\n\\n#### The parser\\n```javascript\\nvar toplevel_ast = UglifyJS.parse(code, options);\\n```\\n\\n`options` is optional and if present it must be an object.  The following\\nproperties are available:\\n\\n- `strict` — disable automatic semicolon insertion and support for trailing\\n  comma in arrays and objects\\n- `filename` — the name of the file where this code is coming from\\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\\n  `parse`)\\n\\nThe last two options are useful when you'd like to minify multiple files and\\nget a single file as the output and a proper source map.  Our CLI tool does\\nsomething like this:\\n```javascript\\nvar toplevel = null;\\nfiles.forEach(function(file){\\n\\tvar code = fs.readFileSync(file);\\n\\ttoplevel = UglifyJS.parse(code, {\\n\\t\\tfilename: file,\\n\\t\\ttoplevel: toplevel\\n\\t});\\n});\\n```\\n\\nAfter this, we have in `toplevel` a big AST containing all our files, with\\neach token having proper information about where it came from.\\n\\n#### Scope information\\n\\nUglifyJS contains a scope analyzer that you need to call manually before\\ncompressing or mangling.  Basically it augments various nodes in the AST\\nwith information about where is a name defined, how many times is a name\\nreferenced, if it is a global or not, if a function is using `eval` or the\\n`with` statement etc.  I will discuss this some place else, for now what's\\nimportant to know is that you need to call the following before doing\\nanything with the tree:\\n```javascript\\ntoplevel.figure_out_scope()\\n```\\n\\n#### Compression\\n\\nLike this:\\n```javascript\\nvar compressor = UglifyJS.Compressor(options);\\nvar compressed_ast = toplevel.transform(compressor);\\n```\\n\\nThe `options` can be missing.  Available options are discussed above in\\n“Compressor options”.  Defaults should lead to best compression in most\\nscripts.\\n\\nThe compressor is destructive, so don't rely that `toplevel` remains the\\noriginal tree.\\n\\n#### Mangling\\n\\nAfter compression it is a good idea to call again `figure_out_scope` (since\\nthe compressor might drop unused variables / unreachable code and this might\\nchange the number of identifiers or their position).  Optionally, you can\\ncall a trick that helps after Gzip (counting character frequency in\\nnon-mangleable words).  Example:\\n```javascript\\ncompressed_ast.figure_out_scope();\\ncompressed_ast.compute_char_frequency();\\ncompressed_ast.mangle_names();\\n```\\n\\n#### Generating output\\n\\nAST nodes have a `print` method that takes an output stream.  Essentially,\\nto generate code you do this:\\n```javascript\\nvar stream = UglifyJS.OutputStream(options);\\ncompressed_ast.print(stream);\\nvar code = stream.toString(); // this is your minified code\\n```\\n\\nor, for a shortcut you can do:\\n```javascript\\nvar code = compressed_ast.print_to_string(options);\\n```\\n\\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\\nmost of them documented above in section “Beautifier options”.  The two\\nwhich we care about here are `source_map` and `comments`.\\n\\n#### Keeping comments in the output\\n\\nIn order to keep certain comments in the output you need to pass the\\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\\nthose comments whose body matches the regexp will be kept.  Note that body\\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\\ncalled for every comment in the tree and will receive two arguments: the\\nnode that the comment is attached to, and the comment token itself.\\n\\nThe comment token has these properties:\\n\\n- `type`: \\\"comment1\\\" for single-line comments or \\\"comment2\\\" for multi-line\\n  comments\\n- `value`: the comment body\\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\\n  original code where this comment appears\\n- `line` and `col`: the line and column where this comment appears in the\\n  original code\\n- `file` — the file name of the original file\\n- `nlb` — true if there was a newline before this comment in the original\\n  code, or if this comment contains a newline.\\n\\nYour function should return `true` to keep the comment, or a falsy value\\notherwise.\\n\\n#### Generating a source mapping\\n\\nYou need to pass the `source_map` argument when calling `print`.  It needs\\nto be a `SourceMap` object (which is a thin wrapper on top of the\\n[source-map][source-map] library).\\n\\nExample:\\n```javascript\\nvar source_map = UglifyJS.SourceMap(source_map_options);\\nvar stream = UglifyJS.OutputStream({\\n\\t...\\n\\tsource_map: source_map\\n});\\ncompressed_ast.print(stream);\\n\\nvar code = stream.toString();\\nvar map = source_map.toString(); // json output for your source map\\n```\\n\\nThe `source_map_options` (optional) can contain the following properties:\\n\\n- `file`: the name of the JavaScript output file that this mapping refers to\\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\\n- `orig`: the \\\"original source map\\\", handy when you compress generated JS\\n  and want to map the minified output back to the original code where it\\n  came from.  It can be simply a string in JSON, or a JSON object containing\\n  the original source map.\\n\\n  [acorn]: https://github.com/marijnh/acorn\\n  [source-map]: https://github.com/mozilla/source-map\\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\\n  [codegen]: http://lisperator.net/uglifyjs/codegen\\n  [compressor]: http://lisperator.net/uglifyjs/compress\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\README.md:\n  324  \n  325  UglifyJS2 has its own abstract syntax tree format; for\n  326: [practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\n  327  we can't easily change to using the SpiderMonkey AST internally.  However,\n  328  UglifyJS now has a converter which can import a SpiderMonkey AST.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\ast.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\compress.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\mozilla-ast.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\output.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\parse.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\scope.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\sourcemap.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\transform.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\handlebars\\node_modules\\uglify-js\\lib\\utils.js:\n    8                             Author: Mihai Bazon\n    9                           <mihai.bazon@gmail.com>\n   10:                        http://mihai.bazon.net/blog\n   11  \n   12    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\nopt\\package.json:\n    6      \"name\": \"Isaac Z. Schlueter\",\n    7      \"email\": \"i@izs.me\",\n    8:     \"url\": \"http://blog.izs.me/\"\n    9    },\n   10    \"main\": \"lib/nopt.js\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\istanbul\\node_modules\\which\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"which\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\lodash.js:\n 4952      function template(text, data, options) {\n 4953        // based on John Resig's `tmpl` implementation\n 4954:       // http://ejohn.org/blog/javascript-micro-templating/\n 4955        // and Laura Doktorova's doT.js\n 4956        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\package.json:\n   37      \"main\": \"./lodash.js\"\n   38    },\n   39:   \"readme\": \"# Lo-Dash <sup>v1.1.1</sup>\\n[![build status](https://secure.travis-ci.org/bestiejs/lodash.png)](http://travis-ci.org/bestiejs/lodash)\\n\\nA low-level utility library delivering consistency, [customization](https://github.com/bestiejs/lodash#custom-builds), [performance](http://lodash.com/benchmarks), and [extra features](https://github.com/bestiejs/lodash#features).\\n\\n## Download\\n\\n* Lo-Dash builds (for modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.1.1/dist/lodash.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.1.1/dist/lodash.min.js)\\n\\n* Lo-Dash compatibility builds (for legacy and modern environments):<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.1.1/dist/lodash.compat.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.1.1/dist/lodash.compat.min.js)\\n\\n* Underscore compatibility builds:<br>\\n[Development](https://raw.github.com/bestiejs/lodash/v1.1.1/dist/lodash.underscore.js) and\\n[Production](https://raw.github.com/bestiejs/lodash/v1.1.1/dist/lodash.underscore.min.js)\\n\\n* CDN copies of ≤ v1.1.1’s builds are available on [cdnjs](http://cdnjs.com/) thanks to [CloudFlare](http://www.cloudflare.com/):<br>\\n[Lo-Dash dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.1.1/lodash.js),\\n[Lo-Dash prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.1.1/lodash.min.js),<br>\\n[Lo-Dash compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.1.1/lodash.compat.js),\\n[Lo-Dash compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.1.1/lodash.compat.min.js),<br>\\n[Underscore compat-dev](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.1.1/lodash.underscore.js), and\\n[Underscore compat-prod](http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.1.1/lodash.underscore.min.js)\\n\\n* For optimal file size, [create a custom build](https://github.com/bestiejs/lodash#custom-builds) with only the features you need\\n\\n## Dive in\\n\\nWe’ve got [API docs](http://lodash.com/docs), [benchmarks](http://lodash.com/benchmarks), and [unit tests](http://lodash.com/tests).\\n\\nFor a list of upcoming features, check out our [roadmap](https://github.com/bestiejs/lodash/wiki/Roadmap).\\n\\n## Resources\\n\\nFor more information check out these articles, screencasts, and other videos over Lo-Dash:\\n\\n * Posts\\n  - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\\n\\n * Videos\\n  - [Introducing Lo-Dash](https://vimeo.com/44154599)\\n  - [Lo-Dash optimizations and custom builds](https://vimeo.com/44154601)\\n  - [Lo-Dash’s origin and why it’s a better utility belt](https://vimeo.com/44154600)\\n  - [Unit testing in Lo-Dash](https://vimeo.com/45865290)\\n  - [Lo-Dash’s approach to native method use](https://vimeo.com/48576012)\\n  - [CascadiaJS: Lo-Dash for a better utility belt](http://www.youtube.com/watch?v=dpPy4f_SeEk)\\n\\n## Features\\n\\n * AMD loader support ([RequireJS](http://requirejs.org/), [curl.js](https://github.com/cujojs/curl), etc.)\\n * [_(…)](http://lodash.com/docs#_) supports intuitive chaining\\n * [_.at](http://lodash.com/docs#at) for cherry-picking collection values\\n * [_.bindKey](http://lodash.com/docs#bindKey) for binding [*“lazy”* defined](http://michaux.ca/articles/lazy-function-definition-pattern) methods\\n * [_.cloneDeep](http://lodash.com/docs#cloneDeep) for deep cloning arrays and objects\\n * [_.contains](http://lodash.com/docs#contains) accepts a `fromIndex` argument\\n * [_.createCallback](http://lodash.com/docs#createCallback) to customize how callback arguments are handled and support callback shorthands in mixins\\n * [_.findIndex](http://lodash.com/docs#findIndex) and [_.findKey](http://lodash.com/docs#findKey) for finding indexes and keys of collections\\n * [_.forEach](http://lodash.com/docs#forEach) is chainable and supports exiting iteration early\\n * [_.forIn](http://lodash.com/docs#forIn) for iterating over an object’s own and inherited properties\\n * [_.forOwn](http://lodash.com/docs#forOwn) for iterating over an object’s own properties\\n * [_.isPlainObject](http://lodash.com/docs#isPlainObject) checks if values are created by the `Object` constructor\\n * [_.merge](http://lodash.com/docs#merge) for a deep [_.extend](http://lodash.com/docs#extend)\\n * [_.parseInt](http://lodash.com/docs#parseInt) for consistent cross-environment behavior\\n * [_.partial](http://lodash.com/docs#partial) and [_.partialRight](http://lodash.com/docs#partialRight) for partial application without `this` binding\\n * [_.runInContext](http://lodash.com/docs#runInContext) for easier mocking and extended environment support\\n * [_.support](http://lodash.com/docs#support) to flag environment features\\n * [_.template](http://lodash.com/docs#template) supports [*“imports”* options](http://lodash.com/docs#templateSettings_imports), [ES6 template delimiters](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6), and [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\\n * [_.where](http://lodash.com/docs#where) supports deep object comparisons\\n * [_.clone](http://lodash.com/docs#clone), [_.omit](http://lodash.com/docs#omit), [_.pick](http://lodash.com/docs#pick),\\n   [and more…](http://lodash.com/docs \\\"_.assign, _.cloneDeep, _.first, _.initial, _.isEqual, _.last, _.merge, _.rest\\\") accept `callback` and `thisArg` arguments\\n * [_.contains](http://lodash.com/docs#contains), [_.size](http://lodash.com/docs#size), [_.toArray](http://lodash.com/docs#toArray),\\n   [and more…](http://lodash.com/docs \\\"_.at, _.countBy, _.every, _.filter, _.find, _.forEach, _.groupBy, _.invoke, _.map, _.max, _.min, _.pluck, _.reduce, _.reduceRight, _.reject, _.shuffle, _.some, _.sortBy, _.where\\\") accept strings\\n * [_.filter](http://lodash.com/docs#filter), [_.find](http://lodash.com/docs#find), [_.map](http://lodash.com/docs#map),\\n   [and more…](http://lodash.com/docs \\\"_.countBy, _.every, _.first, _.groupBy, _.initial, _.last, _.max, _.min, _.reject, _.rest, _.some, _.sortBy, _.sortedIndex, _.uniq\\\") support *“_.pluck”* and *“_.where”* `callback` shorthands\\n\\n## Support\\n\\nLo-Dash has been tested in at least Chrome 5~25, Firefox 2~19, IE 6-10, Opera 9.25-12, Safari 3-6, Node.js 0.4.8-0.10.1, Narwhal 0.3.2, PhantomJS 1.8.1, RingoJS 0.9, and Rhino 1.7RC5.\\n\\n## Custom builds\\n\\nCustom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need.\\nTo top it off, we handle all method dependency and alias mapping for you.\\n\\n * Backbone builds, with only methods required by Backbone, may be created using the `backbone` modifier argument.\\n```bash\\nlodash backbone\\n```\\n\\n * CSP builds, supporting default [Content Security Policy](https://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html) restrictions, may be created using the `csp` modifier argument.\\n   The `csp` modifier is an alias of the `mobile` modifier. Lo-Dash may be used in Chrome extensions by using either the `csp`, `mobile`, or `underscore` build and using precompiled templates, or loading Lo-Dash in a [sandbox](http://developer.chrome.com/stable/extensions/sandboxingEval.html).\\n```bash\\nlodash csp\\n```\\n\\n * Legacy builds, tailored for older environments without [ES5 support](http://es5.github.com/), may be created using the `legacy` modifier argument.\\n```bash\\nlodash legacy\\n```\\n\\n * Modern builds, tailored for newer environments with ES5 support, may be created using the `modern` modifier argument.\\n```bash\\nlodash modern\\n```\\n\\n * Mobile builds, without method compilation and most bug fixes for old browsers, may be created using the `mobile` modifier argument.\\n```bash\\nlodash mobile\\n```\\n\\n * Strict builds, with `_.bindAll`, `_.defaults`, and `_.extend` in [strict mode](http://es5.github.com/#C), may be created using the `strict` modifier argument.\\n```bash\\nlodash strict\\n```\\n\\n * Underscore builds, tailored for projects already using Underscore, may be created using the `underscore` modifier argument.\\n```bash\\nlodash underscore\\n```\\n\\nCustom builds may be created using the following commands:\\n\\n * Use the `category` argument to pass comma separated categories of methods to include in the build.<br>\\n   Valid categories (case-insensitive) are *“arrays”*, *“chaining”*, *“collections”*, *“functions”*, *“objects”*, and *“utilities”*.\\n```bash\\nlodash category=collections,functions\\nlodash category=\\\"collections, functions\\\"\\n```\\n\\n * Use the `exports` argument to pass comma separated names of ways to export the `LoDash` function.<br>\\n   Valid exports are *“amd”*, *“commonjs”*, *“global”*, *“node”*, and *“none”*.\\n```bash\\nlodash exports=amd,commonjs,node\\nlodash exports=\\\"amd, commonjs, node\\\"\\n```\\n\\n * Use the `iife` argument to specify code to replace the immediately-invoked function expression that wraps Lo-Dash.\\n```bash\\nlodash iife=\\\"!function(window,undefined){%output%}(this)\\\"\\n```\\n\\n * Use the `include` argument to pass comma separated method/category names to include in the build.\\n```bash\\nlodash include=each,filter,map\\nlodash include=\\\"each, filter, map\\\"\\n```\\n\\n * Use the `minus` argument to pass comma separated method/category names to remove from those included in the build.\\n```bash\\nlodash underscore minus=result,shuffle\\nlodash underscore minus=\\\"result, shuffle\\\"\\n```\\n\\n * Use the `plus` argument to pass comma separated method/category names to add to those included in the build.\\n```bash\\nlodash backbone plus=random,template\\nlodash backbone plus=\\\"random, template\\\"\\n```\\n\\n * Use the `template` argument to pass the file path pattern used to match template files to precompile.\\n```bash\\nlodash template=\\\"./*.jst\\\"\\n```\\n\\n * Use the `settings` argument to pass the template settings used when precompiling templates.\\n```bash\\nlodash settings=\\\"{interpolate:/\\\\{\\\\{([\\\\s\\\\S]+?)\\\\}\\\\}/g}\\\"\\n```\\n\\n * Use the `moduleId` argument to specify the AMD module ID of Lo-Dash, which defaults to “lodash”, used by precompiled templates.\\n```bash\\nlodash moduleId=\\\"underscore\\\"\\n```\\n\\nAll arguments, except `legacy` with `csp`, `mobile`, `modern`, or `underscore`, may be combined.<br>\\nUnless specified by `-o` or `--output`, all files created are saved to the current working directory.\\n\\nThe following options are also supported:\\n\\n * `-c`, `--stdout` ......... Write output to standard output\\n * `-d`, `--debug` ........... Write only the non-minified development output\\n * `-h`, `--help` ............. Display help information\\n * `-m`, `--minify` ......... Write only the minified production output\\n * `-o`, `--output` ......... Write output to a given path/filename\\n * `-p`, `--source-map` .. Generate a source map for the minified output, using an optional source map URL\\n * `-s`, `--silent` ......... Skip status updates normally logged to the console\\n * `-V`, `--version` ....... Output current version of Lo-Dash\\n\\nThe `lodash` command-line utility is available when Lo-Dash is installed as a global package (i.e. `npm install -g lodash`).\\n\\n## Installation and usage\\n\\nIn browsers:\\n\\n```html\\n<script src=\\\"lodash.js\\\"></script>\\n```\\n\\nUsing [`npm`](http://npmjs.org/):\\n\\n```bash\\nnpm install lodash\\n\\nnpm install -g lodash\\nnpm link lodash\\n```\\n\\nTo avoid potential issues, update `npm` before installing Lo-Dash:\\n\\n```bash\\nnpm install npm -g\\n```\\n\\nIn [Node.js](http://nodejs.org/) and [RingoJS ≥ v0.8.0](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash');\\n\\n// or as a drop-in replacement for Underscore\\nvar _ = require('lodash/dist/lodash.underscore');\\n```\\n\\n**Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\\n\\nIn [RingoJS ≤ v0.7.0](http://ringojs.org/):\\n\\n```js\\nvar _ = require('lodash')._;\\n```\\n\\nIn [Rhino](http://www.mozilla.org/rhino/):\\n\\n```js\\nload('lodash.js');\\n```\\n\\nIn an AMD loader like [RequireJS](http://requirejs.org/):\\n\\n```js\\nrequire({\\n  'paths': {\\n    'underscore': 'path/to/lodash'\\n  }\\n},\\n['underscore'], function(_) {\\n  console.log(_.VERSION);\\n});\\n```\\n\\n## Release Notes\\n\\n### <sup>v1.1.1</sup>\\n\\n * Ensured the `underscore` build version of `_.forEach` accepts a `thisArg` argument\\n * Updated vendor/tar to work with Node v0.10.x\\n\\n### <sup>v1.1.0</sup>\\n\\n * Added `rhino -require` support\\n * Added `_.createCallback`, `_findIndex`, `_.findKey`, `_.parseInt`, `_.runInContext`, and `_.support`\\n * Added support for `callback` and `thisArg` arguments to `_.flatten`\\n * Added CommonJS/Node support to precompiled templates\\n * Ensured the `exports` object is not a DOM element\\n * Ensured `_.isPlainObject` returns `false` for objects without a `[[Class]]` of “Object”\\n * Made `_.cloneDeep`’s `callback` support more closely follow its documentation\\n * Made the template precompiler create nonexistent directories of `--output` paths\\n * Made `_.object` an alias of `_.zipObject`\\n * Optimized method chaining, object iteration, `_.find`, and `_.pluck` (an average of 18% overall better performance)\\n * Updated `backbone` build Lo-Dash method dependencies\\n\\nThe full changelog is available [here](https://github.com/bestiejs/lodash/wiki/Changelog).\\n\\n## BestieJS\\n\\nLo-Dash is part of the BestieJS *“Best in Class”* module collection. This means we promote solid browser/environment support, ES5+ precedents, unit testing, and plenty of documentation.\\n\\n## Author\\n\\n* [John-David Dalton](http://allyoucanleet.com/)\\n  [![twitter/jdalton](http://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70)](https://twitter.com/jdalton \\\"Follow @jdalton on Twitter\\\")\\n\\n## Contributors\\n\\n* [Kit Cambridge](http://kitcambridge.github.com/)\\n  [![twitter/kitcambridge](http://gravatar.com/avatar/6662a1d02f351b5ef2f8b4d815804661?s=70)](https://twitter.com/kitcambridge \\\"Follow @kitcambridge on Twitter\\\")\\n* [Mathias Bynens](http://mathiasbynens.be/)\\n  [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \\\"Follow @mathias on Twitter\\\")\\n\",\n   40    \"readmeFilename\": \"README.md\",\n   41    \"_id\": \"lodash@1.1.1\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\README.md:\n   39  \n   40   * Posts\n   41:   - [Say “Hello” to Lo-Dash](http://kitcambridge.be/blog/say-hello-to-lo-dash/)\n   42  \n   43   * Videos\n   ..\n  224  ```\n  225  \n  226: **Note:** If Lo-Dash is installed globally, run [`npm link lodash`](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) in your project’s root directory before requiring it.\n  227  \n  228  In [RingoJS ≤ v0.7.0](http://ringojs.org/):\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\dist\\lodash.compat.js:\n 4942      function template(text, data, options) {\n 4943        // based on John Resig's `tmpl` implementation\n 4944:       // http://ejohn.org/blog/javascript-micro-templating/\n 4945        // and Laura Doktorova's doT.js\n 4946        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\dist\\lodash.js:\n 4740      function template(text, data, options) {\n 4741        // based on John Resig's `tmpl` implementation\n 4742:       // http://ejohn.org/blog/javascript-micro-templating/\n 4743        // and Laura Doktorova's doT.js\n 4744        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\dist\\lodash.legacy.js:\n 4868      function template(text, data, options) {\n 4869        // based on John Resig's `tmpl` implementation\n 4870:       // http://ejohn.org/blog/javascript-micro-templating/\n 4871        // and Laura Doktorova's doT.js\n 4872        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\dist\\lodash.mobile.js:\n 4713      function template(text, data, options) {\n 4714        // based on John Resig's `tmpl` implementation\n 4715:       // http://ejohn.org/blog/javascript-micro-templating/\n 4716        // and Laura Doktorova's doT.js\n 4717        // https://github.com/olado/doT\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\lodash\\vendor\\tar\\vendor\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\lib\\streams\\BaseRollingFileStream.js:\n   11  \n   12  var debug;\n   13: if (process.env.NODE_DEBUG && /\\blog4js\\b/.test(process.env.NODE_DEBUG)) {\n   14      debug = function(message) { console.error('LOG4JS: (BaseRollingFileStream) %s', message); };\n   15  } else {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\lib\\streams\\DateRollingFileStream.js:\n    8  \n    9  var debug;\n   10: if (process.env.NODE_DEBUG && /\\blog4js\\b/.test(process.env.NODE_DEBUG)) {\n   11      debug = function(message) { console.error('LOG4JS: (DateRollingFileStream) %s', message); };\n   12  } else {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\lib\\streams\\RollingFileStream.js:\n    6  \n    7  var debug;\n    8: if (process.env.NODE_DEBUG && /\\blog4js\\b/.test(process.env.NODE_DEBUG)) {\n    9      debug = function(message) { console.error('LOG4JS: (RollingFileStream) %s', message); };\n   10  } else {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\node_modules\\dequeue\\package.json:\n   24      \"name\": \"LLeo\",\n   25      \"email\": \"lleoem@gmail.com\",\n   26:     \"url\": \"http://lleo-blog.blogspot.com/\"\n   27    },\n   28    \"engines\": {\n   ..\n   30    },\n   31    \"dependencies\": {},\n   32:   \"readme\": \"A Simple Double Ended Queue Datastructure\\n=========================================\\n\\nDequeue is implemented as a doubly linked circular list with a titular head\\nnode. By \\\"titular head node\\\", I mean an empty node to designate the beginning\\nand end of the circularly linked list. I first saw this construction in the\\nlinux kernel source and it seem simple and elegant. I added the `.length`\\nproperty to use it like I was using an Array.\\n\\nI was using a javascript Array as a FIFO. Somewhere between 100,000 and\\n200,000 entries the program performance went to hell (dev host is a MBP\\nw/8GB RAM). 15 minutes later, I implemented a simple dequeue and my FIFO\\nscales up to millions of entries.\\n\\nIt is a drop-in replacement for javascript-arrays-as-fifo.\\n\\n## Example: Dequeue as a replacement for an Array as a FIFO\\n\\n    var Dequeue = require('dequeue')\\n    \\n    //var fifo = []\\n    var fifo = new Dequeue()\\n    \\n    fifo.length === 0 //=> true\\n    \\n    fifo.push(d1)\\n    fifo.length === 1 //=> true\\n    \\n    fifo.unshift(d2)\\n    \\n    fifo.pop() === d1 //=> true\\n    \\n    fifo.push(d3)\\n    \\n    fifo.shift() === d2 //=> true\\n    \\n    fifo.length === 1 //=> true; only d3 is in the dequeue\\n    \\n## API\\n\\n### `deque = new Dequeue()`\\n\\n### `deque.push(value)`\\nPush a value on the end.\\n\\n### `value = deque.pop()`\\nRemove a value off the end.\\n\\n### `deque.unshift(value)`\\nPush a value on the beginning.\\n\\n### `value = deque.shift()`\\nRemove a value off the beginning.\\n\\n### `deque.empty()`\\nRemove all entries. This is NOT a test for an empty dequeue; use `deque.length`\\nfor that.\\n\\n## Future Development\\nSomething this simple does not really need a roadmap. However, I am thinking\\nof adding APIs to facilitate walking the Linked List via an iterator. It will\\nbe simple and fully backward compatible.\\n\\n## About the Code\\n\\nI was convinced by [a blog posting](http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding) [by Issac Z. Schlueter](http://blog.izs.me/) that I don't need\\nsemicolons. So I don't use them.\\n\",\n   33    \"readmeFilename\": \"README.md\",\n   34    \"_id\": \"dequeue@1.0.3\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\node_modules\\dequeue\\README.md:\n   64  ## About the Code\n   65  \n   66: I was convinced by [a blog posting](http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding) [by Issac Z. Schlueter](http://blog.izs.me/) that I don't need\n   67  semicolons. So I don't use them.\n   68  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\node_modules\\readable-stream\\fs.js:\n 1137  // Realpath\n 1138  // Not using realpath(2) because it's bad.\n 1139: // See: http://insanecoding.blogspot.com/2007/11/pathmax-simply-isnt.html\n 1140  \n 1141  var normalize = pathModule.normalize;\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\log4js\\node_modules\\readable-stream\\package.json:\n   23      \"name\": \"Isaac Z. Schlueter\",\n   24      \"email\": \"i@izs.me\",\n   25:     \"url\": \"http://blog.izs.me/\"\n   26    },\n   27    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\minimatch\\node_modules\\sigmund\\package.json:\n   29      \"name\": \"Isaac Z. Schlueter\",\n   30      \"email\": \"i@izs.me\",\n   31:     \"url\": \"http://blog.izs.me/\"\n   32    },\n   33    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\q\\package.json:\n   87      \"test\": \"./spec\"\n   88    },\n   89:   \"readme\": \"[![Build Status](https://secure.travis-ci.org/kriskowal/q.png?branch=master)](http://travis-ci.org/kriskowal/q)\\n\\n<a href=\\\"http://promises-aplus.github.com/promises-spec\\\">\\n    <img src=\\\"http://promises-aplus.github.com/promises-spec/assets/logo-small.png\\\"\\n         align=\\\"right\\\" alt=\\\"Promises/A+ logo\\\" />\\n</a>\\n\\nIf a function cannot return a value or throw an exception without\\nblocking, it can return a promise instead.  A promise is an object\\nthat represents the return value or the thrown exception that the\\nfunction may eventually provide.  A promise can also be used as a\\nproxy for a [remote object][Q-Connection] to overcome latency.\\n\\n[Q-Connection]: https://github.com/kriskowal/q-connection\\n\\nOn the first pass, promises can mitigate the “[Pyramid of\\nDoom][POD]”: the situation where code marches to the right faster\\nthan it marches forward.\\n\\n[POD]: http://calculist.org/blog/2011/12/14/why-coroutines-wont-work-on-the-web/\\n\\n```javascript\\nstep1(function (value1) {\\n    step2(value1, function(value2) {\\n        step3(value2, function(value3) {\\n            step4(value3, function(value4) {\\n                // Do something with value4\\n            });\\n        });\\n    });\\n});\\n```\\n\\nWith a promise library, you can flatten the pyramid.\\n\\n```javascript\\nQ.fcall(step1)\\n.then(step2)\\n.then(step3)\\n.then(step4)\\n.then(function (value4) {\\n    // Do something with value4\\n}, function (error) {\\n    // Handle any error from step1 through step4\\n})\\n.done();\\n```\\n\\nWith this approach, you also get implicit error propagation,\\njust like ``try``, ``catch``, and ``finally``.  An error in\\n``step1`` will flow all the way to ``step5``, where it’s\\ncaught and handled.\\n\\nThe callback approach is called an “inversion of control”.\\nA function that accepts a callback instead of a return value\\nis saying, “Don’t call me, I’ll call you.”.  Promises\\n[un-invert][IOC] the inversion, cleanly separating the input\\narguments from control flow arguments.  This simplifies the\\nuse and creation of API’s, particularly variadic,\\nrest and spread arguments.\\n\\n[IOC]: http://www.slideshare.net/domenicdenicola/callbacks-promises-and-coroutines-oh-my-the-evolution-of-asynchronicity-in-javascript\\n\\n\\n## Getting Started\\n\\nThe Q module can be loaded as:\\n\\n-   A ``<script>`` tag (creating a ``Q`` global variable): ~2.5 KB minified and\\n    gzipped.\\n-   A Node.js and CommonJS module, available in [npm](https://npmjs.org/) as\\n    the [q](https://npmjs.org/package/q) package\\n-   An AMD module\\n-   A [component](https://github.com/component/component) as ``microjs/q``\\n-   Using [bower](http://bower.io/) as ``q``\\n-   Using [NuGet](http://nuget.org/) as [Q](https://nuget.org/packages/q)\\n\\nQ can exchange promises with jQuery, Dojo, When.js, WinJS, and more.\\nAdditionally, there are many libraries that produce and consume Q promises for\\neverything from file system/database access or RPC to templating. For a list of\\nsome of the more popular ones, see [Libraries][].\\n\\nPlease join the Q-Continuum [mailing list](https://groups.google.com/forum/#!forum/q-continuum).\\n\\n[Libraries]: https://github.com/kriskowal/q/wiki/Libraries\\n\\n\\n## Tutorial\\n\\nPromises have a ``then`` method, which you can use to get the eventual\\nreturn value (fulfillment) or thrown exception (rejection).\\n\\n```javascript\\npromiseMeSomething()\\n.then(function (value) {\\n}, function (reason) {\\n});\\n```\\n\\nIf ``promiseMeSomething`` returns a promise that gets fulfilled later\\nwith a return value, the first function (the fulfillment handler) will be\\ncalled with the value.  However, if the ``promiseMeSomething`` function\\ngets rejected later by a thrown exception, the second function (the\\nrejection handler) will be called with the exception.\\n\\nNote that resolution of a promise is always asynchronous: that is, the\\nfulfillment or rejection handler will always be called in the next turn of the\\nevent loop (i.e. `process.nextTick` in Node). This gives you a nice\\nguarantee when mentally tracing the flow of your code, namely that\\n``then`` will always return before either handler is executed.\\n\\n\\n### Propagation\\n\\nThe ``then`` method returns a promise, which in this example, I’m\\nassigning to ``outputPromise``.\\n\\n```javascript\\nvar outputPromise = getInputPromise()\\n.then(function (input) {\\n}, function (reason) {\\n});\\n```\\n\\nThe ``outputPromise`` variable becomes a new promise for the return\\nvalue of either handler.  Since a function can only either return a\\nvalue or throw an exception, only one handler will ever be called and it\\nwill be responsible for resolving ``outputPromise``.\\n\\n-   If you return a value in a handler, ``outputPromise`` will get\\n    fulfilled.\\n\\n-   If you throw an exception in a handler, ``outputPromise`` will get\\n    rejected.\\n\\n-   If you return a **promise** in a handler, ``outputPromise`` will\\n    “become” that promise.  Being able to become a new promise is useful\\n    for managing delays, combining results, or recovering from errors.\\n\\nIf the ``getInputPromise()`` promise gets rejected and you omit the\\nrejection handler, the **error** will go to ``outputPromise``:\\n\\n```javascript\\nvar outputPromise = getInputPromise()\\n.then(function (value) {\\n});\\n```\\n\\nIf the input promise gets fulfilled and you omit the fulfillment handler, the\\n**value** will go to ``outputPromise``:\\n\\n```javascript\\nvar outputPromise = getInputPromise()\\n.then(null, function (error) {\\n});\\n```\\n\\nQ promises provide a ``fail`` shorthand for ``then`` when you are only\\ninterested in handling the error:\\n\\n```javascript\\nvar outputPromise = getInputPromise()\\n.fail(function (error) {\\n});\\n```\\n\\nIf you are writing JavaScript for modern engines only or using\\nCoffeeScript, you may use `catch` instead of `fail`.\\n\\nPromises also have a ``fin`` function that is like a ``finally`` clause.\\nThe final handler gets called, with no arguments, when the promise\\nreturned by ``getInputPromise()`` either returns a value or throws an\\nerror.  The value returned or error thrown by ``getInputPromise()``\\npasses directly to ``outputPromise`` unless the final handler fails, and\\nmay be delayed if the final handler returns a promise.\\n\\n```javascript\\nvar outputPromise = getInputPromise()\\n.fin(function () {\\n    // close files, database connections, stop servers, conclude tests\\n});\\n```\\n\\n-   If the handler returns a value, the value is ignored\\n-   If the handler throws an error, the error passes to ``outputPromise``\\n-   If the handler returns a promise, ``outputPromise`` gets postponed.  The\\n    eventual value or error has the same effect as an immediate return\\n    value or thrown error: a value would be ignored, an error would be\\n    forwarded.\\n\\nIf you are writing JavaScript for modern engines only or using\\nCoffeeScript, you may use `finally` instead of `fin`.\\n\\n### Chaining\\n\\nThere are two ways to chain promises.  You can chain promises either\\ninside or outside handlers.  The next two examples are equivalent.\\n\\n```javascript\\nreturn getUsername()\\n.then(function (username) {\\n    return getUser(username)\\n    .then(function (user) {\\n        // if we get here without an error,\\n        // the value returned here\\n        // or the exception thrown here\\n        // resolves the promise returned\\n        // by the first line\\n    })\\n});\\n```\\n\\n```javascript\\nreturn getUsername()\\n.then(function (username) {\\n    return getUser(username);\\n})\\n.then(function (user) {\\n    // if we get here without an error,\\n    // the value returned here\\n    // or the exception thrown here\\n    // resolves the promise returned\\n    // by the first line\\n});\\n```\\n\\nThe only difference is nesting.  It’s useful to nest handlers if you\\nneed to capture multiple input values in your closure.\\n\\n```javascript\\nfunction authenticate() {\\n    return getUsername()\\n    .then(function (username) {\\n        return getUser(username);\\n    })\\n    // chained because we will not need the user name in the next event\\n    .then(function (user) {\\n        return getPassword()\\n        // nested because we need both user and password next\\n        .then(function (password) {\\n            if (user.passwordHash !== hash(password)) {\\n                throw new Error(\\\"Can't authenticate\\\");\\n            }\\n        });\\n    });\\n}\\n```\\n\\n\\n### Combination\\n\\nYou can turn an array of promises into a promise for the whole,\\nfulfilled array using ``all``.\\n\\n```javascript\\nreturn Q.all([\\n    eventualAdd(2, 2),\\n    eventualAdd(10, 20)\\n]);\\n```\\n\\nIf you have a promise for an array, you can use ``spread`` as a\\nreplacement for ``then``.  The ``spread`` function “spreads” the\\nvalues over the arguments of the fulfillment handler.  The rejection handler\\nwill get called at the first sign of failure.  That is, whichever of\\nthe recived promises fails first gets handled by the rejection handler.\\n\\n```javascript\\nfunction eventualAdd(a, b) {\\n    return Q.spread([a, b], function (a, b) {\\n        return a + b;\\n    })\\n}\\n```\\n\\nBut ``spread`` calls ``all`` initially, so you can skip it in chains.\\n\\n```javascript\\nreturn getUsername()\\n.then(function (username) {\\n    return [username, getUser(username)];\\n})\\n.spread(function (username, user) {\\n});\\n```\\n\\nThe ``all`` function returns a promise for an array of values.  When this\\npromise is fulfilled, the array contains the fulfillment values of the original\\npromises, in the same order as those promises.  If one of the given promises\\nis rejected, the returned promise is immediately rejected, not waiting for the\\nrest of the batch.  If you want to wait for all of the promises to either be\\nfulfilled or rejected, you can use ``allSettled``.\\n\\n```javascript\\nQ.allSettled(promises)\\n.then(function (results) {\\n    results.forEach(function (result) {\\n        if (result.state === \\\"fulfilled\\\") {\\n            var value = result.value;\\n        } else {\\n            var reason = result.reason;\\n        }\\n    });\\n});\\n```\\n\\n\\n### Sequences\\n\\nIf you have a number of promise-producing functions that need\\nto be run sequentially, you can of course do so manually:\\n\\n```javascript\\nreturn foo(initialVal).then(bar).then(baz).then(qux);\\n```\\n\\nHowever, if you want to run a dynamically constructed sequence of\\nfunctions, you'll want something like this:\\n\\n```javascript\\nvar funcs = [foo, bar, baz, qux];\\n\\nvar result = Q.resolve(initialVal);\\nfuncs.forEach(function (f) {\\n    result = result.then(f);\\n});\\nreturn result;\\n```\\n\\nYou can make this slightly more compact using `reduce`:\\n\\n```javascript\\nreturn funcs.reduce(function (soFar, f) {\\n    return soFar.then(f);\\n}, Q.resolve(initialVal));\\n```\\n\\nOr, you could use th ultra-compact version:\\n\\n```javascript\\nreturn funcs.reduce(Q.when, Q());\\n```\\n\\n### Handling Errors\\n\\nOne sometimes-unintuive aspect of promises is that if you throw an\\nexception in the fulfillment handler, it will not be be caught by the error\\nhandler.\\n\\n```javascript\\nreturn foo()\\n.then(function (value) {\\n    throw new Error(\\\"Can't bar.\\\");\\n}, function (error) {\\n    // We only get here if \\\"foo\\\" fails\\n});\\n```\\n\\nTo see why this is, consider the parallel between promises and\\n``try``/``catch``. We are ``try``-ing to execute ``foo()``: the error\\nhandler represents a ``catch`` for ``foo()``, while the fulfillment handler\\nrepresents code that happens *after* the ``try``/``catch`` block.\\nThat code then needs its own ``try``/``catch`` block.\\n\\nIn terms of promises, this means chaining your rejection handler:\\n\\n```javascript\\nreturn foo()\\n.then(function (value) {\\n    throw new Error(\\\"Can't bar.\\\");\\n})\\n.fail(function (error) {\\n    // We get here with either foo's error or bar's error\\n});\\n```\\n\\n### Progress Notification\\n\\nIt's possible for promises to report their progress, e.g. for tasks that take a\\nlong time like a file upload. Not all promises will implement progress\\nnotifications, but for those that do, you can consume the progress values using\\na third parameter to ``then``:\\n\\n```javascript\\nreturn uploadFile()\\n.then(function () {\\n    // Success uploading the file\\n}, function (err) {\\n    // There was an error, and we get the reason for error\\n}, function (progress) {\\n    // We get notified of the upload's progress as it is executed\\n});\\n```\\n\\nLike `fail`, Q also provides a shorthand for progress callbacks\\ncalled `progress`:\\n\\n```javascript\\nreturn uploadFile().progress(function (progress) {\\n    // We get notified of the upload's progress\\n});\\n```\\n\\n### The End\\n\\nWhen you get to the end of a chain of promises, you should either\\nreturn the last promise or end the chain.  Since handlers catch\\nerrors, it’s an unfortunate pattern that the exceptions can go\\nunobserved.\\n\\nSo, either return it,\\n\\n```javascript\\nreturn foo()\\n.then(function () {\\n    return \\\"bar\\\";\\n});\\n```\\n\\nOr, end it.\\n\\n```javascript\\nfoo()\\n.then(function () {\\n    return \\\"bar\\\";\\n})\\n.done();\\n```\\n\\nEnding a promise chain makes sure that, if an error doesn’t get\\nhandled before the end, it will get rethrown and reported.\\n\\nThis is a stopgap. We are exploring ways to make unhandled errors\\nvisible without any explicit handling.\\n\\n\\n### The Beginning\\n\\nEverything above assumes you get a promise from somewhere else.  This\\nis the common case.  Every once in a while, you will need to create a\\npromise from scratch.\\n\\n#### Using ``Q.fcall``\\n\\nYou can create a promise from a value using ``Q.fcall``.  This returns a\\npromise for 10.\\n\\n```javascript\\nreturn Q.fcall(function () {\\n    return 10;\\n});\\n```\\n\\nYou can also use ``fcall`` to get a promise for an exception.\\n\\n```javascript\\nreturn Q.fcall(function () {\\n    throw new Error(\\\"Can't do it\\\");\\n});\\n```\\n\\nAs the name implies, ``fcall`` can call functions, or even promised\\nfunctions.  This uses the ``eventualAdd`` function above to add two\\nnumbers.\\n\\n```javascript\\nreturn Q.fcall(eventualAdd, 2, 2);\\n```\\n\\n\\n#### Using Deferreds\\n\\nIf you have to interface with asynchronous functions that are callback-based\\ninstead of promise-based, Q provides a few shortcuts (like ``Q.nfcall`` and\\nfriends). But much of the time, the solution will be to use *deferreds*.\\n\\n```javascript\\nvar deferred = Q.defer();\\nFS.readFile(\\\"foo.txt\\\", \\\"utf-8\\\", function (error, text) {\\n    if (error) {\\n        deferred.reject(new Error(error));\\n    } else {\\n        deferred.resolve(text);\\n    }\\n});\\nreturn deferred.promise;\\n```\\n\\nNote that a deferred can be resolved with a value or a promise.  The\\n``reject`` function is a shorthand for resolving with a rejected\\npromise.\\n\\n```javascript\\n// this:\\ndeferred.reject(new Error(\\\"Can't do it\\\"));\\n\\n// is shorthand for:\\nvar rejection = Q.fcall(function () {\\n    throw new Error(\\\"Can't do it\\\");\\n});\\ndeferred.resolve(rejection);\\n```\\n\\nThis is a simplified implementation of ``Q.delay``.\\n\\n```javascript\\nfunction delay(ms) {\\n    var deferred = Q.defer();\\n    setTimeout(deferred.resolve, ms);\\n    return deferred.promise;\\n}\\n```\\n\\nThis is a simplified implementation of ``Q.timeout``\\n\\n```javascript\\nfunction timeout(promise, ms) {\\n    var deferred = Q.defer();\\n    Q.when(promise, deferred.resolve);\\n    Q.when(delay(ms), function () {\\n        deferred.reject(new Error(\\\"Timed out\\\"));\\n    });\\n    return deferred.promise;\\n}\\n```\\n\\nFinally, you can send a progress notification to the promise with\\n``deferred.notify``.\\n\\nFor illustration, this is a wrapper for XML HTTP requests in the browser. Note\\nthat a more [thorough][XHR] implementation would be in order in practice.\\n\\n[XHR]: https://github.com/montagejs/mr/blob/71e8df99bb4f0584985accd6f2801ef3015b9763/browser.js#L29-L73\\n\\n```javascript\\nfunction requestOkText(url) {\\n    var request = new XMLHttpRequest();\\n    var deferred = Q.defer();\\n\\n    request.open(\\\"GET\\\", url, true);\\n    request.onload = onload;\\n    request.onerror = onerror;\\n    request.onprogress = onprogress;\\n    request.send();\\n\\n    function onload() {\\n        if (request.status === 200) {\\n            deferred.resolve(request.responseText);\\n        } else {\\n            deferred.reject(new Error(\\\"Status code was \\\" + request.status));\\n        }\\n    }\\n\\n    function onerror() {\\n        deferred.reject(new Error(\\\"Can't XHR \\\" + JSON.stringify(url)));\\n    }\\n\\n    function onprogress(event) {\\n        deferred.notify(event.loaded / event.total);\\n    }\\n\\n    return deferred.promise;\\n}\\n```\\n\\nBelow is an example of how to use this ``requestOkText`` function:\\n\\n```javascript\\nrequestOkText(\\\"http://localhost:3000\\\")\\n.then(function (responseText) {\\n    // If the HTTP response returns 200 OK, log the response text.\\n    console.log(responseText);\\n}, function (error) {\\n    // If there's an error or a non-200 status code, log the error.\\n    console.error(error);\\n}, function (progress) {\\n    // Log the progress as it comes in.\\n    console.log(\\\"Request progress: \\\" + Math.round(progress * 100) + \\\"%\\\");\\n});\\n```\\n\\n### The Middle\\n\\nIf you are using a function that may return a promise, but just might\\nreturn a value if it doesn’t need to defer, you can use the “static”\\nmethods of the Q library.\\n\\nThe ``when`` function is the static equivalent for ``then``.\\n\\n```javascript\\nreturn Q.when(valueOrPromise, function (value) {\\n}, function (error) {\\n});\\n```\\n\\nAll of the other methods on a promise have static analogs with the\\nsame name.\\n\\nThe following are equivalent:\\n\\n```javascript\\nreturn Q.all([a, b]);\\n```\\n\\n```javascript\\nreturn Q.fcall(function () {\\n    return [a, b];\\n})\\n.all();\\n```\\n\\nWhen working with promises provided by other libraries, you should\\nconvert it to a Q promise.  Not all promise libraries make the same\\nguarantees as Q and certainly don’t provide all of the same methods.\\nMost libraries only provide a partially functional ``then`` method.\\nThis thankfully is all we need to turn them into vibrant Q promises.\\n\\n```javascript\\nreturn Q.when($.ajax(...))\\n.then(function () {\\n});\\n```\\n\\nIf there is any chance that the promise you receive is not a Q promise\\nas provided by your library, you should wrap it using a Q function.\\nYou can even use ``Q.invoke`` as a shorthand.\\n\\n```javascript\\nreturn Q.invoke($, 'ajax', ...)\\n.then(function () {\\n});\\n```\\n\\n\\n### Over the Wire\\n\\nA promise can serve as a proxy for another object, even a remote\\nobject.  There are methods that allow you to optimistically manipulate\\nproperties or call functions.  All of these interactions return\\npromises, so they can be chained.\\n\\n```\\ndirect manipulation         using a promise as a proxy\\n--------------------------  -------------------------------\\nvalue.foo                   promise.get(\\\"foo\\\")\\nvalue.foo = value           promise.put(\\\"foo\\\", value)\\ndelete value.foo            promise.del(\\\"foo\\\")\\nvalue.foo(...args)          promise.post(\\\"foo\\\", [args])\\nvalue.foo(...args)          promise.invoke(\\\"foo\\\", ...args)\\nvalue(...args)              promise.fapply([args])\\nvalue(...args)              promise.fcall(...args)\\n```\\n\\nIf the promise is a proxy for a remote object, you can shave\\nround-trips by using these functions instead of ``then``.  To take\\nadvantage of promises for remote objects, check out [Q-Connection][].\\n\\n[Q-Connection]: https://github.com/kriskowal/q-connection\\n\\nEven in the case of non-remote objects, these methods can be used as\\nshorthand for particularly-simple fulfillment handlers. For example, you\\ncan replace\\n\\n```javascript\\nreturn Q.fcall(function () {\\n    return [{ foo: \\\"bar\\\" }, { foo: \\\"baz\\\" }];\\n})\\n.then(function (value) {\\n    return value[0].foo;\\n});\\n```\\n\\nwith\\n\\n```javascript\\nreturn Q.fcall(function () {\\n    return [{ foo: \\\"bar\\\" }, { foo: \\\"baz\\\" }];\\n})\\n.get(0)\\n.get(\\\"foo\\\");\\n```\\n\\n\\n### Adapting Node\\n\\nIf you're working with functions that make use of the Node.js callback pattern,\\nQ provides a few useful utility functions for converting between them. The\\nmost straightforward are probably `Q.nfcall` and `Q.nfapply` (\\\"Node function\\ncall/apply\\\") for calling Node.js-style functions and getting back a promise:\\n\\n```javascript\\nreturn Q.nfcall(FS.readFile, \\\"foo.txt\\\", \\\"utf-8\\\");\\nreturn Q.nfapply(FS.readFile, [\\\"foo.txt\\\", \\\"utf-8\\\"]);\\n```\\n\\nIf you are working with methods, instead of simple functions, you can easily\\nrun in to the usual problems where passing a method to another function—like\\n`Q.nfcall`—\\\"un-binds\\\" the method from its owner. To avoid this, you can either\\nuse `Function.prototype.bind` or some nice shortcut methods we provide:\\n\\n```javascript\\nreturn Q.ninvoke(redisClient, \\\"get\\\", \\\"user:1:id\\\");\\nreturn Q.npost(redisClient, \\\"get\\\", [\\\"user:1:id\\\"]);\\n```\\n\\nYou can also create reusable wrappers with `Q.denodeify` or `Q.nbind`:\\n\\n```javascript\\nvar readFile = Q.denodeify(FS.readFile);\\nreturn readFile(\\\"foo.txt\\\", \\\"utf-8\\\");\\n\\nvar redisClientGet = Q.nbind(redisClient.get, redisClient);\\nreturn redisClientGet(\\\"user:1:id\\\");\\n```\\n\\nFinally, if you're working with raw deferred objects, there is a\\n`makeNodeResolver` method on deferreds that can be handy:\\n\\n```javascript\\nvar deferred = Q.defer();\\nFS.readFile(\\\"foo.txt\\\", \\\"utf-8\\\", deferred.makeNodeResolver());\\nreturn deferred.promise;\\n```\\n\\n### Long Stack Traces\\n\\nQ comes with optional support for “long stack traces,” wherein the `stack`\\nproperty of `Error` rejection reasons is rewritten to be traced along\\nasynchronous jumps instead of stopping at the most recent one. As an example:\\n\\n```js\\nfunction theDepthsOfMyProgram() {\\n  Q.delay(100).done(function explode() {\\n    throw new Error(\\\"boo!\\\");\\n  });\\n}\\n\\ntheDepthsOfMyProgram();\\n```\\n\\nusually would give a rather unhelpful stack trace looking something like\\n\\n```\\nError: boo!\\n    at explode (/path/to/test.js:3:11)\\n    at _fulfilled (/path/to/test.js:q:54)\\n    at resolvedValue.promiseDispatch.done (/path/to/q.js:823:30)\\n    at makePromise.promise.promiseDispatch (/path/to/q.js:496:13)\\n    at pending (/path/to/q.js:397:39)\\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\\n```\\n\\nBut, if you turn this feature on by setting\\n\\n```js\\nQ.longStackSupport = true;\\n```\\n\\nthen the above code gives a nice stack trace to the tune of\\n\\n```\\nError: boo!\\n    at explode (/path/to/test.js:3:11)\\nFrom previous event:\\n    at theDepthsOfMyProgram (/path/to/test.js:2:16)\\n    at Object.<anonymous> (/path/to/test.js:7:1)\\n```\\n\\nNote how you can see the the function that triggered the async operation in the\\nstack trace! This is very helpful for debugging, as otherwise you end up getting\\nonly the first line, plus a bunch of Q internals, with no sign of where the\\noperation started.\\n\\nThis feature does come with somewhat-serious performance and memory overhead,\\nhowever. If you're working with lots of promises, or trying to scale a server\\nto many users, you should probably keep it off. But in development, go for it!\\n\\n## Reference\\n\\nA method-by-method [Q API reference][reference] is available on the wiki.\\n\\n[reference]: https://github.com/kriskowal/q/wiki/API-Reference\\n\\n## More Examples\\n\\nA growing [examples gallery][examples] is available on the wiki, showing how Q\\ncan be used to make everything better. From XHR to database access to accessing\\nthe Flickr API, Q is there for you.\\n\\n[examples]: https://github.com/kriskowal/q/wiki/Examples-Gallery\\n\\n## Tests\\n\\nYou can view the results of the Q test suite [in your browser][tests]!\\n\\n[tests]: https://rawgithub.com/kriskowal/q/master/spec/q-spec.html\\n\\n---\\n\\nCopyright 2009-2012 Kristopher Michael Kowal\\nMIT License (enclosed)\\n\\n\",\n   90    \"readmeFilename\": \"README.md\",\n   91    \"_id\": \"q@0.9.6\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\q\\README.md:\n   18  than it marches forward.\n   19  \n   20: [POD]: http://calculist.org/blog/2011/12/14/why-coroutines-wont-work-on-the-web/\n   21  \n   22  ```javascript\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\rimraf\\AUTHORS:\n    1  # Authors sorted by whether or not they're me.\n    2: Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me)\n    3  Wayne Larsen <wayne@larsen.st> (http://github.com/wvl)\n    4  ritch <skawful@gmail.com>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\rimraf\\package.json:\n    7      \"name\": \"Isaac Z. Schlueter\",\n    8      \"email\": \"i@izs.me\",\n    9:     \"url\": \"http://blog.izs.me/\"\n   10    },\n   11    \"license\": {\n   ..\n   27        \"name\": \"Isaac Z. Schlueter\",\n   28        \"email\": \"i@izs.me\",\n   29:       \"url\": \"http://blog.izs.me\"\n   30      },\n   31      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-karma\\node_modules\\karma\\node_modules\\rimraf\\node_modules\\graceful-fs\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"graceful-fs\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-ngmin\\node_modules\\ngmin\\node_modules\\clone\\package.json:\n   32        \"name\": \"Tian You\",\n   33        \"email\": \"axqd001@gmail.com\",\n   34:       \"url\": \"http://blog.axqd.net/\"\n   35      },\n   36      {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-ngmin\\node_modules\\ngmin\\node_modules\\esprima\\index.html:\n   53  <li>Language extension: <a href=\"http://mbebenita.github.com/LLJS/\">LLJS</a> (low-level JS), <a href=\"http://sweetjs.org/\">Sweet.js</a> (macro)</li>\n   54  <li>ES6/Harmony transpiler: <a href=\"https://github.com/matthewrobb/six\">Six</a>, <a href=\"https://github.com/jdiamond/harmonizr\">Harmonizr</a></li>\n   55: <li>Eclipse Orion smart editing (<a href=\"https://github.com/aclement/esprima-outline\">outline view</a>, <a href=\"http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html\">content assist</a>)</li>\n   56  <li>Source transformation: <a href=\"https://github.com/substack/node-falafel\">node-falafel</a>, <a href=\"https://github.com/Constellation/esmangle\">Esmangle</a>, <a href=\"https://github.com/Constellation/escodegen\">escodegen</a></li>\n   57  </ul>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-ngmin\\node_modules\\ngmin\\node_modules\\esprima\\package.json:\n   34      \"benchmark-quick\": \"node test/benchmarks.js quick\"\n   35    },\n   36:   \"readme\": \"**Esprima** ([esprima.org](http://esprima.org)) is a high performance,\\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\\nparser written in ECMAScript (also popularly known as\\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\\n\\nEsprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as\\n[Node.js](http://nodejs.org).\\n\\n### Features\\n\\n- Full support for [ECMAScript 5.1](http://www.ecma-international.org/publications/standards/Ecma-262.htm)(ECMA-262)\\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\\n- Heavily tested (> 550 [unit tests](http://esprima.org/test/) with solid 100% statement coverage)\\n- Optional tracking of syntax node location (index-based and line-column)\\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\\n\\nEsprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\\nIt is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\\nwith the new generation of fast parsers.\\n\\n### Applications\\n\\nEsprima serves as the basis for many popular JavaScript development tools:\\n\\n- Code coverage analysis: [node-cover](https://github.com/itay/node-cover), [Istanbul](https://github.com/yahoo/Istanbul)\\n- Documentation tool: [JFDoc](https://github.com/thejohnfreeman/jfdoc), [JSDuck](https://github.com/senchalabs/jsduck)\\n- Language extension: [LLJS](http://mbebenita.github.com/LLJS/) (low-level JS),\\n[Sweet.js](http://sweetjs.org/) (macro)\\n- ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\\n- Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\\n- Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\\n- Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\\n\\n### Questions?\\n- [Documentation](http://esprima.org/doc)\\n- [Issue tracker](http://issues.esprima.org): [known problems](http://code.google.com/p/esprima/issues/list?q=Defect)\\nand [future plans](http://code.google.com/p/esprima/issues/list?q=Enhancement)\\n- [Mailing list](http://groups.google.com/group/esprima)\\n- [Contribution guide](http://esprima.org/doc/index.html#contribution)\\n\\nFollow [@Esprima](http://twitter.com/Esprima) on Twitter to get the\\ndevelopment updates.\\nFeedback and contribution are welcomed!\\n\\n### License\\n\\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\\n and other contributors.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n  * Redistributions of source code must retain the above copyright\\n    notice, this list of conditions and the following disclaimer.\\n\\n  * Redistributions in binary form must reproduce the above copyright\\n    notice, this list of conditions and the following disclaimer in the\\n    documentation and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\",\n   37    \"readmeFilename\": \"README.md\",\n   38    \"bugs\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-ngmin\\node_modules\\ngmin\\node_modules\\esprima\\README.md:\n   31  [Sweet.js](http://sweetjs.org/) (macro)\n   32  - ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\n   33: - Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\n   34  - Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\n   35  - Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-ngmin\\node_modules\\ngmin\\node_modules\\esprima\\doc\\index.html:\n  201  </ul>\n  202  \n  203: For some more info, read also the blog post on <a href=\"http://ariya.ofilabs.com/2011/08/hall-of-api-shame-boolean-trap.html\">Boolean trap</a>.\n  204  \n  205  <h2 id=\"ast\">Syntax Tree Format</h2>\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-regarde\\node_modules\\gaze\\node_modules\\fileset\\node_modules\\glob\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me/\"\n    6    },\n    7    \"name\": \"glob\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-regarde\\node_modules\\gaze\\node_modules\\fileset\\node_modules\\glob\\node_modules\\inherits\\package.json:\n   25      \"name\": \"Isaac Z. Schlueter\",\n   26      \"email\": \"i@izs.me\",\n   27:     \"url\": \"http://blog.izs.me/\"\n   28    },\n   29    \"scripts\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-regarde\\node_modules\\gaze\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\grunt-regarde\\node_modules\\gaze\\node_modules\\minimatch\\node_modules\\sigmund\\package.json:\n   29      \"name\": \"Isaac Z. Schlueter\",\n   30      \"email\": \"i@izs.me\",\n   31:     \"url\": \"http://blog.izs.me/\"\n   32    },\n   33    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\matchdep\\node_modules\\minimatch\\package.json:\n    3      \"name\": \"Isaac Z. Schlueter\",\n    4      \"email\": \"i@izs.me\",\n    5:     \"url\": \"http://blog.izs.me\"\n    6    },\n    7    \"name\": \"minimatch\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\matchdep\\node_modules\\minimatch\\node_modules\\sigmund\\package.json:\n   29      \"name\": \"Isaac Z. Schlueter\",\n   30      \"email\": \"i@izs.me\",\n   31:     \"url\": \"http://blog.izs.me/\"\n   32    },\n   33    \"license\": \"BSD\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\CONTRIBUTING.md:\n   24  - Before starting to write code, look for existing [issues](https://github.com/learnboost/mongoose/issues). That way you avoid working on something that might not be of interest or that has been addressed already in a different branch. You can create a new issue [here](https://github.com/learnboost/mongoose/issues/new).\n   25    - _The source of this project is written in javascript, not coffeescript, therefore your bug reports should be written in javascript_. \n   26: - Fork the [repo](https://github.com/learnboost/mongoose) _or_ for small documentation changes, navigate to the source on github and click the [Edit](https://github.com/blog/844-forking-with-the-edit-button) button.\n   27  - Follow the general coding style of the rest of the project:\n   28    - 2 space tabs\n   ..\n   46  ### Documentation\n   47  \n   48: To contribute to the [API documentation](http://mongoosejs.com/docs/api.html) just make your changes to the inline documentation of the appropriate [source code](https://github.com/LearnBoost/mongoose/tree/master/lib) in the master branch and submit a [pull request](https://help.github.com/articles/using-pull-requests/). You might also use the github [Edit](https://github.com/blog/844-forking-with-the-edit-button) button.\n   49  \n   50: To contribute to the [guide](http://mongoosejs.com/docs/guide.html) or [quick start](http://mongoosejs.com/docs/index.html) docs, make your changes to the appropriate `.jade` files in the [docs](https://github.com/LearnBoost/mongoose/tree/master/docs) directory of the master branch and submit a pull request. Again, the [Edit](https://github.com/blog/844-forking-with-the-edit-button) button might work for you here.\n   51  \n   52  If you'd like to preview your documentation changes, first commit your changes to your local master branch, then execute `make docs` from the project root, which switches to the gh-pages branch, merges from master, and builds all the static pages for you. Now execute `node server.js` from the project root which will launch a local webserver where you can browse the documentation site locally. If all looks good, submit a [pull request](https://help.github.com/articles/using-pull-requests/) to the master branch with your changes.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\History.md:\n  527    * docs; add ensureIndex production notes\n  528    * docs; fix spelling\n  529:   * docs; add blogposts about v3\n  530    * website; updated\n  531    * removed; undocumented inGroupsOf util\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\package.json:\n   59    },\n   60    \"homepage\": \"http://mongoosejs.com\",\n   61:   \"readme\": \"## What's Mongoose?\\n\\nMongoose is a [MongoDB](http://www.mongodb.org/) object modeling tool designed to work in an asynchronous environment.\\n\\n## Documentation\\n\\n[mongoosejs.com](http://mongoosejs.com/)\\n\\n## Try it live\\n<a href=\\\"https://runnable.com/#learnboost/mongoose/code.js/launch\\\" target=\\\"_blank\\\"><img src=\\\"https://runnable.com/external/styles/assets/runnablebtn.png\\\" style=\\\"width:67px;height:25px;\\\"></a>\\n\\n## Support\\n\\n  - [Stack Overflow](http://stackoverflow.com/questions/tagged/mongoose)\\n  - [bug reports](https://github.com/learnboost/mongoose/issues/)\\n  - [help forum](http://groups.google.com/group/mongoose-orm)\\n  - [10gen support](http://www.mongodb.org/display/DOCS/Technical+Support)\\n  - (irc) #mongoosejs on freenode\\n\\n## Installation\\n\\nFirst install [node.js](http://nodejs.org/) and [mongodb](http://www.mongodb.org/downloads).\\n\\n    $ npm install mongoose\\n\\n## Plugins\\n\\nCheck out the [plugins search site](http://plugins.mongoosejs.com/) to see hundreds of related modules from the community.\\n\\n## Contributors\\n\\nView all 90+ [contributors](https://github.com/learnboost/mongoose/graphs/contributors).\\n\\n## Get Involved\\n\\nStand up and be counted as a [contributor](https://github.com/LearnBoost/mongoose/blob/master/CONTRIBUTING.md) too!\\n\\n## Overview\\n\\n### Connecting to MongoDB\\n\\nFirst, we need to define a connection. If your app uses only one database, you should use `mongose.connect`. If you need to create additional connections, use `mongoose.createConnection`.\\n\\nBoth `connect` and `createConnection` take a `mongodb://` URI, or the parameters `host, database, port, options`.\\n\\n    var mongoose = require('mongoose');\\n\\n    mongoose.connect('mongodb://localhost/my_database');\\n\\nOnce connected, the `open` event is fired on the `Connection` instance. If you're using `mongoose.connect`, the `Connection` is `mongoose.connection`. Otherwise, `mongoose.createConnection` return value is a `Connection`.\\n\\n**Important!** Mongoose buffers all the commands until it's connected to the database. This means that you don't have to wait until it connects to MongoDB in order to define models, run queries, etc.\\n\\n### Defining a Model\\n\\nModels are defined through the `Schema` interface. \\n\\n    var Schema = mongoose.Schema\\n      , ObjectId = Schema.ObjectId;\\n\\n    var BlogPost = new Schema({\\n        author    : ObjectId\\n      , title     : String\\n      , body      : String\\n      , date      : Date\\n    });\\n\\nAside from defining the structure of your documents and the types of data you're storing, a Schema handles the definition of:\\n\\n* [Validators](http://mongoosejs.com/docs/validation.html) (async and sync)\\n* [Defaults](http://mongoosejs.com/docs/api.html#schematype_SchemaType-default)\\n* [Getters](http://mongoosejs.com/docs/api.html#schematype_SchemaType-get)\\n* [Setters](http://mongoosejs.com/docs/api.html#schematype_SchemaType-set)\\n* [Indexes](http://mongoosejs.com/docs/guide.html#indexes)\\n* [Middleware](http://mongoosejs.com/docs/middleware.html)\\n* [Methods](http://mongoosejs.com/docs/guide.html#methods) definition\\n* [Statics](http://mongoosejs.com/docs/guide.html#statics) definition\\n* [Plugins](http://mongoosejs.com/docs/plugins.html)\\n* [pseudo-JOINs](http://mongoosejs.com/docs/populate.html)\\n\\nThe following example shows some of these features:\\n\\n    var Comment = new Schema({\\n        name  :  { type: String, default: 'hahaha' }\\n      , age   :  { type: Number, min: 18, index: true }\\n      , bio   :  { type: String, match: /[a-z]/ }\\n      , date  :  { type: Date, default: Date.now }\\n      , buff  :  Buffer\\n    });\\n\\n    // a setter\\n    Comment.path('name').set(function (v) {\\n      return capitalize(v);\\n    });\\n\\n    // middleware\\n    Comment.pre('save', function (next) {\\n      notify(this.get('email'));\\n      next();\\n    });\\n\\nTake a look at the example in `examples/schema.js` for an end-to-end example of a typical setup.\\n\\n### Accessing a Model\\n\\nOnce we define a model through `mongoose.model('ModelName', mySchema)`, we can access it through the same function\\n\\n    var myModel = mongoose.model('ModelName');\\n\\nOr just do it all at once\\n\\n    var MyModel = mongoose.model('ModelName', mySchema);\\n\\nWe can then instantiate it, and save it:\\n\\n    var instance = new MyModel();\\n    instance.my.key = 'hello';\\n    instance.save(function (err) {\\n      //\\n    });\\n\\nOr we can find documents from the same collection\\n\\n    MyModel.find({}, function (err, docs) {\\n      // docs.forEach\\n    });\\n\\nYou can also `findOne`, `findById`, `update`, etc. For more details check out [the docs](http://mongoosejs.com/docs/queries.html).\\n\\n**Important!** If you opened a separate connection using `mongoose.createConnection()` but attempt to access the model through `mongoose.model('ModelName')` it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created:\\n\\n    var conn = mongoose.createConnection('your connection string');\\n    var MyModel = conn.model('ModelName', schema);\\n    var m = new MyModel;\\n    m.save() // works\\n\\n    vs\\n\\n    var conn = mongoose.createConnection('your connection string');\\n    var MyModel = mongoose.model('ModelName', schema);\\n    var m = new MyModel;\\n    m.save() // does not work b/c the default connection object was never connected\\n\\n### Embedded Documents\\n\\nIn the first example snippet, we defined a key in the Schema that looks like:\\n\\n    comments: [Comments]\\n\\nWhere `Comments` is a `Schema` we created. This means that creating embedded documents is as simple as:\\n\\n    // retrieve my model\\n    var BlogPost = mongoose.model('BlogPost');\\n\\n    // create a blog post\\n    var post = new BlogPost();\\n\\n    // create a comment\\n    post.comments.push({ title: 'My comment' });\\n\\n    post.save(function (err) {\\n      if (!err) console.log('Success!');\\n    });\\n\\nThe same goes for removing them:\\n\\n    BlogPost.findById(myId, function (err, post) {\\n      if (!err) {\\n        post.comments[0].remove();\\n        post.save(function (err) {\\n          // do something\\n        });\\n      }\\n    });\\n\\nEmbedded documents enjoy all the same features as your models. Defaults, validators, middleware. Whenever an error occurs, it's bubbled to the `save()` error callback, so error handling is a snap!\\n\\nMongoose interacts with your embedded documents in arrays _atomically_, out of the box.\\n\\n### Middleware\\n\\nSee the [docs](http://mongoosejs.com/docs/middleware.html) page.\\n\\n#### Intercepting and mutating method arguments\\n\\nYou can intercept method arguments via middleware.\\n\\nFor example, this would allow you to broadcast changes about your Documents every time someone `set`s a path in your Document to a new value:\\n\\n    schema.pre('set', function (next, path, val, typel) {\\n      // `this` is the current Document\\n      this.emit('set', path, val);\\n\\n      // Pass control to the next pre\\n      next();\\n    });\\n\\nMoreover, you can mutate the incoming `method` arguments so that subsequent middleware see different values for those arguments. To do so, just pass the new values to `next`:\\n\\n    .pre(method, function firstPre (next, methodArg1, methodArg2) {\\n      // Mutate methodArg1\\n      next(\\\"altered-\\\" + methodArg1.toString(), methodArg2);\\n    })\\n\\n    // pre declaration is chainable\\n    .pre(method, function secondPre (next, methodArg1, methodArg2) {\\n      console.log(methodArg1);\\n      // => 'altered-originalValOfMethodArg1' \\n      \\n      console.log(methodArg2);\\n      // => 'originalValOfMethodArg2' \\n      \\n      // Passing no arguments to `next` automatically passes along the current argument values\\n      // i.e., the following `next()` is equivalent to `next(methodArg1, methodArg2)`\\n      // and also equivalent to, with the example method arg \\n      // values, `next('altered-originalValOfMethodArg1', 'originalValOfMethodArg2')`\\n      next();\\n    })\\n\\n#### Schema gotcha\\n\\n`type`, when used in a schema has special meaning within Mongoose. If your schema requires using `type` as a nested property you must use object notation:\\n\\n    new Schema({\\n        broken: { type: Boolean }\\n      , asset : {\\n            name: String\\n          , type: String // uh oh, it broke. asset will be interpreted as String\\n        }\\n    });\\n\\n    new Schema({\\n        works: { type: Boolean }\\n      , asset : {\\n            name: String\\n          , type: { type: String } // works. asset is an object with a type property\\n        }\\n    });\\n\\n### Driver access\\n\\nThe driver being used defaults to [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) and is directly accessible through `YourModel.collection`. **Note**: using the driver directly bypasses all Mongoose power-tools like validation, getters, setters, hooks, etc.\\n\\n## API Docs\\n\\nFind the API docs [here](http://mongoosejs.com/docs/api.html), generated by [dox](http://github.com/visionmedia/dox).\\n\\n## License\\n\\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n'Software'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\",\n   62    \"readmeFilename\": \"README.md\",\n   63    \"_id\": \"mongoose@3.6.15\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\README.md:\n   59        , ObjectId = Schema.ObjectId;\n   60  \n   61:     var BlogPost = new Schema({\n   62          author    : ObjectId\n   63        , title     : String\n   ..\n  151  \n  152      // retrieve my model\n  153:     var BlogPost = mongoose.model('BlogPost');\n  154  \n  155:     // create a blog post\n  156:     var post = new BlogPost();\n  157  \n  158      // create a comment\n  ...\n  165  The same goes for removing them:\n  166  \n  167:     BlogPost.findById(myId, function (err, post) {\n  168        if (!err) {\n  169          post.comments[0].remove();\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\examples\\population-across-three-collections.js:\n   28  var User = mongoose.model('User', user);\n   29  \n   30: var blogpost = Schema({\n   31    title: String,\n   32    tags: [String],\n   ..\n   36    }\n   37  })\n   38: var BlogPost = mongoose.model('BlogPost', blogpost);\n   39  \n   40  /**\n   ..\n   75      assert.ifError(err);\n   76  \n   77:     var blogposts = [];\n   78:     blogposts.push({\n   79:       title: 'blog 1',\n   80        tags: ['fun', 'cool'],\n   81        author: userIds[3]\n   82      })\n   83:     blogposts.push({\n   84:       title: 'blog 2',\n   85        tags: ['cool'],\n   86        author: userIds[1]\n   87      })\n   88:     blogposts.push({\n   89:       title: 'blog 3',\n   90        tags: ['fun', 'odd'],\n   91        author: userIds[2]\n   92      })\n   93  \n   94:     BlogPost.create(blogposts, function(err, docs) {\n   95        assert.ifError(err);\n   96  \n   ..\n   99         */\n  100  \n  101:       BlogPost\n  102        .find({ tags: 'fun' })\n  103        .lean()\n  ...\n  116          }\n  117  \n  118:         BlogPost.populate(docs, opts, function(err, docs) {\n  119            assert.ifError(err);\n  120            console.log('populated');\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\examples\\schema.js:\n   22  });\n   23  \n   24: var BlogPost = new Schema({\n   25      title     : { type: String, index: true }\n   26    , slug      : { type: String, lowercase: true, trim: true }\n   ..\n   44   */\n   45  \n   46: BlogPost.path('date')\n   47  .default(function(){\n   48     return new Date()\n   ..\n   56   */\n   57  \n   58: BlogPost.pre('save', function(next, done){\n   59    emailAuthor(done); // some async function\n   60    next();\n   ..\n   65   */\n   66  \n   67: BlogPost.methods.findCreator = function (callback) {\n   68    return this.db.model('Person').findById(this.creator, callback);\n   69  }\n   70  \n   71: BlogPost.statics.findByTitle = function (title, callback) {\n   72    return this.find({ title: title }, callback);\n   73  }\n   74  \n   75: BlogPost.methods.expressiveQuery = function (creator, date, callback) {\n   76    return this.find('creator', creator).where('date').gte(date).run(callback);\n   77  }\n   ..\n   93  };\n   94  \n   95: BlogPost.plugin(slugGenerator());\n   96  \n   97  /**\n   ..\n   99   */\n  100  \n  101: mongoose.model('BlogPost', BlogPost);\n  102  mongoose.model('Person', Person);\n  103  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\lib\\model.js:\n 1044   * Sometimes you need to query for things in mongodb using a JavaScript expression. You can do so via `find({ $where: javascript })`, or you can use the mongoose shortcut method $where via a Query chain or from your mongoose Model.\n 1045   *\n 1046:  *     Blog.$where('this.comments.length > 5').exec(function (err, docs) {});\n 1047   *\n 1048   * @param {String|Function} argument is a javascript string or anonymous function\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\lib\\types\\embedded.js:\n   44   * ####Example:\n   45   *\n   46:  *     var doc = blogpost.comments.id(hexstring);\n   47   *     doc.mixed.type = 'changed';\n   48   *     doc.markModified('mixed.type');\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\node_modules\\mongodb\\CONTRIBUTING.md:\n    4  \n    5  - Before starting to write code, look for existing [tickets](https://github.com/mongodb/node-mongodb-native/issues) or [create one](https://github.com/mongodb/node-mongodb-native/issues/new) for your specific issue. That way you avoid working on something that might not be of interest or that has been addressed already in a different branch.\n    6: - Fork the [repo](https://github.com/mongodb/node-mongodb-native) _or_ for small documentation changes, navigate to the source on github and click the [Edit](https://github.com/blog/844-forking-with-the-edit-button) button.\n    7  - Follow the general coding style of the rest of the project:\n    8    - 2 space tabs\n    .\n   19  ### Documentation\n   20  \n   21: To contribute to the [API documentation](http://mongodb.github.com/node-mongodb-native/) just make your changes to the inline documentation of the appropriate [source code](https://github.com/mongodb/node-mongodb-native/tree/master/docs) in the master branch and submit a [pull request](https://help.github.com/articles/using-pull-requests/). You might also use the github [Edit](https://github.com/blog/844-forking-with-the-edit-button) button.\n   22  \n   23  If you'd like to preview your documentation changes, first commit your changes to your local master branch, then execute `make generate_docs`. Make sure you have the python documentation framework sphinx installed `easy_install sphinx`. The docs are generated under `docs/build'. If all looks good, submit a [pull request](https://help.github.com/articles/using-pull-requests/) to the master branch with your changes.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\mongoose\\node_modules\\ms\\test\\support\\jquery.js:\n  603  	// Evaluates a script in a global context\n  604  	// Workarounds based on findings by Jim Driscoll\n  605: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  606  	globalEval: function( data ) {\n  607  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2625  			get: function( elem ) {\n 2626  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2627: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2628  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2629  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\policyfile\\package.json:\n   23        \"name\": \"Arnout Kazemier\",\n   24        \"email\": \"info@3rd-Eden.com\",\n   25:       \"url\": \"http://blog.3rd-Eden.com\"\n   26      }\n   27    ],\n   ..\n   38      }\n   39    ],\n   40:   \"readme\": \"## LOL, WUT?\\nIt basically allows you to allow or disallow Flash Player sockets from accessing your site.\\n\\n## Installation\\n\\n```bash\\nnpm install policyfile\\n```\\n## Usage\\n\\nThe server is based on the regular and know `net` and `http` server patterns. So it you can just listen\\nfor all the events that a `net` based server emits etc. But there is one extra event, the `connect_failed`\\nevent. This event is triggered when we are unable to listen on the supplied port number.\\n\\n### createServer\\nCreates a new server instance and accepts 2 optional arguments:\\n\\n-  `options` **Object** Options to configure the server instance\\n    -  `log` **Boolean** Enable logging to STDOUT and STDERR (defaults to true)\\n-  `origins` **Array** An Array of origins that are allowed by the server (defaults to *:*)\\n\\n```js\\nvar pf = require('policyfile');\\npf.createServer();\\npf.listen();\\n```\\n\\n#### server.listen\\nStart listening on the server and it takes 3 optional arguments\\n\\n-  `port` **Number** On which port number should we listen? (defaults to 843, which is the first port number the FlashPlayer checks)\\n-  `server` **Server** A http server, if we are unable to accept requests or run the server we can also answer the policy requests inline over the supplied HTTP server.\\n-  `callback` **Function** A callback function that is called when listening to the server was successful.\\n\\n```js\\nvar pf = require('policyfile');\\npf.createServer();\\npf.listen(1337, function(){\\n  console.log(':3 yay')\\n});\\n```\\n\\nChanging port numbers can be handy if you do not want to run your server as root and have port 843 forward to a non root port number (aka a number above 1024).\\n\\n```js\\nvar pf = require('policyfile')\\n  , http = require('http');\\n\\nserver = http.createServer(function(q,r){r.writeHead(200);r.end('hello world')});\\nserver.listen(80);\\n\\npf.createServer();\\npf.listen(1337, server, function(){\\n  console.log(':3 yay')\\n});\\n```\\n\\nSupport for serving inline requests over a existing HTTP connection as the FlashPlayer will first check port 843, but if it's unable to get a response there it will send a policy file request over port 80, which is usually your http server.\\n\\n#### server.add\\nAdds more origins to the policy file you can add as many arguments as you like.\\n\\n```js\\nvar pf = require('policyfile');\\npf.createServer(['google.com:80']);\\npf.listen();\\npf.add('blog.3rd-Eden.com:80', 'blog.3rd-Eden.com:8080'); // now has 3 origins\\n```\\n\\n#### server.add\\nAdds more origins to the policy file you can add as many arguments as you like.\\n\\n```js\\nvar pf = require('policyfile');\\npf.createServer(['blog.3rd-Eden.com:80', 'blog.3rd-Eden.com:8080']);\\npf.listen();\\npf.remove('blog.3rd-Eden.com:8080'); // only contains the :80 version now\\n```\\n\\n#### server.close\\nShuts down the server\\n\\n```js\\nvar pf = require('policyfile');\\npf.createServer();\\npf.listen();\\npf.close(); // OH NVM.\\n```\\n\\n## API\\nhttp://3rd-eden.com/FlashPolicyFileServer/\\n\\n## Examples\\nSee https://github.com/3rd-Eden/FlashPolicyFileServer/tree/master/examples for examples\\n\\n## Licence\\n\\nMIT see LICENSE file in the repository\",\n   41    \"readmeFilename\": \"README.md\",\n   42    \"repository\": {\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\policyfile\\README.md:\n   65  pf.createServer(['google.com:80']);\n   66  pf.listen();\n   67: pf.add('blog.3rd-Eden.com:80', 'blog.3rd-Eden.com:8080'); // now has 3 origins\n   68  ```\n   69  \n   ..\n   73  ```js\n   74  var pf = require('policyfile');\n   75: pf.createServer(['blog.3rd-Eden.com:80', 'blog.3rd-Eden.com:8080']);\n   76  pf.listen();\n   77: pf.remove('blog.3rd-Eden.com:8080'); // only contains the :80 version now\n   78  ```\n   79  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\policyfile\\tests\\unit.test.js:\n   17  , 'Create Server instance': function(){\n   18      var server = fspfs.createServer()\n   19:       , server2 = new fspfs.Server({log:false}, ['blog.3rd-Eden.com:1337']);\n   20      \n   21      // server 2 options test\n   22      server2.log.should.be.false;\n   23      server2.origins.length.should.equal(1);\n   24:     server2.origins[0].should.equal('blog.3rd-Eden.com:1337');\n   25      \n   26      // server defaults\n   ..\n   34      \n   35      // more options testing\n   36:     server = fspfs.createServer(['blog.3rd-Eden.com:80']);\n   37      server.origins.length.should.equal(1);\n   38:     server.origins[0].should.equal('blog.3rd-Eden.com:80');\n   39      \n   40:     server = fspfs.createServer({log:false},['blog.3rd-Eden.com:80']);\n   41      server.log.should.be.false;\n   42      server.origins.length.should.equal(1);\n   43:     server.origins[0].should.equal('blog.3rd-Eden.com:80');\n   44      \n   45    }\n   ..\n   47  , 'Add origin': function(){\n   48      var server = fspfs.createServer();\n   49:     server.add('google.com:80', 'blog.3rd-Eden.com:1337');\n   50      \n   51      server.origins.length.should.equal(3);\n   ..\n   69  , 'Remove origin': function(){\n   70      var server = fspfs.createServer();\n   71:     server.add('google.com:80', 'blog.3rd-Eden.com:1337');\n   72      server.origins.length.should.equal(3);\n   73      \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\components\\learnboost-engine.io-client\\lib\\transports\\index.js:\n   50  \n   51    xhr = util.request(xd);\n   52:   /* See #7 at http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx */\n   53    if (isXProtocol && global.XDomainRequest && xhr instanceof global.XDomainRequest) {\n   54      return new JSONP(opts);\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\active-x-obfuscator\\node_modules\\zeparser\\benchmark.html:\n 15115  Nav.init();\n 15116  }\n 15117: Blog.search({\n 15118  stag: 'sidebar_docs',\n 15119  limit: 20,\n .....\n 15122  sort_dir: -1,\n 15123  target: 'd_sidebar_documents',\n 15124: outer_div_class: 'sidebar_blog_row',\n 15125: title_class: 'sidebar_blog_title',\n 15126  after: '<div class=\"sidebar_see_more\">&rarr; <a href=\"#ArticleCategory/docs\">See More...</a></div>'\n 15127  });\n 15128: Blog.search({\n 15129  stag: 'sidebar_tutorials',\n 15130  limit: 5,\n .....\n 15133  sort_dir: -1,\n 15134  target: 'd_sidebar_tutorials',\n 15135: outer_div_class: 'sidebar_blog_row',\n 15136: title_class: 'sidebar_blog_title',\n 15137  after: '<div class=\"sidebar_see_more\">&rarr; <a href=\"#ArticleCategory/tutorials\">See More...</a></div>'\n 15138  });\n 15139: Blog.search({\n 15140  stag: 'sidebar_plugins',\n 15141  limit: 5,\n .....\n 15144  sort_dir: -1,\n 15145  target: 'd_sidebar_plugins',\n 15146: outer_div_class: 'sidebar_blog_row',\n 15147: title_class: 'sidebar_blog_title',\n 15148  after: '<div class=\"sidebar_see_more\">&rarr; <a href=\"#ArticleCategory/plugins\">See More...</a></div>'\n 15149  });\n .....\n 15540  for (var idx = 0, len = games.length; idx < len; idx++) {\n 15541  var game = games[idx];\n 15542: html += '<div class=\"sidebar_blog_row\">';\n 15543: html += '<div class=\"sidebar_blog_title\"><a href=\"#Game/'+game.GameID+'\">'+ww_fit_string(game.Title, 170, session.em_width, 1)+'</a></div>';\n 15544  html += '</div>';\n 15545  } \n .....\n 16099  }\n 16100  };\n 16101: var Blog = {\n 16102  edit_caption: '<div class=\"caption\" style=\"margin-top:5px;\">*<b>Bold</b>*&nbsp;&nbsp;|<i>Italic</i>|&nbsp;&nbsp;{<span style=\"font-family:monaco,courier,monospace;\">monospace</span>}&nbsp;&nbsp;[http://link]&nbsp;&nbsp;<a href=\"/effect/#Article/Formatting_Guide\" target=\"_blank\">Formatting Guide...</a></div>',\n 16103  search: function(args) {\n .....\n 16112  get_article_preview: function(row, args) {\n 16113  var html = '';\n 16114: Debug.trace('blog', 'Row: ' + dumper(row));\n 16115: html += '<div class=\"' + (args.outer_div_class || 'blog_article_preview') + '\">';\n 16116  var ext_article_url = 'http://' + location.hostname + '/effect/article.psp.html' + row.Path + '/' + row.ArticleID;\n 16117  var article_url = '#Article' + row.Path + '/' + row.ArticleID;\n 16118: html += '<div class=\"' + (args.title_class || 'blog_title') + '\"><a href=\"'+article_url+'\">' + row.Title + '</a></div>';\n 16119  if (!args.title_only) {\n 16120: html += '<div class=\"' + (args.preview_class || 'blog_preview_body') + '\">';\n 16121  html += row.Preview;\n 16122  html += '&nbsp;&nbsp;<a href=\"'+article_url+'\">' + (args.link_title || 'Read Full Story...') + '</a>';\n 16123  html += '</div>';\n 16124  html += '<nobr>';\n 16125: html += '<div class=\"' + (args.footer_class || 'blog_preview_footer') + '\">';\n 16126: var elem_class = args.footer_element_class || 'blog_preview_footer_element';\n 16127  if ((session.username == row.Username) || is_admin()) {\n 16128  html += '<div class=\"' + elem_class + '\">' + \n .....\n 16155  } \n 16156  if (args.more && (rows.length == args.limit)) {\n 16157: html += large_icon_button('page_white_put.png', 'More...', \"Blog.more(this, \"+encode_object(args)+\")\") + '<br clear=\"all\"/>';\n 16158  html += spacer(1,15) + '<br/>';\n 16159  }\n .....\n 16170  more: function(div, args) {\n 16171  args.offset += args.limit;\n 16172: Debug.trace('blog', \"More Args: \" + dumper(args));\n 16173  div.innerHTML = '<img src=\"images/loading.gif\" width=\"32\" height=\"32\"/>';\n 16174  effect_api_get( 'article_search', args, [this, 'more_response'], { _search_args: args, _div: div } );\n .....\n 16185  } \n 16186  if (args.more && (rows.length == args.limit)) {\n 16187: html += large_icon_button('page_white_put.png', 'More...', \"Blog.more(this, \"+encode_object(args)+\")\") + '<br clear=\"all\"/>';\n 16188  html += spacer(1,15) + '<br/>';\n 16189  }\n .....\n 16375  html += '</p><br/>';\n 16376  html += '<textarea class=\"fe_edit\" id=\"fe_comment_body\" style=\"width:400px; height:150px;\" wrap=\"virtual\" onkeydown=\"return catchTab(this,event)\"></textarea>';\n 16377: html += Blog.edit_caption;\n 16378  html += '</td></tr></table>';\n 16379  html += '<br><br><table><tr>';\n .....\n 16484  html += '</p><br/>';\n 16485  html += '<textarea class=\"fe_edit\" id=\"fe_comment_body\" style=\"width:400px; height:150px;\" wrap=\"virtual\" onkeydown=\"return catchTab(this,event)\"></textarea>';\n 16486: html += Blog.edit_caption;\n 16487  html += '</td></tr></table>';\n 16488  html += '<br><br><table><tr>';\n .....\n 16993  Nav.bar( ['Main', 'EffectGames.com'] );\n 16994  Nav.title('');\n 16995: $('d_blog_news').innerHTML = loading_image();\n 16996: $('d_blog_community').innerHTML = loading_image();\n 16997: $('d_blog_featured').innerHTML = loading_image();\n 16998: Blog.search({\n 16999  stag: 'featured_game',\n 17000  limit: 4,\n .....\n 17003  });\n 17004  effect_api_get( 'get_site_info', { cat: 'pop_pub_games' }, [this, 'receive_pop_pub_games'], { } );\n 17005: Blog.search({\n 17006  stag: 'front_page',\n 17007  limit: 5,\n 17008: target: 'd_blog_news',\n 17009  more: 1\n 17010  });\n 17011: Blog.search({\n 17012  path: '/community',\n 17013  limit: 5,\n 17014: target: 'd_blog_community',\n 17015  more: 1\n 17016  });\n .....\n 17083  html += '<td width=\"10\">' + spacer(10,1) + '</td>';\n 17084  html += '<td width=\"*\" valign=\"top\">';\n 17085: html += '<div class=\"blog_title\"><a href=\"'+row.Params.featured_link+'\" target=\"_blank\">' + row.Title + '</a></div>';\n 17086  html += '<div class=\"featured_game_content\">' + row.HTML + '</div>';\n 17087  html += '</td>';\n .....\n 17098  html += '</table>';\n 17099  } \n 17100: $('d_blog_featured').innerHTML = html;\n 17101  },\n 17102  animate_mhs: function() {\n .....\n 17115  },\n 17116  onDeactivate: function() {\n 17117: $('d_blog_news').innerHTML = '';\n 17118: $('d_blog_community').innerHTML = '';\n 17119  this.height_target = 75;\n 17120  this.height_start = $('d_header').offsetHeight;\n .....\n 20174  var _UDS_MSG_SEARCHER_IMAGE = ('Image'); \n 20175  var _UDS_MSG_SEARCHER_WEB = ('Web'); \n 20176: var _UDS_MSG_SEARCHER_BLOG = ('Blog'); \n 20177  var _UDS_MSG_SEARCHER_VIDEO = ('Video'); \n 20178  var _UDS_MSG_SEARCHER_LOCAL = ('Local'); \n .....\n 20266  function ma(a,d){return a.visibility=d}function s(a,d){return a.title=d}function t(a,d){return a.className=d}function na(a,d){return a.checked=d}function oa(a,d){return a.onclick=d}function pa(a,d){return a.display=d}function qa(a,d){return a.execute=d}function u(a,d){return a.height=d}\n 20267  var v=\"appendChild\",ra=\"push\",sa=\"clearTimeout\",w=\"input\",x=\"width\",ta=\"round\",z=\"replace\",ua=\"floor\",va=\"content\",xa=\"value\",ya=\"indexOf\",za=\"match\",Aa=\"readyState\",Ba=\"focus\",A=\"createElement\",C=\"setAttribute\",Ca=\"cloneNode\",Da=\"type\",Ea=\"recordStat\",Fa=\"ServiceBase\",Ga=\"getTime\",D=\"length\",Ha=\"title\",E=\"prototype\",F=\"cursor\",Ia=\"className\",Ja=\"Version\",Ka=\"checked\",La=\"setTimeout\",Ma=\"document\",Na=\"split\",Oa=\"userAgent\",Pa=\"location\",Qa=\"getComputedStyle\",G=\"style\",Ra=\"close\",H=\"search\",I=\"call\",\n 20268: J=\"loader\",Sa=\"currentStyle\",Ta=\"console\",Ua=\"action\",Va=\"apply\",Wa=\"navigator\",K=\"CurrentLocale\",L=\"execute\",Xa=\"height\",Ya=\"toLowerCase\",Za=\"event\",M;if(!m[H].NoOldNames){j(\"UDS_ServiceBase\",m[J][Fa]);j(\"UDS_OriginalAppPath\",m[J].OriginalAppPath);j(\"UDS_ApiKey\",m[J].ApiKey);j(\"UDS_KeyVerified\",m[J].KeyVerified);j(\"UDS_LoadFailure\",m[J].LoadFailure);j(\"UDS_CurrentLocale\",ea);j(\"UDS_ShortDatePattern\",aa);j(\"UDS_Version\",m[H][Ja]);j(\"UDS_JSHash\",m[H].JSHash)}if(!N)var N=j;if(!O)var O=google_exportProperty;var P={};P.blank=\"&nbsp;\";P.image=_UDS_MSG_SEARCHER_IMAGE;P.web=_UDS_MSG_SEARCHER_WEB;P.blog=_UDS_MSG_SEARCHER_BLOG;P.video=_UDS_MSG_SEARCHER_VIDEO;P.local=_UDS_MSG_SEARCHER_LOCAL;P.news=_UDS_MSG_SEARCHER_NEWS;P.book=_UDS_MSG_SEARCHER_BOOK;P.patent=\"Patent\";P[\"ads-by-google\"]=_UDS_MSG_ADS_BY_GOOGLE;P.cse=\"Custom Search Control\";P.save=_UDS_MSG_SEARCHCONTROL_SAVE;P.keep=_UDS_MSG_SEARCHCONTROL_KEEP;P.include=_UDS_MSG_SEARCHCONTROL_INCLUDE;P.copy=_UDS_MSG_SEARCHCONTROL_COPY;P.close=_UDS_MSG_SEARCHCONTROL_CLOSE;\n 20269  P[\"sponsored-links\"]=_UDS_MSG_SEARCHCONTROL_SPONSORED_LINKS;P[\"see-more\"]=_UDS_MSG_SEARCHCONTROL_SEE_MORE;P.watermark=_UDS_MSG_SEARCHCONTROL_WATERMARK;P[\"search-location\"]=_UDS_MSG_SEARCHER_CONFIG_SET_LOCATION;P[\"disable-address-lookup\"]=_UDS_MSG_SEARCHER_CONFIG_DISABLE_ADDRESS_LOOKUP;P[\"sort-by-date\"]=_UDS_MSG_SORT_BY_DATE;P.pbg=_UDS_MSG_BRANDING_STRING;P[\"n-minutes-ago\"]=_UDS_MSG_MINUTES_AGO;P[\"n-hours-ago\"]=_UDS_MSG_HOURS_AGO;P[\"one-hour-ago\"]=_UDS_MSG_ONE_HOUR_AGO;P[\"all-n-related\"]=_UDS_MSG_NEWS_ALL_N_RELATED;\n 20270  P[\"related-articles\"]=_UDS_MSG_NEWS_RELATED;P[\"page-count\"]=_UDS_MSG_TOTAL_PAGE_COUNT;var Q=[];Q[0]=_UDS_MSG_MONTH_ABBR_JAN;Q[1]=_UDS_MSG_MONTH_ABBR_FEB;Q[2]=_UDS_MSG_MONTH_ABBR_MAR;Q[3]=_UDS_MSG_MONTH_ABBR_APR;Q[4]=_UDS_MSG_MONTH_ABBR_MAY;Q[5]=_UDS_MSG_MONTH_ABBR_JUN;Q[6]=_UDS_MSG_MONTH_ABBR_JUL;Q[7]=_UDS_MSG_MONTH_ABBR_AUG;Q[8]=_UDS_MSG_MONTH_ABBR_SEP;Q[9]=_UDS_MSG_MONTH_ABBR_OCT;Q[10]=_UDS_MSG_MONTH_ABBR_NOV;Q[11]=_UDS_MSG_MONTH_ABBR_DEC;P[\"month-abbr\"]=Q;P.directions=_UDS_MSG_DIRECTIONS;\n .....\n 20300  B[G].filter='progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\"'+W+'\")';ja(B[G],S+\"px\");u(B[G],n+\"px\")}else B=qb(W,c,c,B);n=B;T(f,y);if(e){f=\"http://www.google.com\";if(typeof e==\"string\"&&(e[za](/^http:\\/\\/[a-z]*\\.google\\.com/)||e[za](/^http:\\/\\/www\\.youtube\\.com/)))f=e;e=rb(f,c,\"_BLANK\");t(e,h.of);T(e,n);T(l,e)}else T(l,n);if(a){a=typeof a==\"string\"?p.getElementById(a):a;ib(a);T(a,d)}return d};O(m[H].a,\"getBranding\",m[H].a.Cf);m[H].a.setOnLoadCallback=function(a,d){m.setOnLoadCallback(a,d)};\n 20301  O(m[H].a,\"setOnLoadCallback\",m[H].a.setOnLoadCallback);var Kb;function Jb(a){Kb||(Kb=p[A](\"DIV\"));Kb[v](a);r(Kb,\"\")}m[H].a[E].Af=function(a){var d=this.lb;if(a)d=a;a={};var e=V(this.ia());Z(e,\"gs-result\");Z(e,\"gs-error-result\");d=U(d,\"gs-snippet\");T(e,d);a.html=e;return a};m[H].a[E].Bf=function(a){var d=this.rb;if(a)d=a;a={};var e=V(this.ia());Z(e,\"gs-result\");Z(e,\"gs-no-results-result\");d=U(d,\"gs-snippet\");T(e,d);a.html=e;return a};j(\"google.search.CurrentLocale\",ea);\n 20302: j(\"google.search.ShortDatePattern\",aa);m[H].q=function(){m[H].a[I](this);this.w=\"blog\";this.Ba=\"/GblogSearch\";this.na=\"http://blogsearch.google.com/blogsearch\";this.l=c;this.N=g;this.Ta=b;this.fa=hb(this,m[H].q[E].oa);this.Sa=\"gsc-blogConfig\";this.o=c};N(\"google.search.BlogSearch\",m[H].q);$a(m[H].q,m[H].a);m[H].q.B=\"GblogSearch\";O(m[H].q,\"RESULT_CLASS\",m[H].q.B);m[H].q.n=[];m[H].q.I=function(a,d,e,f,h){var l=0;if(a)l=ca(a,10);a=m[H].q.n[l];m[H].q.n[l]=c;a.W(d,e,f,h)};O(m[H].q,\"RawCompletion\",m[H].q.I);\n 20303: m[H].q[E].ha=function(a,d,e,f){e=e==c?m[H].a.ka(m[H].q.n,this):e;d=this.ya(d==c?\"google.search.BlogSearch.RawCompletion\":d,e,f);if(a){a=a;if(this.H)a=a+\" \"+this.H;if(this.l)a=a+\" blogurl:\"+this.l;a=\"&q=\"+i(a);if(this.N)a+=\"&scoring=d\";d+=a;this.u=a}return d};\n 20304: m[H].q[E].C=function(a){a.html&&delete a.html;var d=V(this.ia());Z(d,\"gs-result\");var e;e=Y(a.postUrl,a[Ha],this.s(),\"gs-title\");T(d,e);e=new Date(a.publishedDate);e=U(this.Va(e),\"gs-publishedDate\");T(d,e);e=new Date(a.publishedDate);e=U(this.mc(e),\"gs-relativePublishedDate\");T(d,e);e=U(a[va],\"gs-snippet\");T(d,e);e=Y(a.blogUrl,a.blogUrl,this.s(),\"gs-visibleUrl\");T(d,e);a.html=d;this.ta(a.html)};O(m[H].q[E],\"createResultHtml\",m[H].q[E].C);m[H].q[E].qa=function(a){this.l=a==c||a==\"\"?c:a};\n 20305  O(m[H].q[E],\"setSiteRestriction\",m[H].q[E].qa);m[H].q[E].K=function(a){this.N=a==m[H].a.ma?b:g};O(m[H].q[E],\"setResultOrder\",m[H].q[E].K);\n 20306  m[H].q[E].oa=function(a,d){if(d){if(this.o==c){d=V(\"gsc-configSetting\");this.o=xb(c,\"0\",this.N,\"gsc-configSettingCheckbox\");T(d,this.o);T(d,U(P[\"sort-by-date\"],\"gsc-configSettingCheckboxLabel\"));var e=V(\"gsc-configSettingSubmit\");T(e,ub(P[Ra],\"gsc-configSettingSubmit\"));T(d,e);T(a,d)}else na(this.o,this.N);this.o[Ba]()}else if(this.o)this.o[Ka]?this.K(m[H].a.ma):this.K(m[H].a.eb)};m[H].k=function(){m[H].a[I](this);this.w=\"book\";this.Ba=\"/GbookSearch\";this.na=\"http://books.google.com/books\";this.Jb=g;this.Gc=c};N(\"google.search.BookSearch\",m[H].k);$a(m[H].k,m[H].a);m[H].k.B=\"GbookSearch\";O(m[H].k,\"RESULT_CLASS\",m[H].k.B);m[H].k.Pd=\"user-list\";O(m[H].k,\"USER_LIST\",m[H].k.Pd);m[H].k.Hd=1;O(m[H].k,\"TYPE_ALL_BOOKS\",m[H].k.Hd);m[H].k.Ld=2;O(m[H].k,\"TYPE_FULL_VIEW_BOOKS\",m[H].k.Ld);m[H].k.n=[];\n .....\n 20362  if(this.ua){this.da=V(\"gsc-wrapper\");this.O=V(\"gsc-adBlockInvisible\");this.U=V(\"gsc-adBlockInvisible\");T(this.da,this.O);T(this.i,this.U);T(this.i,this.da);this.ac&&wb(this.i,\"gsc-ad-preview\")}T(this.da,this.Aa);for(d=0;d<this.d[D];d++){this.ce(d);if(this.Z==m[H].b.Ka){Z(this.p[d].V,\"gsc-tabHeader\");Z(this.p[d].ga,\"gsc-tabData\");if(d==this.J){Z(this.p[d].V,\"gsc-tabhActive\");Z(this.p[d].ga,\"gsc-tabdActive\")}else{Z(this.p[d].V,\"gsc-tabhInactive\");Z(this.p[d].ga,\"gsc-tabdInactive\")}}}if(a&&typeof a==\n 20363  \"string\")a=p.getElementById(a);if(a){jb(a,this.i);if((a=this.Df())&&a<300){this.Uf=b;Z(this.i,\"gsc-narrow\")}}};O(m[H].b[E],\"draw\",m[H].b[E].Ib);m[H].b[E].xg=function(a){switch(a){case m[H].b.Gd:case m[H].b.Eb:case m[H].b.Fd:this.Qb=a;break;default:this.Qb=m[H].b.Eb;break}};O(m[H].b[E],\"setTimeoutInterval\",m[H].b[E].xg);m[H].b[E].rg=function(a,d,e){if(e)switch(e){case m[H].b.nd:case m[H].b.md:case m[H].b.ld:case m[H].b.kd:case m[H].b.jd:this.sc=P[e];break;default:this.sc=e;break}this.Lb=hb(a,d)};\n 20364: O(m[H].b[E],\"setOnKeepCallback\",m[H].b[E].rg);M=m[H].b[E];M.vb=function(a){var d=a.w;if(this.kb){if(d==\"web\"&&a.D!=m[H].g.Y)return g;return b}else return d==\"blog\"||d==\"image\"?b:g};\n 20365  M.Dg=function(a){if(this.J!=a){$(this.p[this.J].V,\"gsc-tabhActive\");$(this.p[this.J].ga,\"gsc-tabdActive\");Z(this.p[this.J].V,\"gsc-tabhInactive\");Z(this.p[this.J].ga,\"gsc-tabdInactive\");this.J=a;Z(this.p[this.J].V,\"gsc-tabhActive\");Z(this.p[this.J].ga,\"gsc-tabdActive\");$(this.p[this.J].V,\"gsc-tabhInactive\");$(this.p[this.J].ga,\"gsc-tabdInactive\");if(this.ua)this.vb(this.p[this.J].Cc)?this.ob():this.fe()}};\n 20366  M.ob=function(){if(this.ua){t(this.O,\"gsc-adBlockInvisible\");t(this.U,\"gsc-adBlockInvisible\");this.Ca&&zb(this.da,\"gsc-thinWrapper\")}};M.fe=function(){if(this.ua){this.vc>0?yb(this.O,\"gsc-adBlock\"):yb(this.O,\"gsc-adBlockInvisible\");if(this.Ca)if(this.uc>0){t(this.U,\"gsc-adBlockVertical\");Z(this.da,\"gsc-thinWrapper\")}else{t(this.U,\"gsc-adBlockInvisible\");$(this.da,\"gsc-thinWrapper\")}}};M.submit=function(){this[w][xa][D]?this[L]():this.dc();return g};O(m[H].b[E],\"submit\",m[H].b[E].submit);M=m[H].b[E];\n .....\n 20415  m[H].g[E].qa=function(a,d,e){this.lb=this.wa=c;var f=g;if(a==c||typeof a==\"string\"&&a==\"\"){f=g;this.l=c;this.D=m[H].g.Y;this.lb=this.Ea=c}else if(typeof a==\"string\")if(f=a[za](/(^partner-pub-\\d*:.*)|(^\\d{21}:.*)/)){this.l=a;this.D=m[H].g.ib}else{this.l=a;this.D=m[H].g.Y}else if(a.siteUrl){f=g;this.l=a.siteUrl}else if(a.cseId){f=b;this.l=a.cseId;this.D=m[H].g.ib}else if(a.crefUrl){f=b;this.l=a.crefUrl;this.D=m[H].g.Gb;this.lb=P[\"linked-cse-error-results\"]}else{f=g;this.l=c;this.D=m[H].g.Y;this.Ea=\n 20416  c}if(f){if(d)this.Ea=this.Vf(d);if(e)if(e[za](/__HL__/)&&e[za](/__QUERY__/))this.jc=e;if(this.D==m[H].g.Gb)if(!this.l[za](/^http:\\/\\/www\\.google\\.com\\/coop\\/tools\\/autocse\\?referer=/))(new Image).src=\"http://www.google.com/cse/tools/ping?cref=\"+i(this.l)+\"&nocache=\"+Number(new Date)}};O(m[H].g[E],\"setSiteRestriction\",m[H].g[E].qa);\n 20417: m[H].g[E].R=function(a,d){if(a==m[H].a.Ub)this.Ha=d?d==m[H].a.Wb||d==m[H].a.Vb||d==m[H].a.Ad?d:c:c;if(a==m[H].a.Na)if(d)for(var e in d){a=d[e];if(e==\"lr\"||e==\"usg\"||e==\"filter\"||e==\"gl\"||e==\"richsnippet\"){if(this.F==c)this.F=\"&\";else this.F+=\"&\";this.F+=e+\"=\"+i(a)}}else this.F=c};O(m[H].g[E],\"setRestriction\",m[H].g[E].R);m[H].g[E].S=function(a){if(m[H].a.Ma==a)this.za=m[H].a.Ma;else m[H].a[E].S[I](this,a)};O(m[H].g[E],\"setResultSetSize\",m[H].g[E].S);if(!m[H].NoOldNames){j(\"GwebSearch\",m[H].g);j(\"GbookSearch\",m[H].k);j(\"GblogSearch\",m[H].q);j(\"GvideoSearch\",m[H].r);j(\"GnewsSearch\",m[H].m);j(\"GlocalSearch\",m[H].e);j(\"GimageSearch\",m[H].c);j(\"GpatentSearch\",m[H].h);j(\"GSearch\",m[H].a);j(\"GSearchControl\",m[H].b);j(\"GSearchForm\",m[H].L);j(\"GsearcherOptions\",m[H].A);j(\"GdrawOptions\",m[H].T)};var Mb=function(a,d,e){this.Tf=a;this.Ac=d;this.Ya=g;this.pe=e||c;this.console=k[Ta]||{log:function(){}};if(!this.pe&&this.Ac==\"parent\")this[Ta].log(\"You forgot to pass an iframe.\");else{if(!k.UDS_IEXDC_SETUP_COMPLETE)try{k.execScript(\"Class UDS_GCXPC____NIXVBS_wrapper\\n Private UDS_M_TRANSPORT\\nPublic Sub UDS_SET_TRANSPORT(transport)\\nIf isEmpty(UDS_M_TRANSPORT) Then\\nSet UDS_M_TRANSPORT = transport\\nEnd If\\nEnd Sub\\nPublic Sub UDS_SEND_MESSAGE_(payload)\\n Call UDS_M_TRANSPORT.UDS_GCXPC____NIXJS_handle_message(payload)\\nEnd Sub\\nPublic Sub UDS_CREATE_CHANNEL(channel)\\n Call UDS_M_TRANSPORT.UDS_GCXPC____NIXJS_create_channel(channel)\\nEnd Sub\\nPublic Sub UDS_GCXPC____NIXVBS_container()\\n End Sub\\nEnd Class\\n Function UDS_GCXPC____NIXVBS_get_wrapper(transport)\\nDim wrap\\nSet wrap = New UDS_GCXPC____NIXVBS_wrapper\\nwrap.UDS_SET_TRANSPORT transport\\nSet UDS_GCXPC____NIXVBS_get_wrapper = wrap\\nEnd Function\",\n 20418  \"vbscript\");k.UDS_IEXDC_SETUP_COMPLETE=b}catch(f){}this.UDS_GCXPC____NIXJS_handle_message=this.If;this.UDS_GCXPC____NIXJS_create_channel=this.uf}},Ob=function(){var a=k[Wa]?k[Wa][Oa]:c;if(a)return/trident\\/\\d/i.test(a)&&Nb(a)==7;return g},Pb=/MSIE\\s+([^\\);]+)(\\)|;)/,Nb=function(a){return(a=Pb.exec(a))?a[1]:\"\"};M=Mb[E];M.If=function(a){this.Ac==\"parent\"&&a==\"connected\"?this.He():this.Tf(a)};M.uf=function(a){this.oe=a};\n 20419  M.Zd=function(a){return function(){if(!a.Ya){var d=a.pe;try{d.contentWindow.opener=k.UDS_GCXPC____NIXVBS_get_wrapper(a);a.Ya=b}catch(e){this[Ta].log(\"Exception caught while attempting Google IE XDC: \"+e.message)}a.Ya||k[La](a.Zd(a),100)}}};M.Yd=function(a){return function(){if(!a.Ya){try{var d=k.opener;if(d&&\"UDS_GCXPC____NIXVBS_container\"in d){a.oe=d;a.oe.UDS_CREATE_CHANNEL(k.UDS_GCXPC____NIXVBS_get_wrapper(a));a.Ya=b;a.send(\"connected\");a.He()}}catch(e){return}a.Ya||k[La](a.Yd(a),100)}}};\n .....\n 33706   * MIT Licensed\n 33707  \n 33708:  * http://ejohn.org/blog/processingjs/\n 33709  \n 33710   *\n .....\n 43584  \n 43585  \n 43586: if(!(htr('hittail_ok'))){htc=document.referrer;htz=htl(document.location.href);if(htz!=htl(htc)&&(htc!='')){if(htw(htc)){kw=htq(htc);htAdt=htAdTk(document.location.href);document.write('<img src=\"http://tracking.hittail.com/mlt.png?ref='+escape(htc)+'&kw='+kw+'&eng='+htm(htc)+'&p='+htF(htc)+'&n='+htn(kw)+'&adt='+htAdt+'\" width=\"1\" height=\"1\"/>');}}hty('hittail_ok','1','','/',document.domain,'');}function htw(hte){var htd=true;var htj=new Array(\"http://private.\",\"http://internal.\",\"http://intranet.\",\"login=\",\"/login\",\"login.\",\"logon=\",\"/logon\",\"logon.\",\"/signin\",\"signin=\",\"signin.\",\"signon\",\"/admin/\",\"mail.\",\"/mail/\",\"/email/\",\"webmail\",\"mailbox\",\"https://\",\"cache:\",\"http://www.blogger.com\",\"http://localhost\",\"http://client.\",\"http://docs.\",\"http://timebase.\",\"http://www2.blogger.\",\"http://www.typepad.com/t/app/\",\"http://www.typepad.com/t/comments\",\"http://blockedReferrer\");for(i=0;i<htj.length;i++){if(hte.search(htj[i])> -1){htd=false;return htd;}}var htE=/https?:\\/\\/(www\\.|\\d+\\.)?hittail\\.com/;var hto=/https?:\\/\\/(www\\.|\\d+\\.)?mylongtail\\.com/;if(hte.search(htE)> -1||hte.search(hto)> -1){htd=false;}return htd;};function htk(hta){return unescape(hta.replace(/\\+/g,\" \"));};function htm(url){var htH=/(http:\\/\\/)([^\\/]*?)(\\/)/;htH.test(url);hti=RegExp.$2;return hti;};function htq(url){var htG=/(\\?|&|&amp;|;){1}(q|p|query|t|w|search|as_q|wd){1}=(.[^&=]*)=?/i;htG.test(url);kw=htk(RegExp.$3);if(kw.indexOf('cache:')>=0||kw.indexOf('http://')>=0||kw.indexOf('invocationType')>=0|| !isNaN(kw)){kw='';}else{kw=htD(kw);}return kw;};function htD(hta){hta=hta.replace(/[^\\w #\\.\\-^\\u00c0-\\u00ff]/g,'');return hta;};function htF(url){p=0;htI=/\\.google\\./;if(htI.test(url)){htJ=/google(.*?)(start=)([0-9]+)/;htJ.test(url);p=RegExp.$3;if(p!=''){p=p/10;}else{p=1;}}if(p==0||p==''){hts=/\\.yahoo\\./;if(hts.test(url)){htt=/yahoo(.*?)b=([0-9]+)/;htt.test(url);p=RegExp.$2;if(p!=''){p=(p-1)/10+1;}else{p=1;}}}if(p==0||p==''){htg=/msn|live\\.com/;if(htg.test(url)){htp=/msn|live\\.com(.*?)(\\?|&)first=([0-9]+)/;htp.test(url);p=RegExp.$3;if(p!=''){p=(p-1)/10+1;}else{p=1;}}}if(p==0||p==''){htg=/ask\\.com/;if(htg.test(url)){htB=/ask(.*?)(\\?|&)page=([0-9]+)/;htB.test(url);p=RegExp.$3;if(p!=''){p=(p-1)/10;}else{p=1;}}}return p;};function htn(hta){hta=hta.replace(/^\\s+|\\s+$/g,'');var htv=hta.split(/\\s/);w=htv.length;return w;};function hty(name,value,expires,htf,domain,hth){var htx=name+\"=\"+escape(value)+((htf)?\"; htf=\"+htf:\"\")+((domain)?\"; domain=\"+domain:\"\")+((hth)?\"; hth\":\"\");document.cookie=htx;};function htr(name){var dc=document.cookie;var prefix=name+\"=\";var htb=dc.indexOf(\"; \"+prefix);if(htb== -1){htb=dc.indexOf(prefix);if(htb!=0)return null;}else htb+=2;var end=document.cookie.indexOf(\";\",htb);if(end== -1)end=dc.length;return unescape(dc.substring(htb+prefix.length,end));};function htl(url){var htb,end;htb=url.indexOf('//')+2;if(url.indexOf('/',8)){end=url.indexOf('/',8);}else{end=url.length}return url.substring(htb,end);};function htAdTk(url)\n 43587  \n 43588  {if ( (url.indexOf('gclid') > 0) || (url.indexOf('ysmkey') > 0) || (url.indexOf('OVRAW') > 0) || (url.indexOf('OVKEY') > 0) ){ad = 1;}else{ad = 0;}return ad;}\n .....\n 60653  ZmMsg.clickToDrawABorder=\"Click to draw a border:\";\n 60654  ZmMsg.clientAdvanced=\"Advanced (Ajax)\";\n 60655: ZmMsg.clientLoginNotice='<a target=\"_new\" href=\"http://www.zimbra.com\">Zimbra</a> :: the leader in open source messaging and collaboration :: <a target=\"_new\" href=\"http://www.zimbra.com/blog\">Zimbra Blog</a> <a target=\"_new\" href=\"http://wiki.zimbra.com\">Zimbra Wiki</a>';\n 60656  ZmMsg.clientMobile=\"Mobile\";\n 60657  ZmMsg.clientPreferred=\"Default\";\n .....\n 61006  ZmMsg.errorInvalidPrefValue=\"Invalid preference value.\";\n 61007  ZmMsg.errorInvalidSize=\"The size value is invalid.\";\n 61008: ZmMsg.errorJavaScriptRequired='<font face=arial>JavaScript must be enabled in order for you to use the Zimbra advanced client. However, it seems JavaScript is either disabled or not supported by your browser. To use Zimbra, enable JavaScript by changing your browser options, then <a href=\"{0}\">try again</a> or click <a href=\"{1}\">here</a> to switch to the basic client which does not require JavaScript.<br><br><a target=\"_new\" \"href=\"http://www.zimbra.com\">Zimbra</a> :: the leader in open source messaging and collaboration<br><a target=\"_new\" href=\"http://www.zimbra.com/blog\">Zimbra Blog</a> | <a target=\"_new\" href=\"http://wiki.zimbra.com\">Zimbra Wiki</a></font>';\n 61009  ZmMsg.errorLabel=\"Error:\";\n 61010  ZmMsg.errorLessThanOne=\"Value must be greater than zero.\";\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\uglify-js\\package.json:\n    5      \"name\": \"Mihai Bazon\",\n    6      \"email\": \"mihai.bazon@gmail.com\",\n    7:     \"url\": \"http://mihai.bazon.net/blog\"\n    8    },\n    9    \"version\": \"1.2.5\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\uglify-js\\package.json~:\n    7                  \"name\"  : \"Mihai Bazon\",\n    8                  \"email\" : \"mihai.bazon@gmail.com\",\n    9:                 \"url\"   : \"http://mihai.bazon.net/blog\"\n   10          },\n   11  \n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\uglify-js\\lib\\parse-js.js:\n   23                             Author: Mihai Bazon\n   24                           <mihai.bazon@gmail.com>\n   25:                        http://mihai.bazon.net/blog\n   26  \n   27    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\uglify-js\\lib\\process.js:\n   25                             Author: Mihai Bazon\n   26                           <mihai.bazon@gmail.com>\n   27:                        http://mihai.bazon.net/blog\n   28  \n   29    Distributed under the BSD license:\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\uglify-js\\tmp\\app.js:\n  621  	// Evaluates a script in a global context\n  622  	// Workarounds based on findings by Jim Driscoll\n  623: 	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n  624  	globalEval: function( data ) {\n  625  		if ( data && rnotwhite.test( data ) ) {\n  ...\n 2430  			get: function( elem ) {\n 2431  				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n 2432: 				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n 2433  				var attributeNode = elem.getAttributeNode(\"tabindex\");\n 2434  \n ....\n 12261          /**\n 12262           * For CSS Gradients syntax, please see:\n 12263:          * http://webkit.org/blog/175/introducing-css-gradients/\n 12264           * https://developer.mozilla.org/en/CSS/-moz-linear-gradient\n 12265           * https://developer.mozilla.org/en/CSS/-moz-radial-gradient\n .....\n 17918          __out.push('</a></li>\\n        <li><a class=\"\" href=\"https://www.uber.com/learn\" id=\"\">');\n 17919          __out.push(__sanitize(t(\"Learn More\")));\n 17920:         __out.push('</a></li>\\n        <li><a class=\"\" href=\"http://blog.uber.com\" id=\"\">');\n 17921:         __out.push(__sanitize(t(\"Blog\")));\n 17922          __out.push('</a></li>\\n        <li><a class=\"\" href=\"/#!/sign-in\">');\n 17923          __out.push(__sanitize(t(\"Sign In\")));\n .....\n 21261        __out.push('</a></li>\\n    <li><a href=\"http://www.facebook.com/uber\">');\n 21262        __out.push(__sanitize(t(\"Facebook\")));\n 21263:       __out.push('</a></li>\\n    <li><a href=\"http://blog.uber.com\">');\n 21264:       __out.push(__sanitize(t(\"Blog\")));\n 21265        __out.push('</a></li>\\n    <li><a href=\"https://www.uber.com/contact\">');\n 21266        __out.push(__sanitize(t(\"Contact Us\")));\n .....\n 21335      \"Twitter\": \"Twitter\",\n 21336      \"Facebook\": \"Facebook\",\n 21337:     \"Blog\": \"Blog\",\n 21338      \"Legal\": \"Legal\",\n 21339      \"Company_Footer\": \"Company\",\n .....\n 21407      \"Twitter\": \"Twitter\",\n 21408      \"Facebook\": \"Facebook\",\n 21409:     \"Blog\": \"Blog\",\n 21410      \"Privacy Policy\": \"Protection des Données Personelles\",\n 21411      \"Terms\": \"Conditions Générales\",\n\nC:\\Users\\aeife\\multicollide\\angularapp\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\uglify-js\\tmp\\uglify-hangs.js:\n  328   * @description Trims leading and trailing whitespace from a string.\n  329   *\n  330:  * <p>Used non-regexp the method from http://blog.stevenlevithan.com/archives/faster-trim-javascript\n  331   *\n  332   * @param {String} str The string to trim.\n\nC:\\Users\\aeife\\multicollide\\angularapp\\\\app\\.htaccess:\n   47  # Send CORS headers if browsers request them; enabled by default for images.\n   48  # developer.mozilla.org/en/CORS_Enabled_Image\n   49: # blog.chromium.org/2011/07/using-cross-domain-images-in-webgl-and.html\n   50  # hacks.mozilla.org/2011/11/using-cors-to-load-webgl-textures-from-cross-domain-images/\n   51  # wiki.mozilla.org/Security/Reviews/crossoriginAttribute\n   ..\n  156  <IfModule mod_deflate.c>\n  157  \n  158:   # Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/\n  159    <IfModule mod_setenvif.c>\n  160      <IfModule mod_headers.c>\n  ...\n  206  # They assume you control versioning with filename-based cache busting\n  207  # Additionally, consider that outdated proxies may miscache\n  208: #   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/\n  209  \n  210  # If you don't use filenames to version, lower the CSS and JS to something like\n\nC:\\Users\\aeife\\multicollide\\angularapp\\\\app\\locale_de-DE.json:\n   12      \"description\": \"\"\n   13    },\n   14:   \"_Blog_\": {\n   15:     \"message\": \"Blog\",\n   16      \"description\": \"\"\n   17    },\n\nC:\\Users\\aeife\\multicollide\\angularapp\\\\app\\locale_en-US.json:\n   12      \"description\": \"\"\n   13    },\n   14:   \"_Blog_\": {\n   15:     \"message\": \"Blog\",\n   16      \"description\": \"\"\n   17    },\n\n571 matches across 267 files\n",
			"settings":
			{
				"buffer_size": 364281,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
			"settings":
			{
				"buffer_size": 480,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/JSHint/JSHint.sublime-build",
	"command_palette":
	{
		"height": 260.0,
		"selected_items":
		[
			[
				"dif",
				"Set Syntax: Diff"
			],
			[
				"git diff",
				"Git: Diff All"
			],
			[
				"repl",
				"SublimeREPL: Node"
			],
			[
				"DIF",
				"Git: Diff All"
			],
			[
				"diff",
				"Git: Diff All"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"df",
				"Git: Diff Current File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"di",
				"Git: Diff All"
			],
			[
				"jsh",
				"JSHint"
			],
			[
				"jshi",
				"JSHint"
			],
			[
				"jshint",
				"JSHint"
			],
			[
				"tex",
				"LaTeXTools: View PDF"
			],
			[
				"sta",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"git",
				"Set Syntax: Git Graph"
			]
		],
		"width": 386.0
	},
	"console":
	{
		"height": 127.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/aeife/multicollide/angularapp/multicollide.sublime-project",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/aeife/multicollide/angularapp/app/components/angular-scenario/angular-scenario.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/app.js",
		"/C/Users/aeife/multicollide/angularapp/server/database.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/multicollide/multicollide.js",
		"/C/Users/aeife/multicollide/angularapp/server/socket.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/profile/profile.html",
		"/C/Users/aeife/multicollide/angularapp/app/index.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/help/help.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/help/help.js",
		"/C/Users/aeife/multicollide/angularapp/bower.json",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/multicollide/level.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/games/games.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/profileBox/profileBox.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/games/games.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/profile/profile.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/profileBox/profileBox.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/games/lobby.js",
		"/C/Users/aeife/multicollide/angularapp/app/websocketApi.js",
		"/C/Users/aeife/multicollide/angularapp/app/states.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/services/auth.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/multicollide/player.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/multicollide/config.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/multicollide/canvasRender.js",
		"/C/Users/aeife/multicollide/angularapp/app/locale_en-US.json",
		"/C/Users/aeife/multicollide/angularapp/app/locale_de-DE.json",
		"/C/Users/aeife/multicollide/angularapp/.jshintrc",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socket.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketgenapi.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/services/user.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketLogger.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/friendslist/friendslist.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/settings/settings.html",
		"/C/Users/aeife/multicollide/angularapp/app/styles/main.css",
		"/C/Users/aeife/multicollide/angularapp/server/app.js",
		"/C/Users/aeife/Desktop/Neuer Ordner/index.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/signup/signup.js",
		"/E/Euro Truck Simulator 2/live_streams.sii",
		"/C/Users/aeife/stuff/kineticJsTest/ease.html",
		"/C/Users/aeife/Downloads/masterprojektErweitert/masterprojektKinect/app/views/index.jade",
		"/C/Users/aeife/Downloads/masterprojektErweitert/masterprojektKinect/app/views/game.jade",
		"/C/Users/aeife/Downloads/masterprojektErweitert/masterprojektKinect/app/public/javascripts/level.js",
		"/C/Users/aeife/Downloads/masterprojektErweitert/masterprojektKinect/app/public/javascripts/player.js",
		"/C/Users/aeife/stuff/kineticJsTest/fabric.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/signup/signup.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/games/msgCreateGame.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/logger.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/friendslist/friendslist.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/flash/flash.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketResource.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketResource.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/login/login.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/friendslist/friendslist.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/settings/settings.js",
		"/C/xampp/htdocs/test/test.php",
		"/C/xampp/apache/conf/httpd.conf",
		"/C/xampp/htdocs/test/routes/test.html",
		"/C/xampp/htdocs/test/routes/graph1.php",
		"/C/xampp/htdocs/test/routes/index1.php",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketApi.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketApi.spec.js",
		"/C/Users/aeife/multicollide/angularapp/test/mock/socket.js",
		"/C/Users/aeife/multicollide/angularapp/karma.conf.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/localization/localization.js",
		"/C/Users/aeife/multicollide/angularapp/app/components/angular-placeholders/angular-placeholders.js",
		"/C/Users/aeife/multicollide/angularapp/app/socketApi.json",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/filters/withoutGuests.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketSub.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/sockets/socketSub.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/filters/withoutGuests.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/filters/toArray.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/error/error.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/blog/blog.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/about/about.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/localization/i18n.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/localization/localization.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/flash/flash.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/imagePreload/imagePreload.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/games/lobby.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/games/games.spec.js",
		"/C/Users/aeife/multicollide/angularapp/test/spec/directives/passconfirm.js",
		"/C/Users/aeife/multicollide/angularapp/test/spec/directives/confirmDialoge.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/profile/profile.spec.js",
		"/C/Users/aeife/multicollide/angularapp/app/views/confirmDialoge.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/directives/passconfirm.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/directives/confirmDialoge.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/imagePreload/imagePreload.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/filters/filters.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/filters/toArray.js",
		"/C/Users/aeife/multicollide/angularapp/app/views/profileBoxGuest.html",
		"/C/Users/aeife/multicollide/angularapp/app/views/profileBoxUser.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/menu/menu.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/localization/i18n.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/main/main.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/blog/blog.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/error/error.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/about/about.js",
		"/C/Users/aeife/multicollide/angularapp/app/views/friendslist.html",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/directives/friendslist.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/friendslist/friendslist.directive.js",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/aeife/multicollide/angularapp/Gruntfile.js",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/User/LaTeXTools Preferences.sublime-settings",
		"/C/Users/aeife/Downloads/Bachelorarbeit/Bachelorarbeit.bbl",
		"/C/Users/aeife/Downloads/Bachelorarbeit/Bachelorarbeit.tex",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/LaTeXTools/README.markdown",
		"/C/Users/aeife/multicollide/angularapp/test/spec/services/imagePreload.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/services/imagePreload.js",
		"/C/Users/aeife/multicollide/angularapp/test/spec/services/flash.js",
		"/C/Users/aeife/multicollide/angularapp/test/mock/angularappAppBoot.js",
		"/C/Users/aeife/multicollide/angularapp/app.js",
		"/C/Users/aeife/multicollide/angularapp/app/scripts/services/socketApi.js",
		"/C/Users/aeife/multicollide/angularapp/app/views/msgServerOffline.html",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/SublimeTODO/README.markdown",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/SideBarEnhancements/CHANGELOG",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 92.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"blog",
			"exclude",
			"blog",
			"bootstrap",
			"standings",
			"leave",
			".stop",
			"lastst",
			"laststa",
			"gameended",
			"gameEnded",
			".status",
			"host",
			"initialize",
			"level.reset()",
			"level.reset",
			"ishost",
			"joinlobby",
			"logout:before",
			"logout",
			"leavegame",
			"leavelobby",
			"loout",
			"logout",
			"delete",
			"kill",
			"interval",
			"lobby:deleted",
			"lobby:delete",
			"lobbyLeaveListener",
			"lobby:leave",
			"reason",
			"lobby.deleted",
			"lobby:deleted",
			"lobby.leave",
			"onleft",
			"onlobby",
			"onlobbyl",
			"lobby:deleted",
			"lobby:left",
			"lobby:leave",
			"onjoinedlobby",
			"start",
			"onlobbydeleted",
			"inlobby",
			"level",
			"onGameStarted",
			"ONGAMESTART",
			"lobby.started",
			"lobbystart",
			"started",
			"startgame",
			"ongamestart",
			"currentLobby",
			"directionchange",
			"states",
			"console.log",
			"getnextplayer",
			"getnextPla",
			"states",
			"direction.",
			"north",
			"'north'",
			"STATES.MULTICOLLIDE.E",
			"STATES.MULTICOLLIDE.",
			".rotation = ",
			".rotation",
			"'east'",
			"'west'",
			"'north'",
			"'south'",
			"spawn",
			"translateRot",
			"translate",
			"drawimagetile",
			"translate",
			"states.game.browser",
			"browser",
			"ingame",
			"'lobby'",
			"onjoined",
			"create",
			"'ingame'",
			"ingame",
			"status",
			"browser",
			"'browser'",
			"\"",
			"lobby.started",
			"ongamestarted",
			"status = ",
			"startgame",
			"lobby.start",
			"status",
			"\"",
			"data.id",
			"lobbyforuser",
			"directionchanges",
			"directionc",
			"directionC",
			"direction",
			"directionC",
			"current",
			".id = ",
			"host",
			"ishost",
			"backdrop",
			"backdr",
			"dialogCreate",
			"eventpr",
			"leave",
			"lobbys",
			"lobbies",
			"lobby",
			"lobbys",
			"join",
			"lobbys",
			"spawn",
			"canvass",
			"ownplayer",
			"multicollide",
			"socketgen",
			"guest",
			"deleteconnectedu",
			"$rootscope.username",
			"$rootscope.$apply",
			"apply",
			"$rootScope.$apply"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"onGameStart",
			"STATES.MULTICOLLIDE.DIRECTION.",
			"STATES.MULTICOLLIDE.EAST",
			"STATES.MULTICOLLIDE.WEST",
			"STATES.MULTICOLLIDE.NORTH",
			"STATES.MULTICOLLIDE.SOUTH",
			"'",
			"lobby",
			"lobbies",
			"config",
			"canvasRender",
			"canvas.drawImage",
			"level.gridSize",
			"this.canvas.background.",
			"this.canvas.game.",
			"this.canvas.game",
			"this.layer.background",
			"this.layer.game",
			"head",
			"// console.log"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/scripts/help/help.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34,
						"regions":
						{
						},
						"selection":
						[
							[
								34,
								34
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"ensure_newline_at_eof_on_save": true,
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"trim_trailing_white_space_on_save": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7640,
						"regions":
						{
						},
						"selection":
						[
							[
								1548,
								1548
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"ensure_newline_at_eof_on_save": true,
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"trim_trailing_white_space_on_save": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 364281,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										233,
										237
									],
									[
										573,
										577
									],
									[
										876,
										880
									],
									[
										1142,
										1146
									],
									[
										1175,
										1179
									],
									[
										1338,
										1342
									],
									[
										1371,
										1375
									],
									[
										1639,
										1643
									],
									[
										1654,
										1658
									],
									[
										1987,
										1991
									],
									[
										2502,
										2506
									],
									[
										2872,
										2876
									],
									[
										2885,
										2889
									],
									[
										3496,
										3500
									],
									[
										3519,
										3523
									],
									[
										3959,
										3963
									],
									[
										4207,
										4211
									],
									[
										4602,
										4606
									],
									[
										4625,
										4629
									],
									[
										5109,
										5113
									],
									[
										5132,
										5136
									],
									[
										5537,
										5541
									],
									[
										5940,
										5944
									],
									[
										5963,
										5967
									],
									[
										6453,
										6457
									],
									[
										6476,
										6480
									],
									[
										6956,
										6960
									],
									[
										6979,
										6983
									],
									[
										7819,
										7823
									],
									[
										8605,
										8609
									],
									[
										9754,
										9758
									],
									[
										9828,
										9832
									],
									[
										10228,
										10232
									],
									[
										10251,
										10255
									],
									[
										10737,
										10741
									],
									[
										10760,
										10764
									],
									[
										11267,
										11271
									],
									[
										11296,
										11300
									],
									[
										11792,
										11796
									],
									[
										12076,
										12080
									],
									[
										12528,
										12532
									],
									[
										13405,
										13409
									],
									[
										14191,
										14195
									],
									[
										15340,
										15344
									],
									[
										15414,
										15418
									],
									[
										15779,
										15783
									],
									[
										15995,
										15999
									],
									[
										16446,
										16450
									],
									[
										16478,
										16482
									],
									[
										16889,
										16893
									],
									[
										17169,
										17173
									],
									[
										17603,
										17607
									],
									[
										17786,
										17790
									],
									[
										18305,
										18309
									],
									[
										18337,
										18341
									],
									[
										18788,
										18792
									],
									[
										19183,
										19187
									],
									[
										19605,
										19609
									],
									[
										19643,
										19647
									],
									[
										19900,
										19904
									],
									[
										19915,
										19919
									],
									[
										20248,
										20252
									],
									[
										20604,
										20608
									],
									[
										20820,
										20824
									],
									[
										21124,
										21128
									],
									[
										21396,
										21400
									],
									[
										21668,
										21672
									],
									[
										21906,
										21910
									],
									[
										22172,
										22176
									],
									[
										22441,
										22445
									],
									[
										23877,
										23881
									],
									[
										24166,
										24170
									],
									[
										24443,
										24447
									],
									[
										24458,
										24462
									],
									[
										24791,
										24795
									],
									[
										25155,
										25159
									],
									[
										25371,
										25375
									],
									[
										25711,
										25715
									],
									[
										28452,
										28456
									],
									[
										37139,
										37143
									],
									[
										39420,
										39424
									],
									[
										39580,
										39584
									],
									[
										39999,
										40003
									],
									[
										40353,
										40357
									],
									[
										40697,
										40701
									],
									[
										40913,
										40917
									],
									[
										41236,
										41240
									],
									[
										41534,
										41538
									],
									[
										41804,
										41808
									],
									[
										42120,
										42124
									],
									[
										42378,
										42382
									],
									[
										42631,
										42635
									],
									[
										43001,
										43005
									],
									[
										43281,
										43285
									],
									[
										43556,
										43560
									],
									[
										43813,
										43817
									],
									[
										44097,
										44101
									],
									[
										44497,
										44501
									],
									[
										44841,
										44845
									],
									[
										45141,
										45145
									],
									[
										45300,
										45304
									],
									[
										45557,
										45561
									],
									[
										45803,
										45807
									],
									[
										46068,
										46072
									],
									[
										46338,
										46342
									],
									[
										46604,
										46608
									],
									[
										46923,
										46927
									],
									[
										50447,
										50451
									],
									[
										50782,
										50786
									],
									[
										51563,
										51567
									],
									[
										51848,
										51852
									],
									[
										52362,
										52366
									],
									[
										52578,
										52582
									],
									[
										52978,
										52982
									],
									[
										55579,
										55583
									],
									[
										64708,
										64712
									],
									[
										66928,
										66932
									],
									[
										67088,
										67092
									],
									[
										67568,
										67572
									],
									[
										67986,
										67990
									],
									[
										68411,
										68415
									],
									[
										68836,
										68840
									],
									[
										69226,
										69230
									],
									[
										69692,
										69696
									],
									[
										69730,
										69734
									],
									[
										70123,
										70127
									],
									[
										70138,
										70142
									],
									[
										70471,
										70475
									],
									[
										70963,
										70967
									],
									[
										71179,
										71183
									],
									[
										71509,
										71513
									],
									[
										71895,
										71899
									],
									[
										72138,
										72142
									],
									[
										72837,
										72841
									],
									[
										73422,
										73426
									],
									[
										74132,
										74136
									],
									[
										74427,
										74431
									],
									[
										74740,
										74744
									],
									[
										74789,
										74793
									],
									[
										75049,
										75053
									],
									[
										75065,
										75069
									],
									[
										75281,
										75285
									],
									[
										75317,
										75321
									],
									[
										75535,
										75539
									],
									[
										75551,
										75555
									],
									[
										77898,
										77902
									],
									[
										78298,
										78302
									],
									[
										78615,
										78619
									],
									[
										79022,
										79026
									],
									[
										81788,
										81792
									],
									[
										90475,
										90479
									],
									[
										92781,
										92785
									],
									[
										92941,
										92945
									],
									[
										93385,
										93389
									],
									[
										93764,
										93768
									],
									[
										94133,
										94137
									],
									[
										94349,
										94353
									],
									[
										94697,
										94701
									],
									[
										94995,
										94999
									],
									[
										95261,
										95265
									],
									[
										95530,
										95534
									],
									[
										96978,
										96982
									],
									[
										97322,
										97326
									],
									[
										97360,
										97364
									],
									[
										97700,
										97704
									],
									[
										97715,
										97719
									],
									[
										98048,
										98052
									],
									[
										98487,
										98491
									],
									[
										98703,
										98707
									],
									[
										99394,
										99398
									],
									[
										102091,
										102095
									],
									[
										104876,
										104880
									],
									[
										105454,
										105458
									],
									[
										105845,
										105849
									],
									[
										114977,
										114981
									],
									[
										118821,
										118825
									],
									[
										119211,
										119215
									],
									[
										119514,
										119518
									],
									[
										119785,
										119789
									],
									[
										120028,
										120032
									],
									[
										120273,
										120277
									],
									[
										120573,
										120577
									],
									[
										120732,
										120736
									],
									[
										120989,
										120993
									],
									[
										121290,
										121294
									],
									[
										121506,
										121510
									],
									[
										121739,
										121743
									],
									[
										121955,
										121959
									],
									[
										122257,
										122261
									],
									[
										122586,
										122590
									],
									[
										122595,
										122599
									],
									[
										122964,
										122968
									],
									[
										123276,
										123280
									],
									[
										123778,
										123782
									],
									[
										124285,
										124289
									],
									[
										124346,
										124350
									],
									[
										124443,
										124447
									],
									[
										124523,
										124527
									],
									[
										124634,
										124638
									],
									[
										124723,
										124727
									],
									[
										124800,
										124804
									],
									[
										124886,
										124890
									],
									[
										124914,
										124918
									],
									[
										124977,
										124981
									],
									[
										125005,
										125009
									],
									[
										125258,
										125262
									],
									[
										125286,
										125290
									],
									[
										125348,
										125352
									],
									[
										125376,
										125380
									],
									[
										125482,
										125486
									],
									[
										125510,
										125514
									],
									[
										126177,
										126181
									],
									[
										126227,
										126231
									],
									[
										126868,
										126872
									],
									[
										126934,
										126938
									],
									[
										126996,
										127000
									],
									[
										127737,
										127741
									],
									[
										128304,
										128308
									],
									[
										128366,
										128370
									],
									[
										128876,
										128880
									],
									[
										128968,
										128972
									],
									[
										129037,
										129041
									],
									[
										129128,
										129132
									],
									[
										129144,
										129148
									],
									[
										129724,
										129728
									],
									[
										130116,
										130120
									],
									[
										130304,
										130308
									],
									[
										130475,
										130479
									],
									[
										130649,
										130653
									],
									[
										130763,
										130767
									],
									[
										130920,
										130924
									],
									[
										131160,
										131164
									],
									[
										131226,
										131230
									],
									[
										131328,
										131332
									],
									[
										131413,
										131417
									],
									[
										131578,
										131582
									],
									[
										131672,
										131676
									],
									[
										131754,
										131758
									],
									[
										131845,
										131849
									],
									[
										131873,
										131877
									],
									[
										131941,
										131945
									],
									[
										131969,
										131973
									],
									[
										132127,
										132131
									],
									[
										132155,
										132159
									],
									[
										132222,
										132226
									],
									[
										132250,
										132254
									],
									[
										132410,
										132414
									],
									[
										132438,
										132442
									],
									[
										132746,
										132750
									],
									[
										132801,
										132805
									],
									[
										133187,
										133191
									],
									[
										133262,
										133266
									],
									[
										133333,
										133337
									],
									[
										133782,
										133786
									],
									[
										134235,
										134239
									],
									[
										134306,
										134310
									],
									[
										134700,
										134704
									],
									[
										134797,
										134801
									],
									[
										134871,
										134875
									],
									[
										135002,
										135006
									],
									[
										135018,
										135022
									],
									[
										135657,
										135661
									],
									[
										136458,
										136462
									],
									[
										137337,
										137341
									],
									[
										137352,
										137356
									],
									[
										137685,
										137689
									],
									[
										138106,
										138110
									],
									[
										138448,
										138452
									],
									[
										138463,
										138467
									],
									[
										138796,
										138800
									],
									[
										139180,
										139184
									],
									[
										139488,
										139492
									],
									[
										139800,
										139804
									],
									[
										140132,
										140136
									],
									[
										140457,
										140461
									],
									[
										140838,
										140842
									],
									[
										140997,
										141001
									],
									[
										141291,
										141295
									],
									[
										141573,
										141577
									],
									[
										141911,
										141915
									],
									[
										141926,
										141930
									],
									[
										142259,
										142263
									],
									[
										142679,
										142683
									],
									[
										143020,
										143024
									],
									[
										143035,
										143039
									],
									[
										143368,
										143372
									],
									[
										143751,
										143755
									],
									[
										144058,
										144062
									],
									[
										144369,
										144373
									],
									[
										144700,
										144704
									],
									[
										145024,
										145028
									],
									[
										145404,
										145408
									],
									[
										145563,
										145567
									],
									[
										145856,
										145860
									],
									[
										146137,
										146141
									],
									[
										149633,
										149637
									],
									[
										150365,
										150369
									],
									[
										150851,
										150855
									],
									[
										151166,
										151170
									],
									[
										151407,
										151411
									],
									[
										151799,
										151803
									],
									[
										152105,
										152109
									],
									[
										152455,
										152459
									],
									[
										152493,
										152497
									],
									[
										152799,
										152803
									],
									[
										152814,
										152818
									],
									[
										153147,
										153151
									],
									[
										153572,
										153576
									],
									[
										153943,
										153947
									],
									[
										154267,
										154271
									],
									[
										154282,
										154286
									],
									[
										154615,
										154619
									],
									[
										170519,
										170523
									],
									[
										180321,
										180325
									],
									[
										180802,
										180806
									],
									[
										181136,
										181140
									],
									[
										181473,
										181477
									],
									[
										181805,
										181809
									],
									[
										182136,
										182140
									],
									[
										182467,
										182471
									],
									[
										182802,
										182806
									],
									[
										183137,
										183141
									],
									[
										183468,
										183472
									],
									[
										183792,
										183796
									],
									[
										184074,
										184078
									],
									[
										184372,
										184376
									],
									[
										184728,
										184732
									],
									[
										184887,
										184891
									],
									[
										185125,
										185129
									],
									[
										185427,
										185431
									],
									[
										185442,
										185446
									],
									[
										185780,
										185784
									],
									[
										186154,
										186158
									],
									[
										186370,
										186374
									],
									[
										188802,
										188806
									],
									[
										189227,
										189231
									],
									[
										189569,
										189573
									],
									[
										189937,
										189941
									],
									[
										190228,
										190232
									],
									[
										190522,
										190526
									],
									[
										198770,
										198774
									],
									[
										211836,
										211840
									],
									[
										212164,
										212168
									],
									[
										212532,
										212536
									],
									[
										212691,
										212695
									],
									[
										213360,
										213364
									],
									[
										216106,
										216110
									],
									[
										218940,
										218944
									],
									[
										219567,
										219571
									],
									[
										219973,
										219977
									],
									[
										220065,
										220069
									],
									[
										220268,
										220272
									],
									[
										220417,
										220421
									],
									[
										220786,
										220790
									],
									[
										220801,
										220805
									],
									[
										221134,
										221138
									],
									[
										221571,
										221575
									],
									[
										221586,
										221590
									],
									[
										221919,
										221923
									],
									[
										222466,
										222470
									],
									[
										222837,
										222841
									],
									[
										223215,
										223219
									],
									[
										223813,
										223817
									],
									[
										224459,
										224463
									],
									[
										240324,
										240328
									],
									[
										250182,
										250186
									],
									[
										250719,
										250723
									],
									[
										251109,
										251113
									],
									[
										251502,
										251506
									],
									[
										251890,
										251894
									],
									[
										252277,
										252281
									],
									[
										252664,
										252668
									],
									[
										253055,
										253059
									],
									[
										253446,
										253450
									],
									[
										253833,
										253837
									],
									[
										254127,
										254131
									],
									[
										254423,
										254427
									],
									[
										254734,
										254738
									],
									[
										257401,
										257405
									],
									[
										266669,
										266673
									],
									[
										269404,
										269408
									],
									[
										269564,
										269568
									],
									[
										270015,
										270019
									],
									[
										270404,
										270408
									],
									[
										270800,
										270804
									],
									[
										271196,
										271200
									],
									[
										271557,
										271561
									],
									[
										271872,
										271876
									],
									[
										272242,
										272246
									],
									[
										272608,
										272612
									],
									[
										273004,
										273008
									],
									[
										273009,
										273013
									],
									[
										275013,
										275017
									],
									[
										275034,
										275038
									],
									[
										275141,
										275145
									],
									[
										275482,
										275486
									],
									[
										275503,
										275507
									],
									[
										275610,
										275614
									],
									[
										275934,
										275938
									],
									[
										276279,
										276283
									],
									[
										276552,
										276556
									],
									[
										276848,
										276852
									],
									[
										277977,
										277981
									],
									[
										300966,
										300970
									],
									[
										301260,
										301264
									],
									[
										301585,
										301589
									],
									[
										301744,
										301748
									],
									[
										302026,
										302030
									],
									[
										302304,
										302308
									],
									[
										302931,
										302935
									],
									[
										305632,
										305636
									],
									[
										308421,
										308425
									],
									[
										309003,
										309007
									],
									[
										309402,
										309406
									],
									[
										309712,
										309716
									],
									[
										309981,
										309985
									],
									[
										310278,
										310282
									],
									[
										310529,
										310533
									],
									[
										310803,
										310807
									],
									[
										311585,
										311589
									],
									[
										312150,
										312154
									],
									[
										312559,
										312563
									],
									[
										313354,
										313358
									],
									[
										315939,
										315943
									],
									[
										319287,
										319291
									],
									[
										319314,
										319318
									],
									[
										319345,
										319349
									],
									[
										319375,
										319379
									],
									[
										319592,
										319596
									],
									[
										323961,
										323965
									],
									[
										324116,
										324120
									],
									[
										324143,
										324147
									],
									[
										324186,
										324190
									],
									[
										324222,
										324226
									],
									[
										324338,
										324342
									],
									[
										324630,
										324634
									],
									[
										324737,
										324741
									],
									[
										324764,
										324768
									],
									[
										324775,
										324779
									],
									[
										324866,
										324870
									],
									[
										324893,
										324897
									],
									[
										324931,
										324935
									],
									[
										325033,
										325037
									],
									[
										325071,
										325075
									],
									[
										325166,
										325170
									],
									[
										325204,
										325208
									],
									[
										325313,
										325317
									],
									[
										325329,
										325333
									],
									[
										325448,
										325452
									],
									[
										325560,
										325564
									],
									[
										325805,
										325809
									],
									[
										325983,
										325987
									],
									[
										326093,
										326097
									],
									[
										326236,
										326240
									],
									[
										326387,
										326391
									],
									[
										326526,
										326530
									],
									[
										326723,
										326727
									],
									[
										326824,
										326828
									],
									[
										326835,
										326839
									],
									[
										327234,
										327238
									],
									[
										327546,
										327550
									],
									[
										328310,
										328314
									],
									[
										328895,
										328899
									],
									[
										329604,
										329608
									],
									[
										329619,
										329623
									],
									[
										329952,
										329956
									],
									[
										330316,
										330320
									],
									[
										332804,
										332808
									],
									[
										332828,
										332832
									],
									[
										333041,
										333045
									],
									[
										333065,
										333069
									],
									[
										333118,
										333122
									],
									[
										333792,
										333796
									],
									[
										333816,
										333820
									],
									[
										333965,
										333969
									],
									[
										333989,
										333993
									],
									[
										334054,
										334058
									],
									[
										334392,
										334396
									],
									[
										334602,
										334606
									],
									[
										334764,
										334768
									],
									[
										334882,
										334886
									],
									[
										334971,
										334975
									],
									[
										335128,
										335132
									],
									[
										335302,
										335306
									],
									[
										335520,
										335524
									],
									[
										335835,
										335839
									],
									[
										336277,
										336281
									],
									[
										336442,
										336446
									],
									[
										336483,
										336487
									],
									[
										336624,
										336628
									],
									[
										336793,
										336797
									],
									[
										336834,
										336838
									],
									[
										336980,
										336984
									],
									[
										337145,
										337149
									],
									[
										337186,
										337190
									],
									[
										337463,
										337467
									],
									[
										337513,
										337517
									],
									[
										337702,
										337706
									],
									[
										338165,
										338169
									],
									[
										338255,
										338259
									],
									[
										338535,
										338539
									],
									[
										338698,
										338702
									],
									[
										338974,
										338978
									],
									[
										339059,
										339063
									],
									[
										339349,
										339353
									],
									[
										339564,
										339568
									],
									[
										339936,
										339940
									],
									[
										340272,
										340276
									],
									[
										340588,
										340592
									],
									[
										340775,
										340779
									],
									[
										340829,
										340833
									],
									[
										340888,
										340892
									],
									[
										340941,
										340945
									],
									[
										341138,
										341142
									],
									[
										341217,
										341221
									],
									[
										341265,
										341269
									],
									[
										341344,
										341348
									],
									[
										341532,
										341536
									],
									[
										341790,
										341794
									],
									[
										341935,
										341939
									],
									[
										341976,
										341980
									],
									[
										342231,
										342235
									],
									[
										342240,
										342244
									],
									[
										343771,
										343775
									],
									[
										343794,
										343798
									],
									[
										346321,
										346325
									],
									[
										346338,
										346342
									],
									[
										346366,
										346370
									],
									[
										346388,
										346392
									],
									[
										346471,
										346475
									],
									[
										346510,
										346514
									],
									[
										346559,
										346563
									],
									[
										346851,
										346855
									],
									[
										346935,
										346939
									],
									[
										347345,
										347349
									],
									[
										347355,
										347359
									],
									[
										349663,
										349667
									],
									[
										352010,
										352014
									],
									[
										354200,
										354204
									],
									[
										354958,
										354962
									],
									[
										355054,
										355058
									],
									[
										357719,
										357723
									],
									[
										357732,
										357736
									],
									[
										358601,
										358605
									],
									[
										358614,
										358618
									],
									[
										359050,
										359054
									],
									[
										359391,
										359395
									],
									[
										359719,
										359723
									],
									[
										360071,
										360075
									],
									[
										360383,
										360387
									],
									[
										360398,
										360402
									],
									[
										360731,
										360735
									],
									[
										361003,
										361007
									],
									[
										361440,
										361444
									],
									[
										361506,
										361510
									],
									[
										361865,
										361869
									],
									[
										361923,
										361927
									],
									[
										362166,
										362170
									],
									[
										362174,
										362178
									],
									[
										362342,
										362346
									],
									[
										362350,
										362354
									],
									[
										362745,
										362749
									],
									[
										363063,
										363067
									],
									[
										363403,
										363407
									],
									[
										363706,
										363710
									],
									[
										363973,
										363977
									],
									[
										364006,
										364010
									],
									[
										364170,
										364174
									],
									[
										364203,
										364207
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/aeife/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 480,
						"regions":
						{
						},
						"selection":
						[
							[
								236,
								373
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 343.0
	},
	"output.git":
	{
		"height": 102.0
	},
	"project": "multicollide.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 160.0,
		"selected_items":
		[
		],
		"width": 1342.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 240.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
